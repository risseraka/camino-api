[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "camino-api/.external-ecmascript.js",
    "static": true,
    "longname": "camino-api/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "camino-api/api/_file-import.js",
    "content": "const fs = require('fs')\nconst path = require('path')\n\nmodule.exports = (d, p) => fs.readFileSync(path.join(d, p), 'utf8')\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/_file-import.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "_fileimport",
    "memberof": "camino-api/api/_file-import.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/api/_file-import.js~_fileimport",
    "access": "private",
    "export": true,
    "importPath": "camino-api/camino-api/api/_file-import.js",
    "importStyle": "_fileimport",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "d",
        "types": [
          "*"
        ]
      },
      {
        "name": "p",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "camino-api/api/resolvers/_format.js",
    "content": "const {\n  geojsonFeatureMultiPolygon,\n  geojsonFeatureCollectionPoints\n} = require('./_geojson')\n\nconst titreFormat = t => {\n  t.references =\n    t.references &&\n    Object.keys(t.references).map(r => ({\n      type: r,\n      valeur: t.references[r]\n    }))\n\n  if (t.points && t.points.length) {\n    t.geojsonMultiPolygon = geojsonFeatureMultiPolygon(t.points)\n    t.geojsonPoints = geojsonFeatureCollectionPoints(t.points)\n  }\n\n  t.demarches &&\n    t.demarches.forEach(d => {\n      d.etapes &&\n        d.etapes.forEach(e => {\n          if (e.points.length) {\n            e.geojsonMultiPolygon = geojsonFeatureMultiPolygon(e.points)\n            e.geojsonPoints = geojsonFeatureCollectionPoints(e.points)\n          }\n        })\n    })\n\n  if (t.volumeEtape) {\n    t.volume = t.volumeEtape.volume\n    t.volumeUnite = t.volumeEtape.volumeUnite\n  }\n\n  if (t.surfaceEtape) {\n    t.surface = t.surfaceEtape.surface\n  }\n\n  return t\n}\n\nmodule.exports = { titreFormat }\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers/_format.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "titreFormat",
    "memberof": "camino-api/api/resolvers/_format.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/api/resolvers/_format.js~titreFormat",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/resolvers/_format.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "file",
    "name": "camino-api/api/resolvers/_geojson.js",
    "content": "const geojsonMultiPolygonCoordinates = points =>\n  points.reduce((res, p) => {\n    res[p.groupe] = res[p.groupe] || []\n    res[p.groupe][p.contour] = res[p.groupe][p.contour] || []\n    res[p.groupe][p.contour][p.point] = [p.coordonnees.x, p.coordonnees.y]\n    return res\n  }, [])\n\nconst geojsonFeatureMultiPolygon = points => ({\n  type: 'Feature',\n  geometry: {\n    type: 'MultiPolygon',\n    coordinates: geojsonMultiPolygonCoordinates(points)\n  }\n})\n\nconst geojsonFeatureCollectionPoints = points => {\n  return {\n    type: 'FeatureCollection',\n    features: [\n      ...points.map(p => ({\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [p.coordonnees.x, p.coordonnees.y]\n        },\n        properties: {\n          groupe: p.groupe,\n          contour: p.contour,\n          point: p.point\n        }\n      }))\n    ]\n  }\n}\n\nmodule.exports = {\n  geojsonMultiPolygonCoordinates,\n  geojsonFeatureMultiPolygon,\n  geojsonFeatureCollectionPoints\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers/_geojson.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "geojsonMultiPolygonCoordinates",
    "memberof": "camino-api/api/resolvers/_geojson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/api/resolvers/_geojson.js~geojsonMultiPolygonCoordinates",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/resolvers/_geojson.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "points",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "geojsonFeatureMultiPolygon",
    "memberof": "camino-api/api/resolvers/_geojson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/api/resolvers/_geojson.js~geojsonFeatureMultiPolygon",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/resolvers/_geojson.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "points",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "geojsonFeatureCollectionPoints",
    "memberof": "camino-api/api/resolvers/_geojson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/api/resolvers/_geojson.js~geojsonFeatureCollectionPoints",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/resolvers/_geojson.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "points",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"features\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "camino-api/api/resolvers/_permissions-check.js",
    "content": "const permissionsCheck = (user, permissions) =>\n  user && user.permission && permissions.includes(user.permission.id)\n\nmodule.exports = permissionsCheck\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers/_permissions-check.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "permissionsCheck",
    "memberof": "camino-api/api/resolvers/_permissions-check.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/api/resolvers/_permissions-check.js~permissionsCheck",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/api/resolvers/_permissions-check.js",
    "importStyle": "permissionsCheck",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "user",
        "types": [
          "*"
        ]
      },
      {
        "name": "permissions",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "camino-api/api/resolvers/_restrictions.js",
    "content": "const { debug } = require('../../config/index')\n\nmodule.exports = {\n  restrictedDomaineIds: debug ? [] : ['f', 'r', 's'],\n  restrictedStatutIds: debug ? [] : ['dmc', 'ech', 'ind']\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers/_restrictions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "camino-api/api/resolvers/entreprises.js",
    "content": "const {\n  entrepriseGet,\n  entreprisesGet\n} = require('../../database/queries/entreprises')\nconst permissionsCheck = require('./_permissions-check')\n\nconst resolvers = {\n  async entreprise({ id }, context, info) {\n    if (context.user && permissionsCheck(context.user, ['super', 'admin'])) {\n      return entrepriseGet(id)\n    }\n\n    return null\n  },\n\n  async entreprises({ noms }, context, info) {\n    if (context.user && permissionsCheck(context.user, ['super', 'admin'])) {\n      return entreprisesGet({ noms })\n    }\n\n    return null\n  }\n}\n\nmodule.exports = resolvers\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers/entreprises.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "resolvers",
    "memberof": "camino-api/api/resolvers/entreprises.js",
    "static": true,
    "longname": "camino-api/api/resolvers/entreprises.js~resolvers",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/api/resolvers/entreprises.js",
    "importStyle": "resolvers",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "{\"entreprise\": function, \"entreprises\": function}"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "camino-api/api/resolvers/metas.js",
    "content": "const permissionsCheck = require('./_permissions-check')\n\nconst { restrictedDomaineIds, restrictedStatutIds } = require('./_restrictions')\n\nconst {\n  typesGet,\n  domainesGet,\n  statutsGet,\n  demarchesTypesGet\n} = require('../../database/queries/metas')\n\nconst check = (elements, restrictedList) =>\n  elements.filter(element => !restrictedList.find(id => id === element.id))\n\nconst resolvers = {\n  async metas(variables, context, info) {\n    const types = await typesGet()\n    let domaines = await domainesGet()\n    let statuts = await statutsGet()\n    let demarchesTypes\n\n    if (!context.user) {\n      domaines = check(domaines, restrictedDomaineIds)\n      statuts = check(statuts, restrictedStatutIds)\n    }\n\n    if (permissionsCheck(context.user, ['super', 'admin'])) {\n      demarchesTypes = demarchesTypesGet()\n    }\n\n    return {\n      types,\n      domaines,\n      statuts,\n      demarchesTypes\n    }\n  }\n}\n\nmodule.exports = resolvers\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers/metas.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "check",
    "memberof": "camino-api/api/resolvers/metas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/api/resolvers/metas.js~check",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/resolvers/metas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "elements",
        "types": [
          "*"
        ]
      },
      {
        "name": "restrictedList",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "resolvers",
    "memberof": "camino-api/api/resolvers/metas.js",
    "static": true,
    "longname": "camino-api/api/resolvers/metas.js~resolvers",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/api/resolvers/metas.js",
    "importStyle": "resolvers",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{\"metas\": function}"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "camino-api/api/resolvers/permissions.js",
    "content": "const {\n  permissionGet,\n  permissionsGet\n} = require('../../database/queries/permissions')\n\nconst permissionsCheck = require('./_permissions-check')\n\nconst resolvers = {\n  async permissions(_, context) {\n    if (permissionsCheck(context.user, ['super', 'admin'])) {\n      return permissionsGet({\n        ordreMax: context.user ? context.user.permission.ordre : null\n      })\n    }\n\n    return null\n  },\n  async permission({ id }, context) {\n    return permissionGet(id)\n  }\n}\n\nmodule.exports = resolvers\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers/permissions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "resolvers",
    "memberof": "camino-api/api/resolvers/permissions.js",
    "static": true,
    "longname": "camino-api/api/resolvers/permissions.js~resolvers",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/api/resolvers/permissions.js",
    "importStyle": "resolvers",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"permissions\": function, \"permission\": function}"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "camino-api/api/resolvers/substances.js",
    "content": "const {\n  substanceGet,\n  substancesGet\n} = require('../../database/queries/substances')\n\nconst resolvers = {\n  async substances(_, context) {\n    return substancesGet({})\n  },\n  async substance({ id }, context) {\n    return substanceGet(id)\n  }\n}\n\nmodule.exports = resolvers\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers/substances.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "resolvers",
    "memberof": "camino-api/api/resolvers/substances.js",
    "static": true,
    "longname": "camino-api/api/resolvers/substances.js~resolvers",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/api/resolvers/substances.js",
    "importStyle": "resolvers",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "{\"substances\": function, \"substance\": function}"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "camino-api/api/resolvers/titres-travaux.js",
    "content": "const emailsBatch = require('../../tools/mailer/batch')\nconst dateFormat = require('dateformat')\n\nconst {\n  titresTravauxRapportGet,\n  titreTravauxRapportUpdate\n} = require('../../database/queries/titres-travaux')\n\nconst {\n  utilisateurGet,\n  utilisateursGet\n} = require('../../database/queries/utilisateurs')\n\nconst { titreGet } = require('../../database/queries/titres')\n\nconst permissionsCheck = require('./_permissions-check')\n\nconst {\n  titreTravauxRapportRowUpdate\n} = require('../../tools/export/titre-travaux-rapport')\n\nconst resolvers = {\n  async titreTravauxRapportModifier({ rapport }, context, info) {\n    const errors = []\n    const titre = await titreGet(rapport.titreId)\n    const user = await utilisateurGet(context.user.id)\n    const rapportOld = await titresTravauxRapportGet(rapport.id)\n\n    if (\n      !(\n        permissionsCheck(context.user, ['super', 'admin']) ||\n        (permissionsCheck(context.user, ['entreprise']) &&\n          titre.titulaires.find(t => t.id === user.entrepriseId))\n      )\n    ) {\n      errors.push(\"droits insuffisants pour effectuer l'opération\")\n    }\n\n    if (\n      !(\n        titre.domaineId === 'm' &&\n        (titre.typeId === 'cxx' ||\n          titre.typeId === 'pxm' ||\n          titre.typeId === 'axm')\n      )\n    ) {\n      errors.push('ce titre ne peut pas recevoir de rapport')\n    }\n\n    if (rapportOld && rapportOld.confirmation) {\n      errors.push('ce rapport a été validé et ne peux plus être modifié')\n    }\n\n    if (!errors.length) {\n      titreTravauxRapportRowUpdate(rapport)\n\n      if (rapport.confirmation) {\n        const utilisateurs = await utilisateursGet({\n          entrepriseIds: titre.titulaires.map(t => t.id),\n          noms: undefined,\n          administrationIds: undefined,\n          permissionIds: undefined\n        })\n        const emails = utilisateurs.reduce(\n          (res, u) => (u.email ? [...res, u.email] : res),\n          // si la variable d'environnement existe,\n          // on ajoute un email générique pour recevoir une copie\n          process.env.TRAVAUX_RAPPORTS_EMAIL\n            ? [process.env.TRAVAUX_RAPPORTS_EMAIL]\n            : []\n        )\n        const subject = `[Camino] Rapport trimestriel ${titre.nom}, ${\n          rapport.contenu.trimestre\n        } trimestre ${rapport.contenu.annee}`\n        const html = emailFormat(titre, user, rapport)\n\n        await emailsBatch(emails, subject, html)\n      }\n\n      return titreTravauxRapportUpdate({\n        titreTravauxRapport: rapport\n      })\n    } else {\n      throw new Error(errors.join(', '))\n    }\n  }\n}\n\nconst emailFormat = (titre, user, rapport) => {\n  const header = `\n<h1>Rapport trimestriel ${titre.nom}, ${rapport.contenu.trimestre} trimestre ${\n    rapport.contenu.annee\n  }</h1>\n\n<hr>\n\n<b>Lien</b> : ${process.env.UI_URL}/titres/${rapport.titreId} <br>\n\n<b>Rempli par</b> : ${user.prenom} ${user.nom} (${user.email}) <br>\n\n<b>Date</b> : ${dateFormat(rapport.date, 'dd-mm-yyyy')} <br>\n\n<hr>\n\n<ul>\n  <li><b>Or net extrait (g)</b> : ${rapport.contenu.or}</li>\n  <li><b>Mercure récupéré (g)</b> : ${rapport.contenu.mercure}</li>\n  <li><b>Carburant détaxé (l)</b> : ${rapport.contenu.carburantDetaxe}</li>\n  <li><b>Carburant conventionnel (l)</b> : ${\n    rapport.contenu.carburantConventionnel\n  }</li>\n  <li><b>Pompes actives</b> : ${rapport.contenu.pompes}</li>\n  <li><b>Pelles actives</b> : ${rapport.contenu.pelles}</li>\n  <li><b>Effectifs</b> : ${rapport.contenu.effectifs}</li>\n  <li>\n    <b>Dépenses relatives à la protection de l’environnement (euros)</b> : ${\n      rapport.contenu.environnement\n    }\n  </li>\n</ul>\n\n<hr>\n\n<h2>Travaux</h2>`\n\n  const body = rapport.contenu.travaux.reduce(\n    (res, mois) => `\n${res}\n    \n<hr>\n\n<h3>${mois.nom} ${rapport.contenu.annee}</h3>\n\n<ul>\n  <li>Non débutés : ${mois.nonDebutes ? 'Oui' : 'Non'}</li>\n  <li>Exploitation en cours : ${mois.exploitationEnCours ? 'Oui' : 'Non'}</li>\n  <li>Arrêt temporaire : ${mois.arretTemporaire ? 'Oui' : 'Non'}</li>\n  <li>Réhabilitation : ${mois.rehabilitation ? 'Oui' : 'Non'}</li>\n  <li>Arrêt définitif (après réhabilitation) : ${\n    mois.arretDefinitif ? 'Oui' : 'Non'\n  }</li>\n</ul>`,\n    ''\n  )\n\n  const footer = rapport.contenu.complement\n    ? `<hr>\n\n<h2>Informations complémentaires</h2>\n\n<p>${rapport.contenu.complement}</p>\n`\n    : ''\n\n  return `\n${header}\n${body}\n${footer}\n`\n}\n\nmodule.exports = resolvers\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers/titres-travaux.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "emailFormat",
    "memberof": "camino-api/api/resolvers/titres-travaux.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/api/resolvers/titres-travaux.js~emailFormat",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/resolvers/titres-travaux.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "titre",
        "types": [
          "*"
        ]
      },
      {
        "name": "user",
        "types": [
          "*"
        ]
      },
      {
        "name": "rapport",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "name": "resolvers",
    "memberof": "camino-api/api/resolvers/titres-travaux.js",
    "static": true,
    "longname": "camino-api/api/resolvers/titres-travaux.js~resolvers",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/api/resolvers/titres-travaux.js",
    "importStyle": "resolvers",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "{\"titreTravauxRapportModifier\": function}"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "camino-api/api/resolvers/titres.js",
    "content": "const permissionsCheck = require('./_permissions-check')\n\nconst { restrictedDomaineIds, restrictedStatutIds } = require('./_restrictions')\n\nconst {\n  titreGet,\n  titresGet,\n  titreAdd,\n  titreRemove,\n  titreUpdate\n} = require('../../database/queries/titres')\n\nconst { domainesGet, statutsGet } = require('../../database/queries/metas')\n\nconst { titreEtapeUpsert } = require('../../database/queries/titres-etapes')\n\nconst titreEtapeUpdateTasks = require('../../tasks/etape-update/index')\n\nconst { titreFormat } = require('./_format')\n\nconst resolvers = {\n  async titre({ id }, context, info) {\n    let titre = await titreGet(id)\n\n    if (\n      titre &&\n      (!context.user ||\n        permissionsCheck(context.user, ['defaut', 'entreprise']))\n    ) {\n      if (\n        restrictedDomaineIds.includes(titre.domaineId) ||\n        restrictedStatutIds.includes(titre.statutId)\n      ) {\n        titre = null\n      }\n    }\n\n    return titre && titreFormat(titre)\n  },\n\n  async titres(\n    {\n      typeIds,\n      domaineIds,\n      statutIds,\n      substances,\n      noms,\n      entreprises,\n      references\n    },\n    context,\n    info\n  ) {\n    if (\n      !context.user ||\n      permissionsCheck(context.user, ['defaut', 'entreprise'])\n    ) {\n      if (!domaineIds) {\n        let domaines = await domainesGet()\n        domaineIds = domaines.map(domaine => domaine.id)\n      }\n      domaineIds = domaineIds.filter(id => !restrictedDomaineIds.includes(id))\n\n      if (!statutIds) {\n        let statuts = await statutsGet()\n        statutIds = statuts.map(statut => statut.id)\n      }\n\n      statutIds = statutIds.filter(id => !restrictedStatutIds.includes(id))\n    }\n\n    const titres = await titresGet({\n      typeIds,\n      domaineIds,\n      statutIds,\n      substances,\n      noms,\n      entreprises,\n      references\n    })\n\n    return titres.map(titre => titre && titreFormat(titre))\n  },\n\n  async titreAjouter({ titre }, context, info) {\n    const errors = []\n\n    if (!permissionsCheck(context.user, ['super', 'admin'])) {\n      errors.push('opération impossible')\n    }\n\n    if (!errors.length) {\n      return titreAdd(titre)\n    } else {\n      throw new Error(errors.join(', '))\n    }\n  },\n\n  async titreSupprimer({ id }, context, info) {\n    const errors = []\n\n    if (!permissionsCheck(context.user, ['super', 'admin'])) {\n      errors.push('opération impossible')\n    }\n\n    if (!errors.length) {\n      return titreRemove(id)\n    } else {\n      throw new Error(errors.join(', '))\n    }\n  },\n\n  async titreModifier({ titre }, context, info) {\n    const errors = []\n\n    if (!permissionsCheck(context.user, ['super', 'admin'])) {\n      errors.push('opération impossible')\n    }\n\n    if (!errors.length) {\n      return titreUpdate(titre)\n    } else {\n      throw new Error(errors.join(', '))\n    }\n  },\n\n  async titreEtapeModifier({ etape }, context, info) {\n    const errors = []\n\n    if (!permissionsCheck(context.user, ['super', 'admin'])) {\n      errors.push('opération impossible')\n    }\n\n    if (!errors.length) {\n      // si l'id de l'étape ne correspond pas à son type\n      const etapeTypeIdSlug = etape.id.slice(-5, -2)\n      const etapeTypeId = etape.type.id\n      console.log(etapeTypeIdSlug, etapeTypeId)\n      if (etapeTypeIdSlug !== etapeTypeId) {\n        // mettre à jour l'id de l'étape et les ids de ses enfants\n        const etapeIdUpdated = etapeIdUpdate(etape)\n        console.log(etapeIdUpdated)\n        // supprimer l'ancienne étape et ses enfants\n        // ajouter la nouvelle étape et ses enfants\n      }\n\n      const res = await titreEtapeUpsert(etape)\n      await titreEtapeUpdateTasks(etape)\n\n      return res\n    } else {\n      throw new Error(errors.join(', '))\n    }\n  }\n}\n\nconst etapeIdUpdate = etape => {\n  const props = [\n    'substances',\n    'points',\n    'titulaires',\n    'amodiataires',\n    'administrations',\n    'documents',\n    'communes',\n    'emprises'\n  ]\n\n  return etape\n}\n\nmodule.exports = resolvers\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers/titres.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "etapeIdUpdate",
    "memberof": "camino-api/api/resolvers/titres.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/api/resolvers/titres.js~etapeIdUpdate",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/resolvers/titres.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "params": [
      {
        "name": "etape",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "resolvers",
    "memberof": "camino-api/api/resolvers/titres.js",
    "static": true,
    "longname": "camino-api/api/resolvers/titres.js~resolvers",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/api/resolvers/titres.js",
    "importStyle": "resolvers",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{\"titre\": function, \"titres\": function, \"titreAjouter\": function, \"titreSupprimer\": function, \"titreModifier\": function, \"titreEtapeModifier\": function}"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "camino-api/api/resolvers/utilisateurs.js",
    "content": "const bcrypt = require('bcrypt')\nconst jwt = require('jsonwebtoken')\nconst emailRegex = require('email-regex')\nconst cryptoRandomString = require('crypto-random-string')\nconst mailer = require('../../tools/mailer/index')\n\nconst {\n  utilisateurGet,\n  utilisateursGet,\n  utilisateurAdd,\n  utilisateurUpdate,\n  utilisateurRemove,\n  utilisateurByEmailGet\n} = require('../../database/queries/utilisateurs')\n\nconst permissionsCheck = require('./_permissions-check')\n\nconst permissionsVisibleForAdmin = [\n  'admin',\n  'editeur',\n  'lecteur',\n  'entreprise',\n  'defaut'\n]\n\nconst utilisateurErreurs = async utilisateur => {\n  const errors = []\n\n  if (!utilisateur.prenom) {\n    errors.push('prénom manquant')\n  }\n\n  if (!utilisateur.nom) {\n    errors.push('nom manquant')\n  }\n\n  if (!utilisateur.email) {\n    errors.push('email manquant')\n  } else if (!emailRegex({ exact: true }).test(utilisateur.email)) {\n    errors.push('adresse email invalide')\n  }\n\n  return errors\n}\n\nconst userIdGenerate = async () => {\n  const id = cryptoRandomString(6)\n  const utilisateurWithTheSameId = await utilisateurGet(id)\n  if (utilisateurWithTheSameId) {\n    return userIdGenerate()\n  }\n\n  return id\n}\n\nconst resolvers = {\n  async utilisateur({ id }, context, info) {\n    if (\n      permissionsCheck(context.user, ['super']) ||\n      (context.user && context.user.id === id)\n    ) {\n      return utilisateurGet(id)\n    } else if (context.user && permissionsCheck(context.user, ['admin'])) {\n      const utilisateur = await utilisateurGet(id)\n\n      if (permissionsCheck(utilisateur, permissionsVisibleForAdmin)) {\n        return utilisateur\n      } else {\n        return null\n      }\n    }\n\n    return null\n  },\n\n  async utilisateurs(\n    { entrepriseIds, administrationIds, permissionIds, noms },\n    context,\n    info\n  ) {\n    if (context.user && permissionsCheck(context.user, ['super', 'admin'])) {\n      if (permissionsCheck(context.user, ['admin'])) {\n        if (permissionIds) {\n          permissionIds = permissionIds.filter(id =>\n            permissionsVisibleForAdmin.includes(id)\n          )\n        } else {\n          permissionIds = permissionsVisibleForAdmin\n        }\n      }\n\n      const utilisateurs = await utilisateursGet({\n        noms,\n        entrepriseIds,\n        administrationIds,\n        permissionIds\n      })\n\n      return utilisateurs\n    }\n    return null\n  },\n\n  async utilisateurIdentifier(variables, context, info) {\n    const utilisateur =\n      context.user &&\n      context.user.login &&\n      (await utilisateurGet(context.user.id))\n\n    return utilisateur\n  },\n\n  async utilisateurConnecter({ email, motDePasse }, context, info) {\n    const errors = []\n    let token\n    let utilisateur\n    const emailIsValid = emailRegex({ exact: true }).test(email)\n\n    if (!email) {\n      errors.push('adresse email manquante')\n    }\n\n    if (!emailIsValid) {\n      errors.push('adresse email invalide')\n    }\n\n    if (!motDePasse) {\n      errors.push('mot de passe manquant')\n    }\n\n    if (email && emailIsValid && motDePasse) {\n      utilisateur = await utilisateurByEmailGet(email)\n\n      if (utilisateur) {\n        const valid = await bcrypt.compare(motDePasse, utilisateur.motDePasse)\n\n        if (!valid) {\n          errors.push('mot de passe incorrect')\n        }\n      } else {\n        errors.push('aucun utilisateur enregistré avec cette adresse email')\n      }\n    }\n\n    if (!errors.length && utilisateur) {\n      token = jwt.sign(\n        {\n          id: utilisateur.id,\n          email: utilisateur.email,\n          permission: utilisateur.permission,\n          login: true\n        },\n        process.env.JWT_SECRET\n      )\n    } else {\n      throw new Error(errors.join(', '))\n    }\n\n    return { token, utilisateur }\n  },\n\n  async utilisateurAjouter({ utilisateur }, context) {\n    const errors = await utilisateurErreurs(utilisateur)\n\n    if (utilisateur.email) {\n      const utilisateurWithTheSameEmail = await utilisateurByEmailGet(\n        utilisateur.email\n      )\n\n      if (utilisateurWithTheSameEmail) {\n        errors.push('un utilisateur avec cet email existe déjà')\n      }\n    }\n\n    if (!utilisateur.motDePasse) {\n      errors.push('mot de passe manquant')\n    } else if (utilisateur.motDePasse.length < 8) {\n      errors.push('le mot de passe doit contenir au moins 8 caractères')\n    }\n\n    if (\n      !permissionsCheck(context.user, ['super', 'admin']) ||\n      !utilisateur.permission\n    ) {\n      utilisateur.permission = { id: 'defaut' }\n    }\n\n    if (\n      !permissionsCheck(context.user, ['super']) &&\n      utilisateur.permission.id === 'super'\n    ) {\n      errors.push(\n        'droits insuffisants pour créer un utilisateur avec ces permissions'\n      )\n    }\n\n    if (\n      !permissionsCheck(context.user, ['super', 'admin']) &&\n      context.user.email !== utilisateur.email\n    ) {\n      errors.push(\n        'droits insuffisants pour créer un compte avec cette adresse email'\n      )\n    }\n\n    if (!errors.length) {\n      utilisateur.motDePasse = await bcrypt.hash(utilisateur.motDePasse, 10)\n      utilisateur.id = await userIdGenerate()\n\n      const res = await utilisateurAdd(utilisateur)\n\n      return res\n    } else {\n      throw new Error(errors.join(', '))\n    }\n  },\n\n  async utilisateurAjoutEmailEnvoyer({ email }, context) {\n    const errors = []\n    let utilisateur\n\n    console.log('email', email)\n    const emailIsValid = emailRegex({ exact: true }).test(email)\n\n    if (!email) {\n      errors.push('email manquant')\n    } else if (!emailIsValid) {\n      errors.push('adresse email invalide')\n    } else {\n      utilisateur = await utilisateurByEmailGet(email)\n\n      if (utilisateur) {\n        errors.push(\n          'un utilisateur est déjà enregistré avec cette adresse email'\n        )\n      }\n    }\n\n    if (!errors.length) {\n      const token = jwt.sign({ email }, process.env.JWT_SECRET)\n\n      const url = `${\n        process.env.UI_URL\n      }/creation-de-compte?token=${token}&email=${email}`\n\n      const subject = `[Camino] Création de votre compte utilisateur`\n      const html = `<p>Pour créer votre compte, <a href=\"${url}\">cliquez ici</a>.</p>`\n\n      try {\n        mailer(email, subject, html)\n      } catch (e) {\n        return \"erreur lors de l'envoi d'email\"\n      }\n\n      return 'un lien pour créer votre compte vous a été envoyé par email'\n    } else {\n      throw new Error(errors.join(', '))\n    }\n  },\n\n  async utilisateurModifier({ utilisateur }, context) {\n    if (\n      permissionsCheck(context.user, ['super', 'admin']) ||\n      context.user.id === utilisateur.id\n    ) {\n      let res\n      const errors = await utilisateurErreurs(utilisateur)\n\n      if (!utilisateur.id) {\n        errors.push('id manquante')\n      }\n\n      if (!errors.length) {\n        res = await utilisateurUpdate(utilisateur)\n      } else {\n        throw new Error(errors.join(', '))\n      }\n\n      return res\n    } else {\n      throw new Error(\"droits insuffisants pour effectuer l'opération\")\n    }\n  },\n\n  async utilisateurSupprimer({ id }, context) {\n    if (\n      permissionsCheck(context.user, ['super', 'admin']) ||\n      context.user.id === id\n    ) {\n      const errors = []\n      let res\n\n      if (!id) {\n        errors.push('id manquante')\n      }\n\n      if (!errors.length) {\n        res = await utilisateurRemove(id)\n      } else {\n        throw new Error(errors.join(', '))\n      }\n\n      return res\n    } else {\n      throw new Error(\"droits insuffisants pour effectuer l'opération\")\n    }\n  },\n\n  async utilisateurMotDePasseModifier(\n    { id, motDePasse, motDePasseNouveau1, motDePasseNouveau2 },\n    context\n  ) {\n    if (\n      permissionsCheck(context.user, ['super', 'admin']) ||\n      context.user.id === id\n    ) {\n      const errors = []\n\n      if (!id) {\n        errors.push('id manquante')\n      }\n\n      if (!motDePasse) {\n        errors.push('mot de passe manquant')\n      }\n\n      if (!motDePasseNouveau1) {\n        errors.push('nouveau mot de passe manquant')\n      } else if (motDePasseNouveau1.length < 8) {\n        errors.push('le mot de passe doit contenir au moins 8 caractères')\n      }\n\n      if (!motDePasseNouveau2) {\n        errors.push('vérification du nouveau mot de passe manquante')\n      }\n\n      if (motDePasseNouveau1 !== motDePasseNouveau2) {\n        errors.push(\n          'le nouveau mot de passe et la vérification sont différents'\n        )\n      }\n\n      if (id && motDePasse) {\n        const utilisateur = await utilisateurGet(id)\n\n        if (utilisateur) {\n          const valid = await bcrypt.compare(motDePasse, utilisateur.motDePasse)\n\n          if (!valid) {\n            errors.push('mot de passe incorrect')\n          }\n        } else {\n          errors.push('aucun utilisateur enregistré avec cette id')\n        }\n      }\n\n      if (!errors.length) {\n        const res = await utilisateurUpdate({\n          id,\n          motDePasse: await bcrypt.hash(motDePasseNouveau1, 10)\n        })\n\n        return res\n      } else {\n        throw new Error(errors.join(', '))\n      }\n    } else {\n      throw new Error(\"droits insuffisants pour effectuer l'opération\")\n    }\n  },\n\n  async utilisateurMotDePasseEmailEnvoyer({ email }, context) {\n    const errors = []\n    let utilisateur\n    const emailIsValid = emailRegex({ exact: true }).test(email)\n\n    if (!email) {\n      errors.push('email manquant')\n    } else if (!emailIsValid) {\n      errors.push('adresse email invalide')\n    } else {\n      utilisateur = await utilisateurByEmailGet(email)\n\n      if (!utilisateur) {\n        errors.push('aucun utilisateur enregistré avec cette adresse email')\n      }\n    }\n\n    if (!errors.length) {\n      const token = jwt.sign({ id: utilisateur.id }, process.env.JWT_SECRET)\n\n      const url = `${\n        process.env.UI_URL\n      }/mot-de-passe?token=${token}&email=${email}`\n\n      const subject = `[Camino] Initialisation de votre mot de passe`\n      const html = `<p>Pour initialiser votre mot de passe, <a href=\"${url}\">cliquez ici</a> (lien valable 15 minutes).</p>`\n\n      try {\n        mailer(email, subject, html)\n      } catch (e) {\n        return \"erreur lors de l'envoi d'email\"\n      }\n\n      return 'email envoyé'\n    } else {\n      throw new Error(errors.join(', '))\n    }\n  },\n\n  async utilisateurMotDePasseInitialiser(\n    { motDePasse1, motDePasse2 },\n    context\n  ) {\n    const errors = []\n    const now = Math.round(new Date().getTime() / 1000)\n    const delay = 60 * 15 // 15 minutes\n\n    if (now - context.user.iat > delay) {\n      errors.push('délai expiré')\n    } else {\n      if (!motDePasse1) {\n        errors.push('nouveau mot de passe manquant')\n      } else if (motDePasse1.length < 8) {\n        errors.push('le mot de passe doit contenir au moins 8 caractères')\n      }\n\n      if (!motDePasse2) {\n        errors.push('vérification du nouveau mot de passe manquante')\n      }\n\n      if (motDePasse1 !== motDePasse2) {\n        errors.push(\n          'le nouveau mot de passe et la vérification sont différents'\n        )\n      }\n\n      if (context.user.id) {\n        const utilisateur = await utilisateurGet(context.user.id)\n\n        if (!utilisateur) {\n          errors.push('aucun utilisateur enregistré avec cette id')\n        }\n      }\n    }\n\n    if (!errors.length) {\n      const res = await utilisateurUpdate({\n        id: context.user.id,\n        motDePasse: await bcrypt.hash(motDePasse1, 10)\n      })\n\n      return 'mot de passe mis à jour'\n    } else {\n      throw new Error(errors.join(', '))\n    }\n  }\n}\n\nmodule.exports = resolvers\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers/utilisateurs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "permissionsVisibleForAdmin",
    "memberof": "camino-api/api/resolvers/utilisateurs.js",
    "static": true,
    "longname": "camino-api/api/resolvers/utilisateurs.js~permissionsVisibleForAdmin",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/resolvers/utilisateurs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "utilisateurErreurs",
    "memberof": "camino-api/api/resolvers/utilisateurs.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/api/resolvers/utilisateurs.js~utilisateurErreurs",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/resolvers/utilisateurs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "utilisateur",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "userIdGenerate",
    "memberof": "camino-api/api/resolvers/utilisateurs.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/api/resolvers/utilisateurs.js~userIdGenerate",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/resolvers/utilisateurs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "resolvers",
    "memberof": "camino-api/api/resolvers/utilisateurs.js",
    "static": true,
    "longname": "camino-api/api/resolvers/utilisateurs.js~resolvers",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/api/resolvers/utilisateurs.js",
    "importStyle": "resolvers",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "{\"utilisateur\": function, \"utilisateurs\": function, \"utilisateurIdentifier\": function, \"utilisateurConnecter\": function, \"utilisateurAjouter\": function, \"utilisateurAjoutEmailEnvoyer\": function, \"utilisateurModifier\": function, \"utilisateurSupprimer\": function, \"utilisateurMotDePasseModifier\": function, \"utilisateurMotDePasseEmailEnvoyer\": function, \"utilisateurMotDePasseInitialiser\": function}"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "camino-api/api/resolvers/version.js",
    "content": "const npmPackage = require('../../package.json')\n\nconst resolvers = {\n  version(variables, context, info) {\n    return npmPackage.version\n  }\n}\n\nmodule.exports = resolvers\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers/version.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "resolvers",
    "memberof": "camino-api/api/resolvers/version.js",
    "static": true,
    "longname": "camino-api/api/resolvers/version.js~resolvers",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/api/resolvers/version.js",
    "importStyle": "resolvers",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"version\": function}"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "camino-api/api/resolvers.js",
    "content": "const { GraphQLDate } = require('graphql-iso-date')\nconst Json = require('./types/json')\n\nconst {\n  titre,\n  titres,\n  titreAjouter,\n  titreSupprimer,\n  titreModifier,\n  titreEtapeModifier\n} = require('./resolvers/titres')\n\nconst {\n  utilisateur,\n  utilisateurs,\n  utilisateurConnecter,\n  utilisateurIdentifier,\n  utilisateurModifier,\n  utilisateurAjouter,\n  utilisateurSupprimer,\n  utilisateurMotDePasseModifier,\n  utilisateurMotDePasseInitialiser,\n  utilisateurMotDePasseEmailEnvoyer,\n  utilisateurAjoutEmailEnvoyer\n} = require('./resolvers/utilisateurs')\nconst { version } = require('./resolvers/version')\nconst { metas } = require('./resolvers/metas')\nconst { substance, substances } = require('./resolvers/substances')\nconst { permissions } = require('./resolvers/permissions')\nconst { entreprise, entreprises } = require('./resolvers/entreprises')\nconst { titreTravauxRapportModifier } = require('./resolvers/titres-travaux')\n\nmodule.exports = {\n  //  types\n  Json,\n  GraphQLDate,\n\n  //  queries\n  version,\n  titre,\n  titres,\n  substance,\n  substances,\n  metas,\n  utilisateurIdentifier,\n  entreprise,\n  entreprises,\n  utilisateur,\n  utilisateurs,\n  permissions,\n\n  // mutations\n  titreAjouter,\n  titreModifier,\n  titreSupprimer,\n  titreEtapeModifier,\n  titreTravauxRapportModifier,\n\n  utilisateurConnecter,\n  utilisateurModifier,\n  utilisateurAjouter,\n  utilisateurSupprimer,\n  utilisateurMotDePasseModifier,\n  utilisateurMotDePasseInitialiser,\n  utilisateurMotDePasseEmailEnvoyer,\n  utilisateurAjoutEmailEnvoyer\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/resolvers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "camino-api/api/schemas.js",
    "content": "const { buildSchema } = require('graphql')\n\nconst fileImport = require('./_file-import.js')\n\nconst index = fileImport(__dirname, 'schemas/index.gql')\nconst metas = fileImport(__dirname, 'schemas/metas.gql')\nconst titres = fileImport(__dirname, 'schemas/titres.gql')\nconst substances = fileImport(__dirname, 'schemas/substances.gql')\nconst geojson = fileImport(__dirname, 'schemas/geojsons.gql')\nconst utilisateurs = fileImport(__dirname, 'schemas/utilisateurs.gql')\nconst administrations = fileImport(__dirname, 'schemas/administrations.gql')\nconst entreprises = fileImport(__dirname, 'schemas/entreprises.gql')\nconst titresTravaux = fileImport(__dirname, 'schemas/titres-travaux.gql')\n\nmodule.exports = buildSchema(`\n  ${index}\n\n  ${metas}\n\n  ${titres}\n\n  ${substances}\n\n  ${geojson}\n\n  ${utilisateurs}\n\n  ${administrations}\n\n  ${entreprises}\n\n  ${titresTravaux}\n`)\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/schemas.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "index",
    "memberof": "camino-api/api/schemas.js",
    "static": true,
    "longname": "camino-api/api/schemas.js~index",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/schemas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "metas",
    "memberof": "camino-api/api/schemas.js",
    "static": true,
    "longname": "camino-api/api/schemas.js~metas",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/schemas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "titres",
    "memberof": "camino-api/api/schemas.js",
    "static": true,
    "longname": "camino-api/api/schemas.js~titres",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/schemas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "substances",
    "memberof": "camino-api/api/schemas.js",
    "static": true,
    "longname": "camino-api/api/schemas.js~substances",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/schemas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "geojson",
    "memberof": "camino-api/api/schemas.js",
    "static": true,
    "longname": "camino-api/api/schemas.js~geojson",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/schemas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "utilisateurs",
    "memberof": "camino-api/api/schemas.js",
    "static": true,
    "longname": "camino-api/api/schemas.js~utilisateurs",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/schemas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "administrations",
    "memberof": "camino-api/api/schemas.js",
    "static": true,
    "longname": "camino-api/api/schemas.js~administrations",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/schemas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "entreprises",
    "memberof": "camino-api/api/schemas.js",
    "static": true,
    "longname": "camino-api/api/schemas.js~entreprises",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/schemas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "titresTravaux",
    "memberof": "camino-api/api/schemas.js",
    "static": true,
    "longname": "camino-api/api/schemas.js~titresTravaux",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/api/schemas.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "camino-api/api/types/json.js",
    "content": "const { GraphQLScalarType } = require('graphql')\n\nconst Json = new GraphQLScalarType({\n  name: 'Json',\n  serialize: value => {\n    // console.log('serialize value', value);\n    return value\n  },\n  parseValue: value => {\n    // console.log('parseValue value', value);\n    return value\n  },\n  parseLiteral: ast => {\n    // console.log('parseLiteral ast', ast);\n    return ast.value\n  }\n})\n\nmodule.exports = Json\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/api/types/json.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "camino-api/config/index.js",
    "content": "// virtualHost est défini seulement si\n// l'application tourne dans un container docker\n// voir le fichier DockerFile\n\nconst debug = process.env.NODE_DEBUG === 'true'\nconst virtualHost = process.env.VIRTUAL_HOST\nconst protocol = virtualHost ? 'https' : 'http'\nconst port = Number(process.env.NODE_PORT)\nconst url = virtualHost\n  ? `${protocol}://${virtualHost}/`\n  : `${protocol}://localhost:${port}/`\n\nmodule.exports = {\n  port,\n  url,\n  debug\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/config/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "debug",
    "memberof": "camino-api/config/index.js",
    "static": true,
    "longname": "camino-api/config/index.js~debug",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/config/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "virtualHost",
    "memberof": "camino-api/config/index.js",
    "static": true,
    "longname": "camino-api/config/index.js~virtualHost",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/config/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "protocol",
    "memberof": "camino-api/config/index.js",
    "static": true,
    "longname": "camino-api/config/index.js~protocol",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/config/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "port",
    "memberof": "camino-api/config/index.js",
    "static": true,
    "longname": "camino-api/config/index.js~port",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/config/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "url",
    "memberof": "camino-api/config/index.js",
    "static": true,
    "longname": "camino-api/config/index.js~url",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/config/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "camino-api/config/knex.js",
    "content": "const { knexSnakeCaseMappers } = require('objection')\n\nconst connection = {\n  host: process.env.PGHOST,\n  port: process.env.PGPORT,\n  database: process.env.PGDATABASE,\n  user: process.env.PGUSER,\n  password: process.env.PGPASSWORD\n}\n\nconst knexConfig = {\n  client: 'pg',\n  // debug: true,\n  connection,\n  ...knexSnakeCaseMappers()\n}\n\nmodule.exports = knexConfig\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/config/knex.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "connection",
    "memberof": "camino-api/config/knex.js",
    "static": true,
    "longname": "camino-api/config/knex.js~connection",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/config/knex.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"host\": *, \"port\": *, \"database\": *, \"user\": *, \"password\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "knexConfig",
    "memberof": "camino-api/config/knex.js",
    "static": true,
    "longname": "camino-api/config/knex.js~knexConfig",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/config/knex.js",
    "importStyle": "knexConfig",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "{\"client\": string, \"connection\": *, ...undefined: Object}"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "camino-api/database/index.js",
    "content": "const Knex = require('knex')\nconst { Model } = require('objection')\n\nconst knexConfig = require('../config/knex')\nconst knex = Knex(knexConfig)\n\nModel.knex(knex)\n\nmodule.exports = knex\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "knex",
    "memberof": "camino-api/database/index.js",
    "static": true,
    "longname": "camino-api/database/index.js~knex",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/index.js",
    "importStyle": "knex",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "camino-api/database/models/administrations.js",
    "content": "const { Model } = require('objection')\n\nclass Administrations extends Model {\n  static get tableName() {\n    return 'administrations'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom'],\n\n      properties: {\n        id: { type: 'string', maxLength: 64 },\n        nom: { type: 'string' },\n        service: { type: 'string' },\n        site: { type: 'string' },\n        email: { type: 'string' },\n        telephone: { type: 'string' },\n        adresse1: { type: 'string' },\n        adresse2: { type: 'string' },\n        code_postal: { type: 'integer' },\n        ville: { type: 'string' },\n        cedex: { type: 'integer' }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    // Utilisateurs est requis par Administrations\n    // Administrations est requis par Utilisateurs\n    // ce qui provoque une require loop\n    // solutions to require loops http://vincit.github.io/objection.js/#relations\n    const Utilisateurs = require('./utilisateurs')\n\n    return {\n      utilisateurs: {\n        relation: Model.HasManyRelation,\n        modelClass: Utilisateurs,\n        join: {\n          from: 'administrations.id',\n          to: 'utilisateurs.administrationId'\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Administrations\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/administrations.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "class",
    "name": "Administrations",
    "memberof": "camino-api/database/models/administrations.js",
    "static": true,
    "longname": "camino-api/database/models/administrations.js~Administrations",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/administrations.js",
    "importStyle": "Administrations",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 106,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/administrations.js~Administrations",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/administrations.js~Administrations.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/administrations.js~Administrations",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/administrations.js~Administrations.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/administrations.js~Administrations",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/administrations.js~Administrations.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "{\"utilisateurs\": *}"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "camino-api/database/models/demarches-statuts.js",
    "content": "const { Model } = require('objection')\n\nclass DemarchesStatuts extends Model {\n  static get tableName() {\n    return 'demarchesStatuts'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom', 'couleur'],\n\n      properties: {\n        id: { type: 'string', maxLength: 3 },\n        nom: { type: 'string' },\n        couleur: { type: 'string', maxLength: 8 }\n      }\n    }\n  }\n}\n\nmodule.exports = DemarchesStatuts\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/demarches-statuts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "class",
    "name": "DemarchesStatuts",
    "memberof": "camino-api/database/models/demarches-statuts.js",
    "static": true,
    "longname": "camino-api/database/models/demarches-statuts.js~DemarchesStatuts",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/demarches-statuts.js",
    "importStyle": "DemarchesStatuts",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 111,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/demarches-statuts.js~DemarchesStatuts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/demarches-statuts.js~DemarchesStatuts.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/demarches-statuts.js~DemarchesStatuts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/demarches-statuts.js~DemarchesStatuts.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "camino-api/database/models/demarches-types.js",
    "content": "const { Model } = require('objection')\nconst DemarchesStatuts = require('./demarches-statuts')\nconst EtapesTypes = require('./etapes-types')\n\nclass DemarchesTypes extends Model {\n  static get tableName() {\n    return 'demarchesTypes'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom'],\n\n      properties: {\n        id: { type: 'string', maxLength: 3 },\n        nom: { type: 'string' },\n        ordre: { type: 'integer' },\n        duree: { type: 'boolean' },\n        points: { type: 'boolean' },\n        substances: { type: 'boolean' },\n        titulaires: { type: 'boolean' },\n        renouvelable: { type: 'boolean' },\n        exception: { type: 'boolean' }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      demarchesStatuts: {\n        relation: Model.ManyToManyRelation,\n        modelClass: DemarchesStatuts,\n        join: {\n          from: 'demarchesTypes.id',\n          through: {\n            from: 'demarchesTypes__demarchesStatuts.demarcheTypeId',\n            to: 'demarchesTypes__demarchesStatuts.demarcheStatutId',\n            extra: ['ordre']\n          },\n          to: 'demarchesStatuts.id'\n        }\n      },\n\n      etapesTypes: {\n        relation: Model.ManyToManyRelation,\n        modelClass: EtapesTypes,\n        join: {\n          from: 'demarchesTypes.id',\n          through: {\n            from: 'demarchesTypes__etapesTypes.demarcheTypeId',\n            to: 'demarchesTypes__etapesTypes.etapeTypeId',\n            extra: ['ordre', 'typeId']\n          },\n          to: 'etapesTypes.id'\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = DemarchesTypes\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/demarches-types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "class",
    "name": "DemarchesTypes",
    "memberof": "camino-api/database/models/demarches-types.js",
    "static": true,
    "longname": "camino-api/database/models/demarches-types.js~DemarchesTypes",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/demarches-types.js",
    "importStyle": "DemarchesTypes",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 115,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/demarches-types.js~DemarchesTypes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/demarches-types.js~DemarchesTypes.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/demarches-types.js~DemarchesTypes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/demarches-types.js~DemarchesTypes.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/demarches-types.js~DemarchesTypes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/demarches-types.js~DemarchesTypes.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "{\"demarchesStatuts\": *, \"etapesTypes\": *}"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "camino-api/database/models/domaines.js",
    "content": "const { Model } = require('objection')\nconst Types = require('./types')\n\nclass Domaines extends Model {\n  static get tableName() {\n    return 'domaines'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom'],\n\n      properties: {\n        id: { type: 'string', maxLength: 1 },\n        nom: { type: 'string' }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      types: {\n        relation: Model.ManyToManyRelation,\n        modelClass: Types,\n        join: {\n          from: 'domaines.id',\n          through: {\n            from: 'domaines__types.domaineId',\n            to: 'domaines__types.typeId',\n            extra: ['archive']\n          },\n          to: 'types.id'\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Domaines\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/domaines.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "class",
    "name": "Domaines",
    "memberof": "camino-api/database/models/domaines.js",
    "static": true,
    "longname": "camino-api/database/models/domaines.js~Domaines",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/domaines.js",
    "importStyle": "Domaines",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 120,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/domaines.js~Domaines",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/domaines.js~Domaines.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/domaines.js~Domaines",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/domaines.js~Domaines.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/domaines.js~Domaines",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/domaines.js~Domaines.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{\"types\": *}"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "file",
    "name": "camino-api/database/models/emprises.js",
    "content": "const { Model } = require('objection')\n\nclass Emprises extends Model {\n  static get tableName() {\n    return 'emprises'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom'],\n\n      properties: {\n        id: { type: 'string', maxLength: 3 },\n        nom: { type: 'string' }\n      }\n    }\n  }\n}\n\nmodule.exports = Emprises\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/emprises.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 124,
    "kind": "class",
    "name": "Emprises",
    "memberof": "camino-api/database/models/emprises.js",
    "static": true,
    "longname": "camino-api/database/models/emprises.js~Emprises",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/emprises.js",
    "importStyle": "Emprises",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 125,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/emprises.js~Emprises",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/emprises.js~Emprises.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/emprises.js~Emprises",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/emprises.js~Emprises.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "file",
    "name": "camino-api/database/models/entreprises.js",
    "content": "const { Model } = require('objection')\nconst Utilisateurs = require('./utilisateurs')\n\nclass Entreprises extends Model {\n  static get tableName() {\n    return 'entreprises'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom'],\n\n      properties: {\n        id: { type: 'string', maxLength: 64 },\n        nom: { type: ['string', 'null'] },\n        raisonSociale: { type: ['string', 'null'] },\n        paysId: { type: ['string', 'null'] },\n        legalSiren: { type: ['string', 'null'] },\n        legalEtranger: { type: ['string', 'null'] },\n        legalForme: { type: ['string', 'null'] },\n        voieNumero: { type: ['string', 'null'] },\n        voieType: { type: ['string', 'null'] },\n        voieNom: { type: ['string', 'null'] },\n        adresseComplement: { type: ['string', 'null'] },\n        codePostal: { type: ['integer', 'null'] },\n        ville: { type: ['string', 'null'] },\n        cedex: { type: ['integer', 'null'] },\n        email: { type: ['string', 'null'] },\n        telephone: { type: ['string', 'null'] },\n        url: { type: ['string', 'null'] }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      utilisateurs: {\n        relation: Model.HasManyRelation,\n        modelClass: Utilisateurs,\n        join: {\n          from: 'entreprises.id',\n          to: 'utilisateurs.entrepriseId'\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Entreprises\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/entreprises.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 128,
    "kind": "class",
    "name": "Entreprises",
    "memberof": "camino-api/database/models/entreprises.js",
    "static": true,
    "longname": "camino-api/database/models/entreprises.js~Entreprises",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/entreprises.js",
    "importStyle": "Entreprises",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 129,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/entreprises.js~Entreprises",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/entreprises.js~Entreprises.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/entreprises.js~Entreprises",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/entreprises.js~Entreprises.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/entreprises.js~Entreprises",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/entreprises.js~Entreprises.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "{\"utilisateurs\": *}"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "camino-api/database/models/etapes-statuts.js",
    "content": "const { Model } = require('objection')\n\nclass EtapesStatuts extends Model {\n  static get tableName() {\n    return 'etapesStatuts'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom', 'couleur'],\n\n      properties: {\n        id: { type: 'string', maxLength: 3 },\n        nom: { type: ['string', 'null'] },\n        couleur: { type: ['string', 'null'], maxLength: 8 }\n      }\n    }\n  }\n}\n\nmodule.exports = EtapesStatuts\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/etapes-statuts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "class",
    "name": "EtapesStatuts",
    "memberof": "camino-api/database/models/etapes-statuts.js",
    "static": true,
    "longname": "camino-api/database/models/etapes-statuts.js~EtapesStatuts",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/etapes-statuts.js",
    "importStyle": "EtapesStatuts",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 134,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/etapes-statuts.js~EtapesStatuts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/etapes-statuts.js~EtapesStatuts.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/etapes-statuts.js~EtapesStatuts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/etapes-statuts.js~EtapesStatuts.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "camino-api/database/models/etapes-types.js",
    "content": "const { Model } = require('objection')\nconst EtapesStatuts = require('./etapes-statuts')\n\nclass EtapesTypes extends Model {\n  static get tableName() {\n    return 'etapesTypes'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom'],\n\n      properties: {\n        id: { type: 'string', maxLength: 3 },\n        nom: {\n          type: ['string', 'null'],\n          maxLength: 128\n        },\n        acceptationAuto: {\n          type: ['boolean', 'null']\n        },\n        dateDebut: {\n          type: ['date', 'null']\n        },\n        dateFin: {\n          type: ['date', 'null']\n        }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      etapesStatuts: {\n        relation: Model.ManyToManyRelation,\n        modelClass: EtapesStatuts,\n        join: {\n          from: 'etapesTypes.id',\n          through: {\n            from: 'etapesTypes__etapesStatuts.etapeTypeId',\n            to: 'etapesTypes__etapesStatuts.etapeStatutId',\n            extra: ['ordre']\n          },\n          to: 'etapesStatuts.id'\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = EtapesTypes\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/etapes-types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "class",
    "name": "EtapesTypes",
    "memberof": "camino-api/database/models/etapes-types.js",
    "static": true,
    "longname": "camino-api/database/models/etapes-types.js~EtapesTypes",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/etapes-types.js",
    "importStyle": "EtapesTypes",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 138,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/etapes-types.js~EtapesTypes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/etapes-types.js~EtapesTypes.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/etapes-types.js~EtapesTypes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/etapes-types.js~EtapesTypes.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/etapes-types.js~EtapesTypes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/etapes-types.js~EtapesTypes.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "{\"etapesStatuts\": *}"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "camino-api/database/models/permissions.js",
    "content": "const { Model } = require('objection')\n\nclass Permissions extends Model {\n  static get tableName() {\n    return 'permissions'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom'],\n\n      properties: {\n        id: { type: 'string', maxLength: 12 },\n        nom: { type: 'string' },\n        ordre: { type: 'integer' }\n      }\n    }\n  }\n\n  static get namedFilters() {\n    return {\n      orderAsc: builder => {\n        builder.orderBy('ordre', 'asc')\n      }\n    }\n  }\n}\n\nmodule.exports = Permissions\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/permissions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "class",
    "name": "Permissions",
    "memberof": "camino-api/database/models/permissions.js",
    "static": true,
    "longname": "camino-api/database/models/permissions.js~Permissions",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/permissions.js",
    "importStyle": "Permissions",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 143,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/permissions.js~Permissions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/permissions.js~Permissions.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/permissions.js~Permissions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/permissions.js~Permissions.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "get",
    "name": "namedFilters",
    "memberof": "camino-api/database/models/permissions.js~Permissions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/permissions.js~Permissions.namedFilters",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{\"orderAsc\": *}"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "camino-api/database/models/phases-statuts.js",
    "content": "const { Model } = require('objection')\n\nclass PhasesStatuts extends Model {\n  static get tableName() {\n    return 'phasesStatuts'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom', 'couleur'],\n\n      properties: {\n        id: { type: 'string', maxLength: 3 },\n        nom: { type: 'string' },\n        couleur: { type: 'string', maxLength: 8 }\n      }\n    }\n  }\n}\n\nmodule.exports = PhasesStatuts\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/phases-statuts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "class",
    "name": "PhasesStatuts",
    "memberof": "camino-api/database/models/phases-statuts.js",
    "static": true,
    "longname": "camino-api/database/models/phases-statuts.js~PhasesStatuts",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/phases-statuts.js",
    "importStyle": "PhasesStatuts",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 148,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/phases-statuts.js~PhasesStatuts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/phases-statuts.js~PhasesStatuts.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/phases-statuts.js~PhasesStatuts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/phases-statuts.js~PhasesStatuts.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "file",
    "name": "camino-api/database/models/statuts.js",
    "content": "const { Model } = require('objection')\n\nclass Statuts extends Model {\n  static get tableName() {\n    return 'statuts'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom', 'couleur'],\n\n      properties: {\n        id: { type: 'string', maxLength: 3 },\n        nom: { type: 'string' },\n        couleur: { type: 'string', maxLength: 8 }\n      }\n    }\n  }\n}\n\nmodule.exports = Statuts\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/statuts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 151,
    "kind": "class",
    "name": "Statuts",
    "memberof": "camino-api/database/models/statuts.js",
    "static": true,
    "longname": "camino-api/database/models/statuts.js~Statuts",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/statuts.js",
    "importStyle": "Statuts",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 152,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/statuts.js~Statuts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/statuts.js~Statuts.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/statuts.js~Statuts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/statuts.js~Statuts.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "file",
    "name": "camino-api/database/models/substances-legales-codes.js",
    "content": "const { Model } = require('objection')\n\nclass SubstancesLegalesCodes extends Model {\n  static get tableName() {\n    return 'substancesLegalesCodes'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom', 'description', 'lien'],\n\n      properties: {\n        id: { type: 'string' },\n        nom: { type: ['string', 'null'] },\n        description: { type: ['string', 'null'] },\n        lien: { type: ['string', 'null'] }\n      }\n    }\n  }\n}\n\nmodule.exports = SubstancesLegalesCodes\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/substances-legales-codes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 155,
    "kind": "class",
    "name": "SubstancesLegalesCodes",
    "memberof": "camino-api/database/models/substances-legales-codes.js",
    "static": true,
    "longname": "camino-api/database/models/substances-legales-codes.js~SubstancesLegalesCodes",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/substances-legales-codes.js",
    "importStyle": "SubstancesLegalesCodes",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 156,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/substances-legales-codes.js~SubstancesLegalesCodes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/substances-legales-codes.js~SubstancesLegalesCodes.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/substances-legales-codes.js~SubstancesLegalesCodes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/substances-legales-codes.js~SubstancesLegalesCodes.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "camino-api/database/models/substances-legales.js",
    "content": "const { Model } = require('objection')\nconst SubstancesLegalesCodes = require('./substances-legales-codes')\nconst Domaines = require('./domaines')\n\nclass SubstancesLegales extends Model {\n  static get tableName() {\n    return 'substancesLegales'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom', 'lien'],\n\n      properties: {\n        id: { type: 'string' },\n        nom: { type: ['string', 'null'] },\n        domaineId: { type: ['string', 'null'] },\n        description: { type: ['string', 'null'] },\n        substanceLegalCodeId: { type: ['string', 'null'] }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      code: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: SubstancesLegalesCodes,\n        join: {\n          from: 'substancesLegales.substanceLegaleCodeId',\n          to: 'substancesLegalesCodes.id'\n        }\n      },\n      domaine: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Domaines,\n        join: {\n          from: 'substancesLegales.domaineId',\n          to: 'domaines.id'\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = SubstancesLegales\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/substances-legales.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "class",
    "name": "SubstancesLegales",
    "memberof": "camino-api/database/models/substances-legales.js",
    "static": true,
    "longname": "camino-api/database/models/substances-legales.js~SubstancesLegales",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/substances-legales.js",
    "importStyle": "SubstancesLegales",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 160,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/substances-legales.js~SubstancesLegales",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/substances-legales.js~SubstancesLegales.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/substances-legales.js~SubstancesLegales",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/substances-legales.js~SubstancesLegales.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/substances-legales.js~SubstancesLegales",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/substances-legales.js~SubstancesLegales.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "{\"code\": *, \"domaine\": *}"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "camino-api/database/models/substances.js",
    "content": "const { Model } = require('objection')\nconst SubstancesLegales = require('./substances-legales')\n\nclass Substances extends Model {\n  static get tableName() {\n    return 'substances'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom', 'domaineId', 'type', 'substanceLegaleId'],\n\n      properties: {\n        id: { type: 'string' },\n        nom: { type: ['string', 'null'] },\n        symbole: { type: ['string', 'null'] },\n        gerep: { type: ['integer', 'null'] },\n        description: { type: ['string', 'null'], maxLength: 2048 },\n        substanceLegalId: { type: 'string' }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      legales: {\n        relation: Model.ManyToManyRelation,\n        modelClass: SubstancesLegales,\n        join: {\n          from: 'substances.id',\n          through: {\n            from: 'substances__substancesLegales.substanceId',\n            to: 'substances__substancesLegales.substanceLegaleId'\n          },\n          to: 'substancesLegales.id'\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Substances\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/substances.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "class",
    "name": "Substances",
    "memberof": "camino-api/database/models/substances.js",
    "static": true,
    "longname": "camino-api/database/models/substances.js~Substances",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/substances.js",
    "importStyle": "Substances",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 165,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/substances.js~Substances",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/substances.js~Substances.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/substances.js~Substances",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/substances.js~Substances.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/substances.js~Substances",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/substances.js~Substances.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "{\"legales\": *}"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "camino-api/database/models/titres-administrations.js",
    "content": "const { Model } = require('objection')\nconst Administrations = require('./administrations')\n\nclass TitresAdministrations extends Model {\n  static get tableName() {\n    return 'titresAdministrations'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['administrationId', 'titreEtapeId'],\n\n      properties: {\n        administrationId: { type: 'string', maxLength: 64 },\n        titreEtapeId: { type: 'string', maxLength: 128 }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      substance: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Administrations,\n        join: {\n          from: 'titresAdministrations.administrationId',\n          to: 'administrations.id'\n        }\n      }\n    }\n  }\n\n  static get idColumn() {\n    return ['administrationId', 'titreEtapeId']\n  }\n}\n\nmodule.exports = TitresAdministrations\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-administrations.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "class",
    "name": "TitresAdministrations",
    "memberof": "camino-api/database/models/titres-administrations.js",
    "static": true,
    "longname": "camino-api/database/models/titres-administrations.js~TitresAdministrations",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-administrations.js",
    "importStyle": "TitresAdministrations",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 170,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-administrations.js~TitresAdministrations",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-administrations.js~TitresAdministrations.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-administrations.js~TitresAdministrations",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-administrations.js~TitresAdministrations.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/titres-administrations.js~TitresAdministrations",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-administrations.js~TitresAdministrations.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{\"substance\": *}"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "get",
    "name": "idColumn",
    "memberof": "camino-api/database/models/titres-administrations.js~TitresAdministrations",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-administrations.js~TitresAdministrations.idColumn",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "file",
    "name": "camino-api/database/models/titres-amodiataires.js",
    "content": "const { Model } = require('objection')\nconst Entreprises = require('./entreprises')\n\nclass TitresAmodiataires extends Model {\n  static get tableName() {\n    return 'titresAmodiataires'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['entrepriseId', 'titreEtapeId'],\n\n      properties: {\n        entrepriseId: { type: 'string', maxLength: 64 },\n        titreEtapeId: { type: 'string', maxLength: 128 }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      entreprise: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Entreprises,\n        join: {\n          from: 'titresAmodiataires.entrepriseId',\n          to: 'entreprises.id'\n        }\n      }\n    }\n  }\n\n  static get idColumn() {\n    return ['entrepriseId', 'titreEtapeId']\n  }\n}\n\nmodule.exports = TitresAmodiataires\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-amodiataires.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 175,
    "kind": "class",
    "name": "TitresAmodiataires",
    "memberof": "camino-api/database/models/titres-amodiataires.js",
    "static": true,
    "longname": "camino-api/database/models/titres-amodiataires.js~TitresAmodiataires",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-amodiataires.js",
    "importStyle": "TitresAmodiataires",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 176,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-amodiataires.js~TitresAmodiataires",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-amodiataires.js~TitresAmodiataires.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-amodiataires.js~TitresAmodiataires",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-amodiataires.js~TitresAmodiataires.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/titres-amodiataires.js~TitresAmodiataires",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-amodiataires.js~TitresAmodiataires.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{\"entreprise\": *}"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "get",
    "name": "idColumn",
    "memberof": "camino-api/database/models/titres-amodiataires.js~TitresAmodiataires",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-amodiataires.js~TitresAmodiataires.idColumn",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "file",
    "name": "camino-api/database/models/titres-demarches.js",
    "content": "const { Model } = require('objection')\nconst DemarchesTypes = require('./demarches-types')\nconst DemarchesStatuts = require('./demarches-statuts')\nconst TitresPhases = require('./titres-phases')\nconst TitresEtapes = require('./titres-etapes')\n\nclass TitresDemarches extends Model {\n  static get tableName() {\n    return 'titresDemarches'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'titreId'],\n\n      properties: {\n        id: { type: 'string', maxLength: 128 },\n        titreId: { type: 'string', maxLength: 128 },\n        typeId: { type: 'string', maxLength: 8 },\n        statutId: { type: 'string', maxLength: 3 },\n        ordre: { type: 'integer' },\n        annulationDemarcheId: { type: 'string', maxLength: 128 }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      type: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: DemarchesTypes,\n        join: {\n          from: 'titresDemarches.typeId',\n          to: 'demarchesTypes.id'\n        }\n      },\n      statut: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: DemarchesStatuts,\n        join: {\n          from: 'titresDemarches.statutId',\n          to: 'demarchesStatuts.id'\n        }\n      },\n      phase: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: TitresPhases,\n        join: {\n          from: 'titresDemarches.id',\n          to: 'titresPhases.titreDemarcheId'\n        }\n      },\n      etapes: {\n        relation: Model.HasManyRelation,\n        modelClass: TitresEtapes,\n        join: {\n          from: 'titresDemarches.id',\n          to: 'titresEtapes.titreDemarcheId'\n        }\n      },\n      annulationDemarche: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: TitresDemarches,\n        join: {\n          from: 'titresDemarches.annulationDemarcheId',\n          to: 'titresDemarches.id'\n        }\n      }\n    }\n  }\n\n  // $parseDatabaseJson(json) {\n  //   json = super.$parseDatabaseJson(json)\n  //   if (json) {\n  //     console.log('--------------->', json)\n  //   }\n  //   console.log('<---------------')\n  //   return json\n  // }\n\n  static get namedFilters() {\n    return {\n      orderDesc: builder => {\n        builder.orderBy('ordre', 'desc')\n      }\n    }\n  }\n}\n\nmodule.exports = TitresDemarches\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-demarches.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 181,
    "kind": "class",
    "name": "TitresDemarches",
    "memberof": "camino-api/database/models/titres-demarches.js",
    "static": true,
    "longname": "camino-api/database/models/titres-demarches.js~TitresDemarches",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-demarches.js",
    "importStyle": "TitresDemarches",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 182,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-demarches.js~TitresDemarches",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-demarches.js~TitresDemarches.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-demarches.js~TitresDemarches",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-demarches.js~TitresDemarches.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/titres-demarches.js~TitresDemarches",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-demarches.js~TitresDemarches.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": *, \"statut\": *, \"phase\": *, \"etapes\": *, \"annulationDemarche\": *}"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "get",
    "name": "namedFilters",
    "memberof": "camino-api/database/models/titres-demarches.js~TitresDemarches",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-demarches.js~TitresDemarches.namedFilters",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "{\"orderDesc\": *}"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "file",
    "name": "camino-api/database/models/titres-documents.js",
    "content": "const { Model } = require('objection')\n\nclass TitresDocuments extends Model {\n  static get tableName() {\n    return 'titresDocuments'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'titreEtapeId', 'nom', 'date'],\n\n      properties: {\n        id: { type: 'string' },\n        titreEtapeId: { type: 'string', maxLength: 128 },\n        type: { type: 'string' },\n        nom: { type: 'string' },\n        url: { type: 'string' },\n        uri: { type: 'string' },\n        fichier: { type: 'string' },\n        jorf: { type: 'string' },\n        nor: { type: 'string' }\n      }\n    }\n  }\n}\n\nmodule.exports = TitresDocuments\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-documents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 187,
    "kind": "class",
    "name": "TitresDocuments",
    "memberof": "camino-api/database/models/titres-documents.js",
    "static": true,
    "longname": "camino-api/database/models/titres-documents.js~TitresDocuments",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-documents.js",
    "importStyle": "TitresDocuments",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 188,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-documents.js~TitresDocuments",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-documents.js~TitresDocuments.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-documents.js~TitresDocuments",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-documents.js~TitresDocuments.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "file",
    "name": "camino-api/database/models/titres-emprises.js",
    "content": "const { Model } = require('objection')\nconst Emprises = require('./emprises')\n\nclass TitresEmprises extends Model {\n  static get tableName() {\n    return 'titresEmprises'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['empriseId', 'titreEtapeId'],\n\n      properties: {\n        empriseId: { type: 'string', maxLength: 3 },\n        titreEtapeId: { type: 'string', maxLength: 128 }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      emprise: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Emprises,\n        join: {\n          from: 'titresEmprises.empriseId',\n          to: 'emprises.id'\n        }\n      }\n    }\n  }\n\n  static get idColumn() {\n    return ['empriseId', 'titreEtapeId']\n  }\n}\n\nmodule.exports = TitresEmprises\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-emprises.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 191,
    "kind": "class",
    "name": "TitresEmprises",
    "memberof": "camino-api/database/models/titres-emprises.js",
    "static": true,
    "longname": "camino-api/database/models/titres-emprises.js~TitresEmprises",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-emprises.js",
    "importStyle": "TitresEmprises",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 192,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-emprises.js~TitresEmprises",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-emprises.js~TitresEmprises.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-emprises.js~TitresEmprises",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-emprises.js~TitresEmprises.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/titres-emprises.js~TitresEmprises",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-emprises.js~TitresEmprises.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{\"emprise\": *}"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "get",
    "name": "idColumn",
    "memberof": "camino-api/database/models/titres-emprises.js~TitresEmprises",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-emprises.js~TitresEmprises.idColumn",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "camino-api/database/models/titres-erreurs.js",
    "content": "const { Model } = require('objection')\n\nclass TitresErreurs extends Model {\n  static get tableName() {\n    return 'titresErreurs'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'titreDemarcheId'],\n\n      properties: {\n        titreEtapeId: { type: 'string', maxLength: 128 },\n        date: { type: 'boolean' },\n        duree: { type: 'boolean' },\n        dateDebut: { type: 'boolean' },\n        dateFin: { type: 'boolean' },\n        surface: { type: 'boolean' },\n        visas: { type: 'boolean' },\n        engagement: { type: 'boolean' },\n        engagementDevise: { type: 'boolean' },\n        points: { type: 'boolean' },\n        substances: { type: 'boolean' },\n        titulaires: { type: 'boolean' },\n        amodiataires: { type: 'boolean' },\n        administrations: { type: 'boolean' }\n      }\n    }\n  }\n}\n\nmodule.exports = TitresErreurs\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-erreurs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 197,
    "kind": "class",
    "name": "TitresErreurs",
    "memberof": "camino-api/database/models/titres-erreurs.js",
    "static": true,
    "longname": "camino-api/database/models/titres-erreurs.js~TitresErreurs",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-erreurs.js",
    "importStyle": "TitresErreurs",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 198,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-erreurs.js~TitresErreurs",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-erreurs.js~TitresErreurs.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-erreurs.js~TitresErreurs",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-erreurs.js~TitresErreurs.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "file",
    "name": "camino-api/database/models/titres-etapes.js",
    "content": "const { Model } = require('objection')\nconst EtapesTypes = require('./etapes-types')\nconst EtapesStatuts = require('./etapes-statuts')\nconst Substances = require('./substances')\nconst TitresPoints = require('./titres-points')\nconst Entreprises = require('./entreprises')\nconst Administrations = require('./administrations')\nconst TitresDocuments = require('./titres-documents')\nconst Emprises = require('./emprises')\nconst TitresErreurs = require('./titres-erreurs')\n\nconst TitresSubstances = require('./titres-substances')\nconst TitresAdministrations = require('./titres-administrations')\nconst TitresTitulaires = require('./titres-titulaires')\nconst TitresAmodiataires = require('./titres-amodiataires')\nconst TitresEmprises = require('./titres-emprises')\n\nclass TitresEtapes extends Model {\n  static get tableName() {\n    return 'titresEtapes'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'titreDemarcheId'],\n\n      properties: {\n        id: { type: 'string', maxLength: 128 },\n        titreDemarcheId: { type: 'string', maxLength: 128 },\n        typeId: { type: 'string', maxLength: 3 },\n        statutId: { type: 'string', maxLength: 3 },\n        ordre: { type: 'integer' },\n        date: { type: 'date' },\n        duree: { type: ['integer', 'null'] },\n        dateDebut: { type: 'date' },\n        dateFin: { type: 'date' },\n        surface: { type: 'float' },\n        volume: { type: 'float' },\n        volumeUnite: { type: ['string', 'null'] },\n        visas: { type: ['json', 'null'] },\n        engagement: { type: ['float', 'null'] },\n        engagementDevise: { type: ['string', 'null'] },\n        sourceIndisponible: { type: ['boolean', 'null'] }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      type: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: EtapesTypes,\n        join: {\n          from: 'titresEtapes.typeId',\n          to: 'etapesTypes.id'\n        }\n      },\n      statut: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: EtapesStatuts,\n        join: {\n          from: 'titresEtapes.statutId',\n          to: 'etapesStatuts.id'\n        }\n      },\n      substances: {\n        relation: Model.ManyToManyRelation,\n        modelClass: Substances,\n        join: {\n          from: 'titresEtapes.id',\n          through: {\n            from: 'titresSubstances.titreEtapeId',\n            to: 'titresSubstances.substanceId',\n            extra: ['ordre', 'connexe']\n          },\n          to: 'substances.id'\n        }\n      },\n      points: {\n        relation: Model.HasManyRelation,\n        modelClass: TitresPoints,\n        join: {\n          from: 'titresEtapes.id',\n          to: 'titresPoints.titreEtapeId'\n        }\n      },\n      titulaires: {\n        relation: Model.ManyToManyRelation,\n        modelClass: Entreprises,\n        join: {\n          from: 'titresEtapes.id',\n          through: {\n            from: 'titresTitulaires.titreEtapeId',\n            to: 'titresTitulaires.entrepriseId'\n          },\n          to: 'entreprises.id'\n        }\n      },\n      amodiataires: {\n        relation: Model.ManyToManyRelation,\n        modelClass: Entreprises,\n        join: {\n          from: 'titresEtapes.id',\n          through: {\n            from: 'titresAmodiataires.titreEtapeId',\n            to: 'titresAmodiataires.entrepriseId'\n          },\n          to: 'entreprises.id'\n        }\n      },\n      administrations: {\n        relation: Model.ManyToManyRelation,\n        modelClass: Administrations,\n        join: {\n          from: 'titresEtapes.id',\n          through: {\n            from: 'titresAdministrations.titreEtapeId',\n            to: 'titresAdministrations.administrationId'\n          },\n          to: 'administrations.id'\n        }\n      },\n      documents: {\n        relation: Model.HasManyRelation,\n        modelClass: TitresDocuments,\n        join: {\n          from: 'titresEtapes.id',\n          to: 'titresDocuments.titreEtapeId'\n        }\n      },\n      emprises: {\n        relation: Model.ManyToManyRelation,\n        modelClass: Emprises,\n        join: {\n          from: 'titresEtapes.id',\n          through: {\n            from: 'titresEmprises.titreEtapeId',\n            to: 'titresEmprises.empriseId'\n          },\n          to: 'emprises.id'\n        }\n      },\n      erreurs: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: TitresErreurs,\n        join: {\n          from: 'titresEtapes.id',\n          to: 'titresErreurs.titreEtapeId'\n        }\n      },\n      titresSubstances: {\n        relation: Model.HasManyRelation,\n        modelClass: TitresSubstances,\n        join: {\n          from: 'titresEtapes.id',\n          to: 'titresSubstances.titreEtapeId'\n        }\n      },\n      titresTitulaires: {\n        relation: Model.HasManyRelation,\n        modelClass: TitresTitulaires,\n        join: {\n          from: 'titresEtapes.id',\n          to: 'titresTitulaires.titreEtapeId'\n        }\n      },\n      titresAmodiataires: {\n        relation: Model.HasManyRelation,\n        modelClass: TitresAmodiataires,\n        join: {\n          from: 'titresEtapes.id',\n          to: 'titresAmodiataires.titreEtapeId'\n        }\n      },\n      titresAdministrations: {\n        relation: Model.HasManyRelation,\n        modelClass: TitresAdministrations,\n        join: {\n          from: 'titresEtapes.id',\n          to: 'titresAdministrations.titreEtapeId'\n        }\n      },\n      titresEmprises: {\n        relation: Model.HasManyRelation,\n        modelClass: TitresEmprises,\n        join: {\n          from: 'titresEtapes.id',\n          to: 'titresEmprises.titreEtapeId'\n        }\n      }\n    }\n  }\n\n  static get namedFilters() {\n    return {\n      orderDesc: builder => {\n        builder.orderBy('ordre', 'desc')\n      }\n    }\n  }\n}\n\nmodule.exports = TitresEtapes\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-etapes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 201,
    "kind": "class",
    "name": "TitresEtapes",
    "memberof": "camino-api/database/models/titres-etapes.js",
    "static": true,
    "longname": "camino-api/database/models/titres-etapes.js~TitresEtapes",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-etapes.js",
    "importStyle": "TitresEtapes",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 202,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-etapes.js~TitresEtapes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-etapes.js~TitresEtapes.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-etapes.js~TitresEtapes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-etapes.js~TitresEtapes.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/titres-etapes.js~TitresEtapes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-etapes.js~TitresEtapes.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": *, \"statut\": *, \"substances\": *, \"points\": *, \"titulaires\": *, \"amodiataires\": *, \"administrations\": *, \"documents\": *, \"emprises\": *, \"erreurs\": *, \"titresSubstances\": *, \"titresTitulaires\": *, \"titresAmodiataires\": *, \"titresAdministrations\": *, \"titresEmprises\": *}"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "get",
    "name": "namedFilters",
    "memberof": "camino-api/database/models/titres-etapes.js~TitresEtapes",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-etapes.js~TitresEtapes.namedFilters",
    "access": "public",
    "description": null,
    "lineNumber": 195,
    "undocument": true,
    "type": {
      "types": [
        "{\"orderDesc\": *}"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "file",
    "name": "camino-api/database/models/titres-phases.js",
    "content": "const { Model } = require('objection')\nconst PhasesStatuts = require('./phases-statuts')\n\nclass TitresPhases extends Model {\n  static get tableName() {\n    return 'titresPhases'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['titreDemarcheId', 'statutId'],\n\n      properties: {\n        titreDemarcheId: { type: 'string', maxLength: 128 },\n        statutId: { type: 'string', maxLength: 3 },\n        dateDebut: { type: 'date' },\n        dateFin: { type: 'date' }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      statut: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: PhasesStatuts,\n        join: {\n          from: 'titresPhases.statutId',\n          to: 'phasesStatuts.id'\n        }\n      }\n    }\n  }\n\n  static get idColumn() {\n    return 'titreDemarcheId'\n  }\n}\n\nmodule.exports = TitresPhases\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-phases.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 207,
    "kind": "class",
    "name": "TitresPhases",
    "memberof": "camino-api/database/models/titres-phases.js",
    "static": true,
    "longname": "camino-api/database/models/titres-phases.js~TitresPhases",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-phases.js",
    "importStyle": "TitresPhases",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 208,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-phases.js~TitresPhases",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-phases.js~TitresPhases.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-phases.js~TitresPhases",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-phases.js~TitresPhases.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/titres-phases.js~TitresPhases",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-phases.js~TitresPhases.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "{\"statut\": *}"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "get",
    "name": "idColumn",
    "memberof": "camino-api/database/models/titres-phases.js~TitresPhases",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-phases.js~TitresPhases.idColumn",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "camino-api/database/models/titres-points-references.js",
    "content": "const { Model } = require('objection')\n\nclass TitresPointsReferences extends Model {\n  static get tableName() {\n    return 'titresPointsReferences'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['titrePointId', 'id', 'systeme', 'coordonnees'],\n\n      properties: {\n        id: { type: 'string' },\n        titrePointId: { type: 'string' },\n        systeme: { type: 'string' },\n        coordonnees: {\n          type: 'object',\n          properties: {\n            x: { type: 'float' },\n            y: { type: 'float' }\n          }\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = TitresPointsReferences\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-points-references.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "class",
    "name": "TitresPointsReferences",
    "memberof": "camino-api/database/models/titres-points-references.js",
    "static": true,
    "longname": "camino-api/database/models/titres-points-references.js~TitresPointsReferences",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-points-references.js",
    "importStyle": "TitresPointsReferences",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 214,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-points-references.js~TitresPointsReferences",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-points-references.js~TitresPointsReferences.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-points-references.js~TitresPointsReferences",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-points-references.js~TitresPointsReferences.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "file",
    "name": "camino-api/database/models/titres-points.js",
    "content": "const { Model } = require('objection')\nconst knex = require('../index.js')\nconst TitresPointsReferences = require('./titres-points-references')\n\nclass TitresPoints extends Model {\n  static get tableName() {\n    return 'titresPoints'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: [\n        'id',\n        'titreEtapeId',\n        'coordonnees',\n        'groupe',\n        'contour',\n        'point'\n      ],\n\n      properties: {\n        id: { type: 'string' },\n        titreEtapeId: { type: 'string', maxLength: 128 },\n        coordonnees: {\n          type: 'object',\n          properties: {\n            x: { type: 'float' },\n            y: { type: 'float' }\n          }\n        },\n        groupe: { type: 'integer' },\n        contour: { type: 'integer' },\n        point: { type: 'integer' },\n        nom: { type: ['string', 'null'] },\n        description: { type: ['string', 'null'] },\n        securite: { type: ['boolean', 'null'] }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      references: {\n        relation: Model.HasManyRelation,\n        modelClass: TitresPointsReferences,\n        join: {\n          from: 'titresPoints.id',\n          to: 'titresPointsReferences.titrePointId'\n        }\n      }\n    }\n  }\n\n  $formatDatabaseJson(json) {\n    if (json.coordonnees) {\n      const t = `${json.coordonnees.x},${json.coordonnees.y}`\n      json.coordonnees = t\n    }\n    json = super.$formatDatabaseJson(json)\n    return json\n  }\n\n  $parseDatabaseJson(json) {\n    json = super.$parseDatabaseJson(json)\n    if (json) {\n      // console.log('--------------->', json)\n    }\n    return json\n  }\n}\n\nmodule.exports = TitresPoints\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-points.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 217,
    "kind": "class",
    "name": "TitresPoints",
    "memberof": "camino-api/database/models/titres-points.js",
    "static": true,
    "longname": "camino-api/database/models/titres-points.js~TitresPoints",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-points.js",
    "importStyle": "TitresPoints",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 218,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-points.js~TitresPoints",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-points.js~TitresPoints.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-points.js~TitresPoints",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-points.js~TitresPoints.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/titres-points.js~TitresPoints",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-points.js~TitresPoints.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "{\"references\": *}"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "$formatDatabaseJson",
    "memberof": "camino-api/database/models/titres-points.js~TitresPoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "camino-api/database/models/titres-points.js~TitresPoints#$formatDatabaseJson",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "json",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "$parseDatabaseJson",
    "memberof": "camino-api/database/models/titres-points.js~TitresPoints",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "camino-api/database/models/titres-points.js~TitresPoints#$parseDatabaseJson",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [
      {
        "name": "json",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "file",
    "name": "camino-api/database/models/titres-substances.js",
    "content": "const { Model } = require('objection')\nconst Substances = require('./substances')\n\nclass TitresSubstances extends Model {\n  static get tableName() {\n    return 'titresSubstances'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['substanceId', 'titreEtapeId'],\n\n      properties: {\n        substanceId: { type: 'string', maxLength: 4 },\n        titreEtapeId: { type: 'string', maxLength: 128 },\n        connexe: { type: 'boolean' },\n        ordre: { type: 'integer' }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      substance: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Substances,\n        join: {\n          from: 'titresSubstances.substanceId',\n          to: 'substances.id'\n        }\n      }\n    }\n  }\n\n  static get idColumn() {\n    return ['substanceId', 'titreEtapeId']\n  }\n}\n\nmodule.exports = TitresSubstances\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-substances.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 224,
    "kind": "class",
    "name": "TitresSubstances",
    "memberof": "camino-api/database/models/titres-substances.js",
    "static": true,
    "longname": "camino-api/database/models/titres-substances.js~TitresSubstances",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-substances.js",
    "importStyle": "TitresSubstances",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 225,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-substances.js~TitresSubstances",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-substances.js~TitresSubstances.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-substances.js~TitresSubstances",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-substances.js~TitresSubstances.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/titres-substances.js~TitresSubstances",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-substances.js~TitresSubstances.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "{\"substance\": *}"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "get",
    "name": "idColumn",
    "memberof": "camino-api/database/models/titres-substances.js~TitresSubstances",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-substances.js~TitresSubstances.idColumn",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "file",
    "name": "camino-api/database/models/titres-titulaires.js",
    "content": "const { Model } = require('objection')\nconst Entreprises = require('./entreprises')\n\nclass TitresTitulaires extends Model {\n  static get tableName() {\n    return 'titresTitulaires'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['entrepriseId', 'titreEtapeId'],\n\n      properties: {\n        entrepriseId: { type: 'string', maxLength: 64 },\n        titreEtapeId: { type: 'string', maxLength: 128 }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      entreprise: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Entreprises,\n        join: {\n          from: 'titresTitulaires.entrepriseId',\n          to: 'entreprises.id'\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = TitresTitulaires\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-titulaires.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 230,
    "kind": "class",
    "name": "TitresTitulaires",
    "memberof": "camino-api/database/models/titres-titulaires.js",
    "static": true,
    "longname": "camino-api/database/models/titres-titulaires.js~TitresTitulaires",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-titulaires.js",
    "importStyle": "TitresTitulaires",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 231,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-titulaires.js~TitresTitulaires",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-titulaires.js~TitresTitulaires.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-titulaires.js~TitresTitulaires",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-titulaires.js~TitresTitulaires.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/titres-titulaires.js~TitresTitulaires",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-titulaires.js~TitresTitulaires.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "{\"entreprise\": *}"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "file",
    "name": "camino-api/database/models/titres-travaux-rapports.js",
    "content": "const { Model } = require('objection')\n\nclass TitresTravauxRapports extends Model {\n  static get tableName() {\n    return 'titresTravauxRapports'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'titreId', 'date', 'contenu'],\n      properties: {\n        id: { type: 'string' },\n        titreId: { type: 'string' },\n        date: { type: 'date' },\n        confirmation: { type: 'boolean' },\n        contenu: { type: 'json' }\n      }\n    }\n  }\n}\n\nmodule.exports = TitresTravauxRapports\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres-travaux-rapports.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 235,
    "kind": "class",
    "name": "TitresTravauxRapports",
    "memberof": "camino-api/database/models/titres-travaux-rapports.js",
    "static": true,
    "longname": "camino-api/database/models/titres-travaux-rapports.js~TitresTravauxRapports",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres-travaux-rapports.js",
    "importStyle": "TitresTravauxRapports",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 236,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres-travaux-rapports.js~TitresTravauxRapports",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-travaux-rapports.js~TitresTravauxRapports.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 237,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres-travaux-rapports.js~TitresTravauxRapports",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres-travaux-rapports.js~TitresTravauxRapports.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "file",
    "name": "camino-api/database/models/titres.js",
    "content": "const { Model } = require('objection')\nconst Domaines = require('./domaines')\nconst Types = require('./types')\nconst Statuts = require('./statuts')\nconst TitresDemarches = require('./titres-demarches')\nconst TitresEtapes = require('./titres-etapes')\nconst Substances = require('./substances')\nconst TitresPoints = require('./titres-points')\nconst Entreprises = require('./entreprises')\nconst Administrations = require('./administrations')\nconst TitresTravauxRapports = require('./titres-travaux-rapports')\n\nclass Titres extends Model {\n  static get tableName() {\n    return 'titres'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom', 'domaineId', 'typeId', 'statutId'],\n      properties: {\n        id: { type: 'string' },\n        nom: { type: 'string' },\n        domaineId: { type: 'string', maxLength: 1 },\n        typeId: { type: 'string', maxLength: 3 },\n        statutId: { type: 'string', maxLength: 3 },\n        references: { type: ['json', 'null'] },\n        substancesTitreEtapeId: { type: ['string', 'null'], maxLength: 128 },\n        pointsTitreEtapeId: { type: ['string', 'null'], maxLength: 128 },\n        titulairesTitreEtapeId: { type: ['string', 'null'], maxLength: 128 },\n        amodiatairesTitreEtapeId: { type: ['string', 'null'], maxLength: 128 },\n        administrationsTitreEtapeId: {\n          type: ['string', 'null'],\n          maxLength: 128\n        },\n        surfaceTitreEtapeId: { type: ['string', 'null'], maxLength: 128 },\n        volumeTitreEtapeId: { type: ['string', 'null'], maxLength: 128 }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      domaine: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Domaines,\n        join: {\n          from: 'titres.domaineId',\n          to: 'domaines.id'\n        }\n      },\n      type: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Types,\n        join: {\n          from: 'titres.typeId',\n          to: 'types.id'\n        }\n      },\n      statut: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Statuts,\n        join: {\n          from: 'titres.statutId',\n          to: 'statuts.id'\n        }\n      },\n      demarches: {\n        relation: Model.HasManyRelation,\n        modelClass: TitresDemarches,\n        join: {\n          from: 'titres.id',\n          to: 'titresDemarches.titreId'\n        }\n      },\n      surfaceEtape: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: TitresEtapes,\n        join: {\n          from: 'titres.surfaceTitreEtapeId',\n          to: 'titresEtapes.id'\n        },\n        modify: builder => builder.select('surface')\n      },\n      volumeEtape: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: TitresEtapes,\n        join: {\n          from: 'titres.volumeTitreEtapeId',\n          to: 'titresEtapes.id'\n        },\n        modify: builder => builder.select(['volume', 'volumeUnite'])\n      },\n      substances: {\n        relation: Model.ManyToManyRelation,\n        modelClass: Substances,\n        join: {\n          from: 'titres.substancesTitreEtapeId',\n          through: {\n            from: 'titresSubstances.titreEtapeId',\n            to: 'titresSubstances.substanceId',\n            extra: ['ordre', 'connexe']\n          },\n          to: 'substances.id'\n        }\n      },\n      points: {\n        relation: Model.HasManyRelation,\n        modelClass: TitresPoints,\n        join: {\n          from: 'titres.pointsTitreEtapeId',\n          to: 'titresPoints.titreEtapeId'\n        }\n      },\n      titulaires: {\n        relation: Model.ManyToManyRelation,\n        modelClass: Entreprises,\n        join: {\n          from: 'titres.titulairesTitreEtapeId',\n          through: {\n            from: 'titresTitulaires.titreEtapeId',\n            to: 'titresTitulaires.entrepriseId'\n          },\n          to: 'entreprises.id'\n        }\n      },\n      amodiataires: {\n        relation: Model.ManyToManyRelation,\n        modelClass: Entreprises,\n        join: {\n          from: 'titres.amodiatairesTitreEtapeId',\n          through: {\n            from: 'titresAmodiataires.titreEtapeId',\n            to: 'titresAmodiataires.entrepriseId'\n          },\n          to: 'entreprises.id'\n        }\n      },\n      administrations: {\n        relation: Model.ManyToManyRelation,\n        modelClass: Administrations,\n        join: {\n          from: 'titres.administrationsTitreEtapeId',\n          through: {\n            from: 'titresAdministrations.titreEtapeId',\n            to: 'titresAdministrations.administrationId'\n          },\n          to: 'administrations.id'\n        }\n      },\n      travauxRapports: {\n        relation: Model.HasManyRelation,\n        modelClass: TitresTravauxRapports,\n        join: {\n          from: 'titres.id',\n          to: 'titresTravauxRapports.titreId'\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Titres\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/titres.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 239,
    "kind": "class",
    "name": "Titres",
    "memberof": "camino-api/database/models/titres.js",
    "static": true,
    "longname": "camino-api/database/models/titres.js~Titres",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/titres.js",
    "importStyle": "Titres",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 240,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/titres.js~Titres",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres.js~Titres.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/titres.js~Titres",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres.js~Titres.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/titres.js~Titres",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/titres.js~Titres.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "{\"domaine\": *, \"type\": *, \"statut\": *, \"demarches\": *, \"surfaceEtape\": *, \"volumeEtape\": *, \"substances\": *, \"points\": *, \"titulaires\": *, \"amodiataires\": *, \"administrations\": *, \"travauxRapports\": *}"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "file",
    "name": "camino-api/database/models/types.js",
    "content": "const { Model } = require('objection')\n\nconst DemarchesTypes = require('./demarches-types')\n\nclass Types extends Model {\n  static get tableName() {\n    return 'types'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'nom'],\n\n      properties: {\n        id: { type: 'string', maxLength: 3 },\n        nom: { type: 'string' }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    return {\n      types: {\n        relation: Model.ManyToManyRelation,\n        modelClass: DemarchesTypes,\n        join: {\n          from: 'types.id',\n          through: {\n            from: 'demarchesTypes__types.typeId',\n            to: 'demarchesTypes__types.demarcheTypeId',\n            extra: [\n              'dureeMax',\n              'acceptationImplicite',\n              'delaiImplicite',\n              'delaiRecours',\n              'legalRef',\n              'legalLien',\n              'dateDebut',\n              'dateFin'\n            ]\n          },\n          to: 'demarchesTypes.id'\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Types\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 244,
    "kind": "class",
    "name": "Types",
    "memberof": "camino-api/database/models/types.js",
    "static": true,
    "longname": "camino-api/database/models/types.js~Types",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/types.js",
    "importStyle": "Types",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 245,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/types.js~Types",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/types.js~Types.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/types.js~Types",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/types.js~Types.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/types.js~Types",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/types.js~Types.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "{\"types\": *}"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "file",
    "name": "camino-api/database/models/utilisateurs.js",
    "content": "const { Model } = require('objection')\nconst Permissions = require('./permissions')\n\nclass Utilisateurs extends Model {\n  static get tableName() {\n    return 'utilisateurs'\n  }\n\n  static get jsonSchema() {\n    return {\n      type: 'object',\n      required: ['id', 'email', 'motDePasse'],\n\n      properties: {\n        id: { type: 'string', minLength: 1, maxLength: 64 },\n        email: { type: 'string' },\n        motDePasse: { type: 'string', minLength: 8, maxLength: 255 },\n        nom: { type: ['string', 'null'] },\n        prenom: { type: ['string', 'null'] },\n        telephone_fixe: { type: ['string', 'null'] },\n        telephone_mobile: { type: ['string', 'null'] },\n        entrepriseId: { type: ['string', 'null'], maxLength: 64 },\n        administrationId: { type: ['string', 'null'], maxLength: 64 },\n        permissionId: { type: ['string', 'null'], maxLength: 12 },\n        preferences: { type: ['json', 'null'] }\n      }\n    }\n  }\n\n  static get relationMappings() {\n    const Administrations = require('./administrations')\n    const Entreprises = require('./entreprises')\n    return {\n      permission: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Permissions,\n        join: {\n          from: 'utilisateurs.permissionId',\n          to: 'permissions.id'\n        }\n        // modify: builder => builder.select('id')\n      },\n      administration: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Administrations,\n        join: {\n          from: 'utilisateurs.administrationId',\n          to: 'administrations.id'\n        }\n      },\n      entreprise: {\n        relation: Model.BelongsToOneRelation,\n        modelClass: Entreprises,\n        join: {\n          from: 'utilisateurs.entrepriseId',\n          to: 'entreprises.id'\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Utilisateurs\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/models/utilisateurs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 249,
    "kind": "class",
    "name": "Utilisateurs",
    "memberof": "camino-api/database/models/utilisateurs.js",
    "static": true,
    "longname": "camino-api/database/models/utilisateurs.js~Utilisateurs",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/models/utilisateurs.js",
    "importStyle": "Utilisateurs",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "objection~Model"
    ]
  },
  {
    "__docId__": 250,
    "kind": "get",
    "name": "tableName",
    "memberof": "camino-api/database/models/utilisateurs.js~Utilisateurs",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/utilisateurs.js~Utilisateurs.tableName",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "get",
    "name": "jsonSchema",
    "memberof": "camino-api/database/models/utilisateurs.js~Utilisateurs",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/utilisateurs.js~Utilisateurs.jsonSchema",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"properties\": *}"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "get",
    "name": "relationMappings",
    "memberof": "camino-api/database/models/utilisateurs.js~Utilisateurs",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/database/models/utilisateurs.js~Utilisateurs.relationMappings",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "{\"permission\": *, \"administration\": *, \"entreprise\": *}"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "file",
    "name": "camino-api/database/queries/_options.js",
    "content": "const utilisateurs = {\n  eager: '[permission, administration, entreprise]',\n  update: {\n    relate: ['permission', 'administration', 'entreprise'],\n    unrelate: ['permission', 'administration', 'entreprise'],\n    noDelete: ['permission', 'administration', 'entreprise']\n  }\n}\n\nconst administrations = {\n  eager: `utilisateurs.permission`\n}\n\nconst entreprises = {\n  eager: `utilisateurs.permission`\n}\n\nconst substances = {\n  eager: `legales.[code, domaine]`\n}\n\nconst points = {\n  eager: `references`\n}\n\nconst etapes = {\n  eager: `[points.${points.eager}, type, statut, documents, substances.${\n    substances.eager\n  }, titresSubstances, titulaires.${\n    entreprises.eager\n  }, titresTitulaires, amodiataires.${\n    entreprises.eager\n  }, titresAmodiataires, administrations.${\n    administrations.eager\n  }, titresAdministrations, emprises, titresEmprises]`,\n  update: {\n    relate: [\n      'type',\n      'statut',\n      'titulaires',\n      'amodiataires',\n      'substances',\n      'emprises',\n      'administrations'\n    ],\n    unrelate: [\n      'type',\n      'statut',\n      'titulaires',\n      'amodiataires',\n      'substances',\n      'emprises',\n      'administrations'\n    ],\n    noDelete: []\n  }\n}\n\nconst phases = {\n  eager: 'statut'\n}\n\nconst demarches = {\n  eager: `[type, statut, phase.${phases.eager}, etapes(orderDesc).${\n    etapes.eager\n  }]`\n}\n\nconst titres = {\n  eager: `[type, domaine, statut, points, substances.${\n    substances.eager\n  }, titulaires.${entreprises.eager}, amodiataires.${\n    entreprises.eager\n  }, administrations.${administrations.eager}, demarches(orderDesc).${\n    demarches.eager\n  }, surfaceEtape, volumeEtape, travauxRapports]`,\n  update: {\n    relate: ['type', 'domaine', 'statut', 'substances'],\n    unrelate: ['type', 'domaine', 'statut', 'substances'],\n    insertMissing: ['phases', 'phases.points']\n  }\n}\n\nconst demarchesTypes = {\n  eager: `etapesTypes.etapesStatuts`\n}\n\nmodule.exports = {\n  utilisateurs,\n  phases,\n  etapes,\n  demarches,\n  titres,\n  substances,\n  entreprises,\n  demarchesTypes\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/queries/_options.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 254,
    "kind": "variable",
    "name": "utilisateurs",
    "memberof": "camino-api/database/queries/_options.js",
    "static": true,
    "longname": "camino-api/database/queries/_options.js~utilisateurs",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/database/queries/_options.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"eager\": string, \"update\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 255,
    "kind": "variable",
    "name": "administrations",
    "memberof": "camino-api/database/queries/_options.js",
    "static": true,
    "longname": "camino-api/database/queries/_options.js~administrations",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/database/queries/_options.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "{\"eager\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 256,
    "kind": "variable",
    "name": "entreprises",
    "memberof": "camino-api/database/queries/_options.js",
    "static": true,
    "longname": "camino-api/database/queries/_options.js~entreprises",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/database/queries/_options.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"eager\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 257,
    "kind": "variable",
    "name": "substances",
    "memberof": "camino-api/database/queries/_options.js",
    "static": true,
    "longname": "camino-api/database/queries/_options.js~substances",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/database/queries/_options.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "{\"eager\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 258,
    "kind": "variable",
    "name": "points",
    "memberof": "camino-api/database/queries/_options.js",
    "static": true,
    "longname": "camino-api/database/queries/_options.js~points",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/database/queries/_options.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "{\"eager\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 259,
    "kind": "variable",
    "name": "etapes",
    "memberof": "camino-api/database/queries/_options.js",
    "static": true,
    "longname": "camino-api/database/queries/_options.js~etapes",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/database/queries/_options.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "{\"eager\": *, \"update\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 260,
    "kind": "variable",
    "name": "phases",
    "memberof": "camino-api/database/queries/_options.js",
    "static": true,
    "longname": "camino-api/database/queries/_options.js~phases",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/database/queries/_options.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "{\"eager\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 261,
    "kind": "variable",
    "name": "demarches",
    "memberof": "camino-api/database/queries/_options.js",
    "static": true,
    "longname": "camino-api/database/queries/_options.js~demarches",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/database/queries/_options.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "{\"eager\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 262,
    "kind": "variable",
    "name": "titres",
    "memberof": "camino-api/database/queries/_options.js",
    "static": true,
    "longname": "camino-api/database/queries/_options.js~titres",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/database/queries/_options.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "{\"eager\": *, \"update\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 263,
    "kind": "variable",
    "name": "demarchesTypes",
    "memberof": "camino-api/database/queries/_options.js",
    "static": true,
    "longname": "camino-api/database/queries/_options.js~demarchesTypes",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/database/queries/_options.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "{\"eager\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 264,
    "kind": "file",
    "name": "camino-api/database/queries/entreprises.js",
    "content": "const Entreprises = require('../models/entreprises')\nconst options = require('./_options')\n\nconst queries = {\n  async entrepriseGet(id) {\n    return Entreprises.query()\n      .findById(id)\n      .eager(options.entreprises.eager)\n  },\n  async entreprisesGet({ noms }) {\n    const q = Entreprises.query()\n      .skipUndefined()\n      .eager(options.entreprises.eager)\n\n    return q\n  }\n}\n\nmodule.exports = queries\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/queries/entreprises.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 265,
    "kind": "variable",
    "name": "queries",
    "memberof": "camino-api/database/queries/entreprises.js",
    "static": true,
    "longname": "camino-api/database/queries/entreprises.js~queries",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/queries/entreprises.js",
    "importStyle": "queries",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"entrepriseGet\": function, \"entreprisesGet\": function}"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "file",
    "name": "camino-api/database/queries/metas.js",
    "content": "const Types = require('../models/types')\nconst Domaines = require('../models/domaines')\nconst Statuts = require('../models/statuts')\nconst DemarchesTypes = require('../models/demarches-types')\nconst options = require('./_options')\n\nconst queries = {\n  async typesGet() {\n    return Types.query()\n  },\n\n  async domainesGet() {\n    return Domaines.query()\n  },\n\n  async statutsGet() {\n    return Statuts.query()\n  },\n\n  async demarchesTypesGet() {\n    return DemarchesTypes.query().eager(options.demarchesTypes.eager)\n  }\n}\n\nmodule.exports = queries\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/queries/metas.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 267,
    "kind": "variable",
    "name": "queries",
    "memberof": "camino-api/database/queries/metas.js",
    "static": true,
    "longname": "camino-api/database/queries/metas.js~queries",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/queries/metas.js",
    "importStyle": "queries",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "{\"typesGet\": function, \"domainesGet\": function, \"statutsGet\": function, \"demarchesTypesGet\": function}"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "file",
    "name": "camino-api/database/queries/permissions.js",
    "content": "const Permissions = require('../models/permissions')\n\nconst queries = {\n  async permissionsGet({ ordreMax }) {\n    return Permissions.query()\n      .skipUndefined()\n      .where('ordre', '>=', ordreMax)\n      .orderBy('ordre')\n  },\n\n  async permissionGet(id) {\n    return Permissions.query().findById(id)\n  }\n}\n\nmodule.exports = queries\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/queries/permissions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 269,
    "kind": "variable",
    "name": "queries",
    "memberof": "camino-api/database/queries/permissions.js",
    "static": true,
    "longname": "camino-api/database/queries/permissions.js~queries",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/queries/permissions.js",
    "importStyle": "queries",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"permissionsGet\": function, \"permissionGet\": function}"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "file",
    "name": "camino-api/database/queries/substances.js",
    "content": "const Substances = require('../models/substances')\nconst options = require('./_options')\n\nconst queries = {\n  async substancesGet() {\n    return Substances.query()\n      .eager(options.substances.eager)\n      .orderBy('nom')\n  },\n\n  async substanceGet(id) {\n    return Substances.query()\n      .findById(id)\n      .eager(options.substances.eager)\n  }\n}\n\nmodule.exports = queries\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/queries/substances.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 271,
    "kind": "variable",
    "name": "queries",
    "memberof": "camino-api/database/queries/substances.js",
    "static": true,
    "longname": "camino-api/database/queries/substances.js~queries",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/queries/substances.js",
    "importStyle": "queries",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"substancesGet\": function, \"substanceGet\": function}"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "file",
    "name": "camino-api/database/queries/titres-demarches.js",
    "content": "const TitresDemarches = require('../models/titres-demarches')\nconst options = require('./_options')\n\nconst queries = {\n  async titresDemarchesGet({ demarchesIds, titresIds }) {\n    return TitresDemarches.query()\n      .skipUndefined()\n      .eager(options.demarches.eager)\n      .orderBy('ordre')\n      .whereIn('titresDemarches.typeId', demarchesIds)\n      .whereIn('titresDemarches.titreId', titresIds)\n  },\n\n  async titreDemarcheGet(demarcheId) {\n    return TitresDemarches.query()\n      .eager(options.demarches.eager)\n      .findById(demarcheId)\n  },\n\n  async titreDemarcheStatutIdUpdate({ id, statutId }) {\n    return TitresDemarches.query()\n      .skipUndefined()\n      .findById(id)\n      .patch({ statutId })\n  },\n\n  async titreDemarcheOrdreUpdate({ id, ordre }) {\n    return TitresDemarches.query()\n      .skipUndefined()\n      .findById(id)\n      .patch({ ordre })\n  }\n}\n\nmodule.exports = queries\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/queries/titres-demarches.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 273,
    "kind": "variable",
    "name": "queries",
    "memberof": "camino-api/database/queries/titres-demarches.js",
    "static": true,
    "longname": "camino-api/database/queries/titres-demarches.js~queries",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/queries/titres-demarches.js",
    "importStyle": "queries",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"titresDemarchesGet\": function, \"titreDemarcheGet\": function, \"titreDemarcheStatutIdUpdate\": function, \"titreDemarcheOrdreUpdate\": function}"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "camino-api/database/queries/titres-etapes.js",
    "content": "const TitresEtapes = require('../models/titres-etapes')\nconst options = require('./_options')\n\nconst queries = {\n  async titreEtapeGet(titreEtapeId) {\n    return TitresEtapes.query()\n      .eager(options.etapes.eager)\n      .findById(titreEtapeId)\n  },\n\n  async titresEtapesGet({ etapesIds, titresDemarchesIds }) {\n    return TitresEtapes.query()\n      .skipUndefined()\n      .eager(options.etapes.eager)\n      .orderBy('ordre')\n      .whereIn('titresEtapes.typeId', etapesIds)\n      .whereIn('titresEtapes.titreDemarcheId', titresDemarchesIds)\n  },\n\n  async titreEtapeUpdate({ id, props }) {\n    return TitresEtapes.query()\n      .skipUndefined()\n      .findById(id)\n      .patch(props)\n  },\n\n  async titreEtapeUpsert(etape) {\n    return TitresEtapes.query()\n      .upsertGraph(etape, options.etapes.update)\n      .eager(options.etapes.eager)\n  }\n}\n\nmodule.exports = queries\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/queries/titres-etapes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "variable",
    "name": "queries",
    "memberof": "camino-api/database/queries/titres-etapes.js",
    "static": true,
    "longname": "camino-api/database/queries/titres-etapes.js~queries",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/queries/titres-etapes.js",
    "importStyle": "queries",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"titreEtapeGet\": function, \"titresEtapesGet\": function, \"titreEtapeUpdate\": function, \"titreEtapeUpsert\": function}"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "file",
    "name": "camino-api/database/queries/titres-phases.js",
    "content": "const TitresPhases = require('../models/titres-phases')\nconst options = require('./_options')\n\nconst queries = {\n  async titresPhasesGet() {\n    return TitresPhases.query()\n      .skipUndefined()\n      .eager(options.phases.eager)\n  },\n\n  async titrePhaseUpdate({ titrePhase }) {\n    return TitresPhases.query().upsertGraph(titrePhase, { insertMissing: true })\n    // {\n    //   console.log(titrePhase)\n    //   const exists = await TitresPhases.query().where(\n    //     'titreDemarcheId',\n    //     titrePhase.titreDemarcheId\n    //   )\n\n    //   if (exists) {\n    //     return TitresPhases.query()\n    //       .where('titreDemarcheId', titrePhase.titreDemarcheId)\n    //       .patch(titrePhase)\n    //   } else {\n    //     return TitresPhases.query().insert(titrePhase)\n    //   }\n    // },\n  },\n\n  async titrePhaseDelete({ titreDemarcheId }) {\n    return TitresPhases.query()\n      .deleteById(titreDemarcheId)\n      .returning('*')\n  }\n}\n\nmodule.exports = queries\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/queries/titres-phases.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 277,
    "kind": "variable",
    "name": "queries",
    "memberof": "camino-api/database/queries/titres-phases.js",
    "static": true,
    "longname": "camino-api/database/queries/titres-phases.js~queries",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/queries/titres-phases.js",
    "importStyle": "queries",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"titresPhasesGet\": function, \"titrePhaseUpdate\": function, \"titrePhaseDelete\": function}"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "file",
    "name": "camino-api/database/queries/titres-points.js",
    "content": "const TitresPoints = require('../models/titres-points')\n\nconst queries = {\n  async titresPointsGet() {\n    return TitresPoints.query()\n  },\n\n  async titrePointUpdate({ id, groupe, contour, point }) {\n    return TitresPoints.query()\n      .skipUndefined()\n      .findById(id)\n      .patch({ id, groupe, contour, point })\n  }\n}\n\nmodule.exports = queries\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/queries/titres-points.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 279,
    "kind": "variable",
    "name": "queries",
    "memberof": "camino-api/database/queries/titres-points.js",
    "static": true,
    "longname": "camino-api/database/queries/titres-points.js~queries",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/queries/titres-points.js",
    "importStyle": "queries",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"titresPointsGet\": function, \"titrePointUpdate\": function}"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "file",
    "name": "camino-api/database/queries/titres-travaux.js",
    "content": "const titreTravauxRapports = require('../models/titres-travaux-rapports')\n\nconst queries = {\n  async titresTravauxRapportGet(id) {\n    return titreTravauxRapports.query().findById(id)\n  },\n\n  async titresTravauxRapportsGet() {\n    return titreTravauxRapports.query().skipUndefined()\n  },\n\n  async titreTravauxRapportUpdate({ titreTravauxRapport }) {\n    return titreTravauxRapports\n      .query()\n      .upsertGraph(titreTravauxRapport, { insertMissing: true })\n      .first()\n  }\n}\n\nmodule.exports = queries\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/queries/titres-travaux.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 281,
    "kind": "variable",
    "name": "queries",
    "memberof": "camino-api/database/queries/titres-travaux.js",
    "static": true,
    "longname": "camino-api/database/queries/titres-travaux.js~queries",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/queries/titres-travaux.js",
    "importStyle": "queries",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"titresTravauxRapportGet\": function, \"titresTravauxRapportsGet\": function, \"titreTravauxRapportUpdate\": function}"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "file",
    "name": "camino-api/database/queries/titres.js",
    "content": "const Titres = require('../models/titres')\nconst options = require('./_options')\n\nconst queries = {\n  async titreGet(id) {\n    return Titres.query()\n      .findById(id)\n      .eager(options.titres.eager)\n  },\n\n  async titresGet({\n    typeIds,\n    domaineIds,\n    statutIds,\n    substances,\n    noms,\n    entreprises,\n    references\n  }) {\n    const q = Titres.query()\n      .skipUndefined()\n      .eager(options.titres.eager)\n\n    if (typeIds) {\n      q.whereIn('titres.typeId', typeIds)\n    }\n\n    if (domaineIds) {\n      q.whereIn('titres.domaineId', domaineIds)\n    }\n\n    if (statutIds) {\n      q.whereIn('titres.statutId', statutIds)\n    }\n\n    if (noms) {\n      q.where(builder => {\n        builder\n          .whereRaw(`?? ~* ?`, [\n            'titres.nom',\n            noms.map(n => `(?=.*?(${n}))`).join('')\n          ])\n          .orWhereRaw(`?? ~* ?`, [\n            'titres.id',\n            noms.map(n => `(?=.*?(${n}))`).join('')\n          ])\n      })\n    }\n\n    if (references) {\n      q.where(builder => {\n        references.forEach(ref => {\n          builder.orWhereRaw(`lower(??::text) like ?`, [\n            'titres.references',\n            `%${ref.toLowerCase()}%`\n          ])\n        })\n      })\n      // .groupBy('titres.id')\n      // .havingRaw(\n      //   `(${references\n      //     .map(_ => `count(*) filter (where lower(??) like ?) > 0`)\n      //     .join(') and (')})`,\n      //   references.reduce(\n      //     (res, ref) => [...res, `%${ref.toLowerCase()}%`],\n      //     []\n      //   )\n      // )\n    }\n\n    // if (substances) {\n    //   q.where(builder => {\n    //     builder\n    //       .whereRaw(`?? ~* ?`, ['substances.nom', substances.join('|')])\n    //       .orWhereRaw(`?? ~* ?`, ['substances.id', substances.join('|')])\n    //       .orWhereRaw(`?? ~* ?`, [\n    //         'substances:legales.nom',\n    //         substances.join('|')\n    //       ])\n    //       .orWhereRaw(`?? ~* ?`, [\n    //         'substances:legales.id',\n    //         substances.join('|')\n    //       ])\n    //   }).joinRelation('substances.legales')\n    // }\n\n    // if (substances) {\n    //   q.where(builder => {\n    //     builder.whereIn(\n    //       'substances.nom',\n    //       substances.map(s => `%${s.toLowerCase()}%`)\n    //     )\n    //     // .orWhereIn('substances.id', substances)\n    //     // .orWhereIn('substances:legales.nom', substances)\n    //     // .orWhereIn('substances:legales.id', substances)\n    //   }).joinRelation('substances')\n    // }\n\n    // if (substances) {\n    //   q.joinRelation('substances')\n\n    //   q.where('titre.id', 'in', builder => {\n    //     substances.forEach((s, i) => {\n    //       builder.where('substances.nom', 'like', `%${s.toLowerCase()}%`)\n    //       // .orWhereIn('substances.id', substances)\n    //       // .orWhereIn('substances:legales.nom', substances)\n    //       // .orWhereIn('substances:legales.id', substances)\n    //     })\n    //   })\n    // }\n\n    // if (substances) {\n    //   q.where(builder => {\n    //     builder.whereRaw(\n    //       `lower(??) like all(array[${substances.map(() => '?').join(',')}])`,\n    //       ['substances.nom', ...substances.map(s => `%${s.toLowerCase()}%`)]\n    //     )\n    //     // .whereIn('substances.nom', substances)\n    //     // .orWhereIn('substances.id', substances)\n    //     // .orWhereIn('substances:legales.nom', substances)\n    //     // .orWhereIn('substances:legales.id', substances)\n    //   }).joinRelation('substances')\n    // }\n\n    if (substances) {\n      const fields = [\n        'substances.nom',\n        'substances.id',\n        'substances:legales.nom',\n        'substances:legales.id'\n      ]\n\n      q.where(builder => {\n        substances.forEach(s => {\n          fields.forEach(f => {\n            builder.orWhereRaw(`lower(??) like ?`, [f, `%${s.toLowerCase()}%`])\n          })\n        })\n      })\n        .groupBy('titres.id')\n        .havingRaw(\n          `(${substances\n            .map(_ =>\n              fields\n                .map(_ => `count(*) filter (where lower(??) like ?) > 0`)\n                .join(' or ')\n            )\n            .join(') and (')})`,\n          substances.reduce(\n            (res, s) => [\n              ...res,\n              ...fields.reduce((r, f) => [...r, f, `%${s.toLowerCase()}%`], [])\n            ],\n            []\n          )\n        )\n        .joinRelation('substances.legales')\n    }\n\n    if (entreprises) {\n      const fields = [\n        'titulaires.nom',\n        'titulaires.id'\n        // 'amodiataires.nom',\n        // 'amodiataires.id'\n      ]\n\n      q.where(builder => {\n        entreprises.forEach(s => {\n          fields.forEach(f => {\n            builder.orWhereRaw(`lower(??) like ?`, [f, `%${s.toLowerCase()}%`])\n          })\n        })\n      })\n        .groupBy('titres.id')\n        .havingRaw(\n          `(${entreprises\n            .map(_ =>\n              fields\n                .map(_ => `count(*) filter (where lower(??) like ?) > 0`)\n                .join(' or ')\n            )\n            .join(') and (')})`,\n          entreprises.reduce(\n            (res, s) => [\n              ...res,\n              ...fields.reduce((r, f) => [...r, f, `%${s.toLowerCase()}%`], [])\n            ],\n            []\n          )\n        )\n        .joinRelation('titulaires')\n    }\n\n    // console.log(q.toSql())\n    return q\n  },\n\n  async titrePropsUpdate({ id, props }) {\n    return Titres.query()\n      .skipUndefined()\n      .findById(id)\n      .patch(props)\n  },\n\n  async titreAdd(titre) {\n    return Titres.query()\n      .insertGraph(titre, options.titres.update)\n      .first()\n      .eager(options.titres.eager)\n  },\n\n  async titreRemove(id) {\n    return Titres.query()\n      .deleteById(id)\n      .first()\n      .eager(options.titres.eager)\n      .returning('*')\n  },\n\n  async titreUpdate(titre) {\n    Titres.query()\n      .upsertGraph([titre], options.titres.update)\n      .eager(options.titres.eager)\n      .first()\n  }\n}\n\nmodule.exports = queries\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/queries/titres.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 283,
    "kind": "variable",
    "name": "queries",
    "memberof": "camino-api/database/queries/titres.js",
    "static": true,
    "longname": "camino-api/database/queries/titres.js~queries",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/queries/titres.js",
    "importStyle": "queries",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"titreGet\": function, \"titresGet\": function, \"titrePropsUpdate\": function, \"titreAdd\": function, \"titreRemove\": function, \"titreUpdate\": function}"
      ]
    }
  },
  {
    "__docId__": 284,
    "kind": "file",
    "name": "camino-api/database/queries/utilisateurs.js",
    "content": "const Utilisateurs = require('../models/utilisateurs')\nconst options = require('./_options')\n\nconst queries = {\n  async utilisateurGet(id) {\n    const utilisateur = await Utilisateurs.query()\n      .findById(id)\n      .eager(options.utilisateurs.eager)\n\n    return utilisateur\n  },\n\n  async utilisateurByEmailGet(email) {\n    const utilisateur = await Utilisateurs.query()\n      .where('email', email)\n      .eager(options.utilisateurs.eager)\n      .first()\n\n    return utilisateur\n  },\n\n  async utilisateursGet({\n    noms,\n    entrepriseIds,\n    administrationIds,\n    permissionIds\n  }) {\n    const q = Utilisateurs.query()\n      .skipUndefined()\n      .eager(options.utilisateurs.eager)\n      .whereIn('utilisateurs.administrationId', administrationIds)\n      .whereIn('utilisateurs.entrepriseId', entrepriseIds)\n      .whereIn('utilisateurs.permissionId', permissionIds)\n\n    if (noms) {\n      q.whereRaw(`lower(??) ~* ${noms.map(n => '?').join('|')}`, [\n        'utilisateurs.nom',\n        ...noms.map(n => n.toLowerCase())\n      ])\n    }\n\n    return q\n  },\n\n  async utilisateurAdd(utilisateur) {\n    return Utilisateurs.query()\n      .insertGraph(utilisateur, options.utilisateurs.update)\n      .eager(options.utilisateurs.eager)\n      .first()\n  },\n\n  async utilisateurRemove(id) {\n    return Utilisateurs.query()\n      .deleteById(id)\n      .first()\n      .returning('*')\n  },\n\n  async utilisateurUpdate(utilisateur) {\n    return Utilisateurs.query()\n      .upsertGraphAndFetch(utilisateur, options.utilisateurs.update)\n      .eager(options.utilisateurs.eager)\n  }\n}\n\nmodule.exports = queries\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/database/queries/utilisateurs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 285,
    "kind": "variable",
    "name": "queries",
    "memberof": "camino-api/database/queries/utilisateurs.js",
    "static": true,
    "longname": "camino-api/database/queries/utilisateurs.js~queries",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/database/queries/utilisateurs.js",
    "importStyle": "queries",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"utilisateurGet\": function, \"utilisateurByEmailGet\": function, \"utilisateursGet\": function, \"utilisateurAdd\": function, \"utilisateurRemove\": function, \"utilisateurUpdate\": function}"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "file",
    "name": "camino-api/index.js",
    "content": "/**\n * Camino API, le cadastre minier numérique ouvert\n *\n * This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\nrequire('dotenv').config()\nrequire('./database/index')\nconst chalk = require('chalk')\nconst express = require('express')\nconst cors = require('cors')\nconst compression = require('compression')\nconst graphqlHTTP = require('express-graphql')\nconst expressJwt = require('express-jwt')\nconst Sentry = require('@sentry/node')\n\nconst { port, url } = require('./config/index')\nconst schema = require('./api/schemas')\nconst rootValue = require('./api/resolvers')\n\nconst app = express()\n\nif (process.env.SENTRY_DSN) {\n  Sentry.init({\n    dsn: process.env.SENTRY_DSN\n  })\n\n  app.use(Sentry.Handlers.requestHandler())\n}\n\napp.use(cors({ credentials: true }))\n\napp.use(compression())\n\napp.use(\n  expressJwt({\n    credentialsRequired: false,\n    secret: process.env.JWT_SECRET || 'jwtSecret should be declared in .env'\n  })\n  // (err, req, res, next) => {\n  //   if (err.code === 'invalid_token') return next()\n  //   return next()\n  // }\n)\n\n// app.get('/', (req, res) => {\n//   console.log('broke')\n//   throw new Error('Broke!')\n// })\n\napp.use(\n  '/',\n  graphqlHTTP((req, res, graphQLParams) => ({\n    schema,\n    rootValue,\n    graphiql: true,\n    pretty: true,\n    formatError: err => ({\n      message: err.message,\n      locations: err.locations,\n      stack: err.stack ? err.stack.split('\\n') : [],\n      path: err.path\n    }),\n    context: {\n      user: req.user\n    }\n  }))\n)\n\nif (process.env.SENTRY_DSN) {\n  app.use(Sentry.Handlers.errorHandler())\n}\n\napp.listen(port, () => {\n  console.log(' ')\n  console.log(chalk.bgWhiteBright.black.bold('> Url: ' + url + ' '))\n  console.log(chalk.bgWhiteBright.black.bold('> ENV: ' + process.env.ENV + ' '))\n  console.log(\n    chalk.bgWhiteBright.black.bold('> NODE_ENV: ' + process.env.NODE_ENV + ' ')\n  )\n  console.log(' ')\n})\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 287,
    "kind": "variable",
    "name": "app",
    "memberof": "camino-api/index.js",
    "static": true,
    "longname": "camino-api/index.js~app",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 288,
    "kind": "file",
    "name": "camino-api/jest.config.js",
    "content": "// For a detailed explanation regarding each configuration property, visit:\n// https://jestjs.io/docs/en/configuration.html\n\nmodule.exports = {\n  // All imported modules in your tests should be mocked automatically\n  // automock: false,\n\n  // Stop running tests after the first failure\n  // bail: false,\n\n  // Respect \"browser\" field in package.json when resolving modules\n  // browser: false,\n\n  // The directory where Jest should store its cached dependency information\n  // cacheDirectory: \"/var/folders/k1/qn_ccxjn65lgnjx5d1xh31dm0000gn/T/jest_dx\",\n\n  // Automatically clear mock calls and instances between every test\n  clearMocks: true,\n\n  // Indicates whether the coverage information should be collected while executing the test\n  // collectCoverage: false,\n\n  // An array of glob patterns indicating a set of files for which coverage information should be collected\n  // collectCoverageFrom: null,\n\n  // The directory where Jest should output its coverage files\n  coverageDirectory: 'coverage',\n\n  // An array of regexp pattern strings used to skip coverage collection\n  // coveragePathIgnorePatterns: [\n  //   \"/node_modules/\"\n  // ],\n\n  // A list of reporter names that Jest uses when writing coverage reports\n  // coverageReporters: [\n  //   \"json\",\n  //   \"text\",\n  //   \"lcov\",\n  //   \"clover\"\n  // ],\n\n  // An object that configures minimum threshold enforcement for coverage results\n  // coverageThreshold: null,\n\n  // Make calling deprecated APIs throw helpful error messages\n  // errorOnDeprecated: false,\n\n  // Force coverage collection from ignored files usin a array of glob patterns\n  // forceCoverageMatch: [],\n\n  // A path to a module which exports an async function that is triggered once before all test suites\n  // globalSetup: null,\n\n  // A path to a module which exports an async function that is triggered once after all test suites\n  // globalTeardown: null,\n\n  // A set of global variables that need to be available in all test environments\n  // globals: {},\n\n  // An array of directory names to be searched recursively up from the requiring module's location\n  // moduleDirectories: [\n  //   \"node_modules\"\n  // ],\n\n  // An array of file extensions your modules use\n  // moduleFileExtensions: [\n  //   \"js\",\n  //   \"json\",\n  //   \"jsx\",\n  //   \"node\"\n  // ],\n\n  // A map from regular expressions to module names that allow to stub out resources with a single module\n  // moduleNameMapper: {},\n\n  // An array of regexp pattern strings, matched against all module paths before considered 'visible' to the module loader\n  // modulePathIgnorePatterns: [],\n\n  // Activates notifications for test results\n  // notify: false,\n\n  // An enum that specifies notification mode. Requires { notify: true }\n  // notifyMode: \"always\",\n\n  // A preset that is used as a base for Jest's configuration\n  // preset: null,\n\n  // Run tests from one or more projects\n  // projects: null,\n\n  // Use this configuration option to add custom reporters to Jest\n  // reporters: undefined,\n\n  // Automatically reset mock state between every test\n  // resetMocks: false,\n\n  // Reset the module registry before running each individual test\n  // resetModules: false,\n\n  // A path to a custom resolver\n  // resolver: null,\n\n  // Automatically restore mock state between every test\n  // restoreMocks: false,\n\n  // The root directory that Jest should scan for tests and modules within\n  // rootDir: null,\n\n  // A list of paths to directories that Jest should use to search for files in\n  // roots: [\n  //   \"<rootDir>\"\n  // ],\n\n  // Allows you to use a custom runner instead of Jest's default test runner\n  // runner: \"jest-runner\",\n\n  // The paths to modules that run some code to configure or set up the testing environment before each test\n  // setupFiles: [],\n\n  // The path to a module that runs some code to configure or set up the testing framework before each test\n  // setupTestFrameworkScriptFile: null,\n\n  // A list of paths to snapshot serializer modules Jest should use for snapshot testing\n  // snapshotSerializers: [],\n\n  // The test environment that will be used for testing\n  testEnvironment: 'node'\n\n  // Options that will be passed to the testEnvironment\n  // testEnvironmentOptions: {},\n\n  // Adds a location field to test results\n  // testLocationInResults: false,\n\n  // The glob patterns Jest uses to detect test files\n  // testMatch: [\n  //   \"**/__tests__/**/*.js?(x)\",\n  //   \"**/?(*.)+(spec|test).js?(x)\"\n  // ],\n\n  // An array of regexp pattern strings that are matched against all test paths, matched tests are skipped\n  // testPathIgnorePatterns: [\n  //   \"/node_modules/\"\n  // ],\n\n  // The regexp pattern Jest uses to detect test files\n  // testRegex: \"\",\n\n  // This option allows the use of a custom results processor\n  // testResultsProcessor: null,\n\n  // This option allows use of a custom test runner\n  // testRunner: \"jasmine2\",\n\n  // This option sets the URL for the jsdom environment. It is reflected in properties such as location.href\n  // testURL: \"http://localhost\",\n\n  // Setting this value to \"fake\" allows the use of fake timers for functions such as \"setTimeout\"\n  // timers: \"real\",\n\n  // A map from regular expressions to paths to transformers\n  // transform: null,\n\n  // An array of regexp pattern strings that are matched against all source file paths, matched files will skip transformation\n  // transformIgnorePatterns: [\n  //   \"/node_modules/\"\n  // ],\n\n  // An array of regexp pattern strings that are matched against all modules before the module loader will automatically return a mock for them\n  // unmockedModulePathPatterns: undefined,\n\n  // Indicates whether each individual test should be reported during the run\n  // verbose: null,\n\n  // An array of regexp patterns that are matched against all source file paths before re-running tests in watch mode\n  // watchPathIgnorePatterns: [],\n\n  // Whether to use watchman for file crawling\n  // watchman: true,\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/jest.config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "file",
    "name": "camino-api/tasks/_utils/__mocks__/titre-demarches.js",
    "content": "module.exports = [\n  {\n    id: 'h-cxx-courdemanges-1988-oct01',\n    titreId: 'h-cxx-courdemanges-1988',\n    typeId: 'oct',\n    statutId: 'acc',\n    ordre: 1,\n    annulationDemarcheId: null,\n    type: {\n      id: 'oct',\n      nom: 'octroi',\n      ordre: 1,\n      duree: true,\n      points: true,\n      substances: true,\n      titulaires: true,\n      renouvelable: null,\n      exception: null\n    },\n    statut: {\n      id: 'acc',\n      nom: 'acceptée',\n      couleur: 'success'\n    },\n    phase: {\n      titreDemarcheId: 'h-cxx-courdemanges-1988-oct01',\n      statutId: 'ech',\n      dateDebut: '1988-03-11T23:00:00.000Z',\n      dateFin: '2013-03-11T23:00:00.000Z',\n      statut: {\n        id: 'ech',\n        nom: 'échu',\n        couleur: 'neutral'\n      }\n    },\n    etapes: [\n      {\n        id: 'h-cxx-courdemanges-1988-oct01-dpu01',\n        titreDemarcheId: 'h-cxx-courdemanges-1988-oct01',\n        typeId: 'dpu',\n        statutId: 'acc',\n        ordre: 2,\n        date: '1988-03-11T23:00:00.000Z',\n        dateDebut: null,\n        dateFin: null,\n        duree: null,\n        surface: null,\n        volume: null,\n        volumeUnite: null,\n        visas: null,\n        engagement: null,\n        engagementDevise: null,\n        sourceIndisponible: null,\n        statut: {\n          id: 'acc',\n          nom: 'acceptation',\n          couleur: 'success'\n        },\n        type: {\n          id: 'dpu',\n          nom: 'publication de décision au JORF',\n          acceptationAuto: null,\n          legalRef: null,\n          legalLien: null,\n          dateDebut: null,\n          dateFin: null\n        },\n        points: [\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dpu01-g01-c01-p001',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dpu01',\n            coordonnees: {\n              x: 4.51459594890447,\n              y: 48.6719486120829\n            },\n            groupe: 1,\n            contour: 1,\n            point: 1,\n            nom: '1',\n            description: null,\n            securite: null,\n            references: []\n          },\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dpu01-g01-c01-p002',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dpu01',\n            coordonnees: {\n              x: 4.51459616094044,\n              y: 48.6899483429733\n            },\n            groupe: 1,\n            contour: 1,\n            point: 2,\n            nom: '2',\n            description: null,\n            securite: null,\n            references: []\n          },\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dpu01-g01-c01-p003',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dpu01',\n            coordonnees: {\n              x: 4.52359772370847,\n              y: 48.6899476947979\n            },\n            groupe: 1,\n            contour: 1,\n            point: 3,\n            nom: '3',\n            description: null,\n            securite: null,\n            references: []\n          },\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dpu01-g01-c01-p004',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dpu01',\n            coordonnees: {\n              x: 4.52359638442287,\n              y: 48.7079472655535\n            },\n            groupe: 1,\n            contour: 1,\n            point: 4,\n            nom: '4',\n            description: null,\n            securite: null,\n            references: []\n          },\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dpu01-g01-c01-p005',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dpu01',\n            coordonnees: {\n              x: 4.53259652584434,\n              y: 48.7079491092924\n            },\n            groupe: 1,\n            contour: 1,\n            point: 5,\n            nom: '5',\n            description: null,\n            securite: null,\n            references: []\n          },\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dpu01-g01-c01-p006',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dpu01',\n            coordonnees: {\n              x: 4.53259659192424,\n              y: 48.7169477868536\n            },\n            groupe: 1,\n            contour: 1,\n            point: 6,\n            nom: '6',\n            description: null,\n            securite: null,\n            references: []\n          },\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dpu01-g01-c01-p007',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dpu01',\n            coordonnees: {\n              x: 4.56859872248003,\n              y: 48.716948427773\n            },\n            groupe: 1,\n            contour: 1,\n            point: 7,\n            nom: '7',\n            description: null,\n            securite: null,\n            references: []\n          },\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dpu01-g01-c01-p008',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dpu01',\n            coordonnees: {\n              x: 4.56859806574096,\n              y: 48.6629495950434\n            },\n            groupe: 1,\n            contour: 1,\n            point: 8,\n            nom: '8',\n            description: null,\n            securite: null,\n            references: []\n          },\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dpu01-g01-c01-p009',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dpu01',\n            coordonnees: {\n              x: 4.53259748905556,\n              y: 48.662948591802\n            },\n            groupe: 1,\n            contour: 1,\n            point: 9,\n            nom: '9',\n            description: null,\n            securite: null,\n            references: []\n          },\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dpu01-g01-c01-p010',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dpu01',\n            coordonnees: {\n              x: 4.53259759874971,\n              y: 48.6719486061898\n            },\n            groupe: 1,\n            contour: 1,\n            point: 10,\n            nom: '10',\n            description: null,\n            securite: null,\n            references: []\n          },\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dpu01-g01-c01-p011',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dpu01',\n            coordonnees: {\n              x: 4.51459594890447,\n              y: 48.6719486120829\n            },\n            groupe: 1,\n            contour: 1,\n            point: 11,\n            nom: '11',\n            description: null,\n            securite: null,\n            references: []\n          }\n        ],\n        documents: [\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dpu01-b1fe6f9a',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dpu01',\n            type: 'Décret',\n            nom:\n              \"Décret du 7 mars 1988 accordant la concession d'hydrocarbures liquides ou gazeux dite Concession de Courdemanges à la Société nationale Elf-Aquitaine (Production), à la Société BP France, à la Société française de développement pétrolier BP et à la Société Pétrorep conjointes et solidaires\",\n            jorf: 'JORFTEXT000000700374',\n            nor: 'INDE8800069D',\n            url:\n              'https://www.legifrance.gouv.fr/affichTexte.do?cidTexte=JORFTEXT000000700374',\n            uri: null,\n            fichier: null\n          }\n        ],\n        substances: [],\n        titresSubstances: [],\n        titulaires: [],\n        titresTitulaires: [],\n        amodiataires: [],\n        titresAmodiataires: [],\n        administrations: [],\n        titresAdministrations: [],\n        emprises: [],\n        titresEmprises: []\n      },\n      {\n        id: 'h-cxx-courdemanges-1988-oct01-dex01',\n        titreDemarcheId: 'h-cxx-courdemanges-1988-oct01',\n        typeId: 'dex',\n        statutId: 'acc',\n        ordre: 1,\n        date: '1988-03-06T23:00:00.000Z',\n        dateDebut: null,\n        dateFin: '2013-03-11T23:00:00.000Z',\n        duree: 25,\n        surface: 19.9,\n        volume: null,\n        volumeUnite: null,\n        visas: null,\n        engagement: null,\n        engagementDevise: null,\n        sourceIndisponible: null,\n        statut: {\n          id: 'acc',\n          nom: 'acceptation',\n          couleur: 'success'\n        },\n        type: {\n          id: 'dex',\n          nom: 'décision expresse',\n          acceptationAuto: null,\n          legalRef: null,\n          legalLien: null,\n          dateDebut: null,\n          dateFin: null\n        },\n        points: [],\n        documents: [\n          {\n            id: 'h-cxx-courdemanges-1988-oct01-dex01-14b2848a',\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dex01',\n            type: 'Décret',\n            nom:\n              \"Décret du 7 mars 1988 accordant la concession d'hydrocarbures liquides ou gazeux dite Concession de Courdemanges à la Société nationale Elf-Aquitaine (Production), à la Société BP France, à la Société française de développement pétrolier BP et à la Société Pétrorep conjointes et solidaires\",\n            jorf: null,\n            nor: null,\n            url: null,\n            uri: null,\n            fichier: null\n          }\n        ],\n        substances: [\n          {\n            id: 'hydx',\n            nom: 'hydrocarbures liquides ou gazeux',\n            symbole: null,\n            gerep: null,\n            description: null,\n            ordre: null,\n            connexe: null,\n            legales: [\n              {\n                id: 'hydx',\n                nom: 'hydrocarbures liquides ou gazeux',\n                domaineId: 'h',\n                description: \"A l'exeption de la tourbe\",\n                substanceLegaleCodeId: 'l111_1-1',\n                code: {\n                  id: 'l111_1-1',\n                  nom: 'L111-1, 1°',\n                  description:\n                    \"Des hydrocarbures et des combustibles fossiles, la tourbe exceptée, qu'ils soient sous forme solide, liquide ou gazeuse, du graphite, du diamant\",\n                  lien:\n                    'https://www.legifrance.gouv.fr/affichCodeArticle.do;?idArticle=LEGIARTI000036435815&cidTexte=LEGITEXT000023501962'\n                },\n                domaine: {\n                  id: 'h',\n                  nom: 'hydrocarbures liquides ou gazeux',\n                  ordre: 4\n                }\n              }\n            ]\n          }\n        ],\n        titresSubstances: [\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dex01',\n            substanceId: 'hydx',\n            connexe: null,\n            ordre: null\n          }\n        ],\n        titulaires: [\n          {\n            id: 'fr-000000014',\n            nom: 'Société française de développement pétrolier BP',\n            raisonSociale: null,\n            paysId: 'FR',\n            legalSiren: null,\n            legalEtranger: null,\n            legalForme: null,\n            voieNumero: null,\n            voieType: null,\n            voieNom: null,\n            adresseComplement: null,\n            codePostal: null,\n            ville: null,\n            cedex: null,\n            localite: null,\n            insee: null,\n            url: null,\n            email: null,\n            telephone: null,\n            utilisateurs: []\n          },\n          {\n            id: 'fr-542034327',\n            nom: 'BP France',\n            raisonSociale: null,\n            paysId: 'FR',\n            legalSiren: '542034327',\n            legalEtranger: null,\n            legalForme: null,\n            voieNumero: null,\n            voieType: null,\n            voieNom: null,\n            adresseComplement: null,\n            codePostal: null,\n            ville: 'PONTOISE',\n            cedex: null,\n            localite: null,\n            insee: null,\n            url: null,\n            email: null,\n            telephone: null,\n            utilisateurs: []\n          },\n          {\n            id: 'fr-562034629',\n            nom: 'Petrorep',\n            raisonSociale: null,\n            paysId: 'FR',\n            legalSiren: '562034629',\n            legalEtranger: null,\n            legalForme: null,\n            voieNumero: null,\n            voieType: null,\n            voieNom: null,\n            adresseComplement: null,\n            codePostal: null,\n            ville: 'PARIS',\n            cedex: null,\n            localite: null,\n            insee: null,\n            url: null,\n            email: null,\n            telephone: null,\n            utilisateurs: []\n          },\n          {\n            id: 'fr-632022711',\n            nom: 'Elf Aquitaine (Production)',\n            raisonSociale: null,\n            paysId: 'FR',\n            legalSiren: '632022711',\n            legalEtranger: null,\n            legalForme: null,\n            voieNumero: null,\n            voieType: null,\n            voieNom: null,\n            adresseComplement: null,\n            codePostal: null,\n            ville: 'NANTERRE',\n            cedex: null,\n            localite: null,\n            insee: null,\n            url: null,\n            email: null,\n            telephone: null,\n            utilisateurs: []\n          }\n        ],\n        titresTitulaires: [\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dex01',\n            entrepriseId: 'fr-000000014'\n          },\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dex01',\n            entrepriseId: 'fr-542034327'\n          },\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dex01',\n            entrepriseId: 'fr-562034629'\n          },\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-oct01-dex01',\n            entrepriseId: 'fr-632022711'\n          }\n        ],\n        amodiataires: [],\n        titresAmodiataires: [],\n        administrations: [],\n        titresAdministrations: [],\n        emprises: [],\n        titresEmprises: []\n      }\n    ]\n  },\n  {\n    id: 'h-cxx-courdemanges-1988-mut01',\n    titreId: 'h-cxx-courdemanges-1988',\n    typeId: 'mut',\n    statutId: 'acc',\n    ordre: 2,\n    annulationDemarcheId: null,\n    type: {\n      id: 'mut',\n      nom: 'mutation',\n      ordre: null,\n      duree: true,\n      points: true,\n      substances: null,\n      titulaires: true,\n      renouvelable: true,\n      exception: null\n    },\n    statut: {\n      id: 'acc',\n      nom: 'acceptée',\n      couleur: 'success'\n    },\n    phase: null,\n    etapes: [\n      {\n        id: 'h-cxx-courdemanges-1988-mut01-dpu01',\n        titreDemarcheId: 'h-cxx-courdemanges-1988-mut01',\n        typeId: 'dpu',\n        statutId: 'acc',\n        ordre: 2,\n        date: '1994-09-29T23:00:00.000Z',\n        dateDebut: null,\n        dateFin: null,\n        duree: null,\n        surface: null,\n        volume: null,\n        volumeUnite: null,\n        visas: null,\n        engagement: null,\n        engagementDevise: null,\n        sourceIndisponible: null,\n        statut: {\n          id: 'acc',\n          nom: 'acceptation',\n          couleur: 'success'\n        },\n        type: {\n          id: 'dpu',\n          nom: 'publication de décision au JORF',\n          acceptationAuto: null,\n          legalRef: null,\n          legalLien: null,\n          dateDebut: null,\n          dateFin: null\n        },\n        points: [],\n        documents: [\n          {\n            id: 'h-cxx-courdemanges-1988-mut01-dpu01-bc71fc1b',\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut01-dpu01',\n            type: 'Décret',\n            nom:\n              \"Décret du 23 septembre 1994 autorisant la mutation de concessions de mines d'hydrocarbures liquides ou gazeux\",\n            jorf: 'JORFTEXT000000549383',\n            nor: 'INDE9401060D',\n            url:\n              'https://www.legifrance.gouv.fr/affichTexte.do?cidTexte=JORFTEXT000000549383',\n            uri: null,\n            fichier: null\n          }\n        ],\n        substances: [],\n        titresSubstances: [],\n        titulaires: [],\n        titresTitulaires: [],\n        amodiataires: [],\n        titresAmodiataires: [],\n        administrations: [],\n        titresAdministrations: [],\n        emprises: [],\n        titresEmprises: []\n      },\n      {\n        id: 'h-cxx-courdemanges-1988-mut01-dex01',\n        titreDemarcheId: 'h-cxx-courdemanges-1988-mut01',\n        typeId: 'dex',\n        statutId: 'acc',\n        ordre: 1,\n        date: '1994-09-22T22:00:00.000Z',\n        dateDebut: null,\n        dateFin: null,\n        duree: null,\n        surface: null,\n        volume: null,\n        volumeUnite: null,\n        visas: null,\n        engagement: null,\n        engagementDevise: null,\n        sourceIndisponible: null,\n        statut: {\n          id: 'acc',\n          nom: 'acceptation',\n          couleur: 'success'\n        },\n        type: {\n          id: 'dex',\n          nom: 'décision expresse',\n          acceptationAuto: null,\n          legalRef: null,\n          legalLien: null,\n          dateDebut: null,\n          dateFin: null\n        },\n        points: [],\n        documents: [\n          {\n            id: 'h-cxx-courdemanges-1988-mut01-dex01-bce98f90',\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut01-dex01',\n            type: 'Décret',\n            nom:\n              \"Décret du 23 septembre 1994 autorisant la mutation de concessions de mines d'hydrocarbures liquides ou gazeux\",\n            jorf: null,\n            nor: null,\n            url: null,\n            uri: null,\n            fichier: null\n          }\n        ],\n        substances: [\n          {\n            id: 'hydx',\n            nom: 'hydrocarbures liquides ou gazeux',\n            symbole: null,\n            gerep: null,\n            description: null,\n            ordre: null,\n            connexe: null,\n            legales: [\n              {\n                id: 'hydx',\n                nom: 'hydrocarbures liquides ou gazeux',\n                domaineId: 'h',\n                description: \"A l'exeption de la tourbe\",\n                substanceLegaleCodeId: 'l111_1-1',\n                code: {\n                  id: 'l111_1-1',\n                  nom: 'L111-1, 1°',\n                  description:\n                    \"Des hydrocarbures et des combustibles fossiles, la tourbe exceptée, qu'ils soient sous forme solide, liquide ou gazeuse, du graphite, du diamant\",\n                  lien:\n                    'https://www.legifrance.gouv.fr/affichCodeArticle.do;?idArticle=LEGIARTI000036435815&cidTexte=LEGITEXT000023501962'\n                },\n                domaine: {\n                  id: 'h',\n                  nom: 'hydrocarbures liquides ou gazeux',\n                  ordre: 4\n                }\n              }\n            ]\n          }\n        ],\n        titresSubstances: [\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut01-dex01',\n            substanceId: 'hydx',\n            connexe: null,\n            ordre: null\n          }\n        ],\n        titulaires: [\n          {\n            id: 'fr-562034629',\n            nom: 'Petrorep',\n            raisonSociale: null,\n            paysId: 'FR',\n            legalSiren: '562034629',\n            legalEtranger: null,\n            legalForme: null,\n            voieNumero: null,\n            voieType: null,\n            voieNom: null,\n            adresseComplement: null,\n            codePostal: null,\n            ville: 'PARIS',\n            cedex: null,\n            localite: null,\n            insee: null,\n            url: null,\n            email: null,\n            telephone: null,\n            utilisateurs: []\n          },\n          {\n            id: 'fr-572199164',\n            nom: 'IPC Petroleum France',\n            raisonSociale: null,\n            paysId: 'FR',\n            legalSiren: '572199164',\n            legalEtranger: null,\n            legalForme: null,\n            voieNumero: null,\n            voieType: null,\n            voieNom: null,\n            adresseComplement: null,\n            codePostal: null,\n            ville: 'REIMS',\n            cedex: null,\n            localite: null,\n            insee: null,\n            url: null,\n            email: null,\n            telephone: null,\n            utilisateurs: []\n          },\n          {\n            id: 'fr-632022711',\n            nom: 'Elf Aquitaine (Production)',\n            raisonSociale: null,\n            paysId: 'FR',\n            legalSiren: '632022711',\n            legalEtranger: null,\n            legalForme: null,\n            voieNumero: null,\n            voieType: null,\n            voieNom: null,\n            adresseComplement: null,\n            codePostal: null,\n            ville: 'NANTERRE',\n            cedex: null,\n            localite: null,\n            insee: null,\n            url: null,\n            email: null,\n            telephone: null,\n            utilisateurs: []\n          }\n        ],\n        titresTitulaires: [\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut01-dex01',\n            entrepriseId: 'fr-562034629'\n          },\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut01-dex01',\n            entrepriseId: 'fr-572199164'\n          },\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut01-dex01',\n            entrepriseId: 'fr-632022711'\n          }\n        ],\n        amodiataires: [],\n        titresAmodiataires: [],\n        administrations: [],\n        titresAdministrations: [],\n        emprises: [],\n        titresEmprises: []\n      }\n    ]\n  },\n  {\n    id: 'h-cxx-courdemanges-1988-mut02',\n    titreId: 'h-cxx-courdemanges-1988',\n    typeId: 'mut',\n    statutId: 'acc',\n    ordre: 3,\n    annulationDemarcheId: null,\n    type: {\n      id: 'mut',\n      nom: 'mutation',\n      ordre: null,\n      duree: true,\n      points: true,\n      substances: null,\n      titulaires: true,\n      renouvelable: true,\n      exception: null\n    },\n    statut: {\n      id: 'acc',\n      nom: 'acceptée',\n      couleur: 'success'\n    },\n    phase: null,\n    etapes: [\n      {\n        id: 'h-cxx-courdemanges-1988-mut02-dpu01',\n        titreDemarcheId: 'h-cxx-courdemanges-1988-mut02',\n        typeId: 'dpu',\n        statutId: 'acc',\n        ordre: 2,\n        date: '1998-03-23T23:00:00.000Z',\n        dateDebut: null,\n        dateFin: null,\n        duree: null,\n        surface: null,\n        volume: null,\n        volumeUnite: null,\n        visas: null,\n        engagement: null,\n        engagementDevise: null,\n        sourceIndisponible: null,\n        statut: {\n          id: 'acc',\n          nom: 'acceptation',\n          couleur: 'success'\n        },\n        type: {\n          id: 'dpu',\n          nom: 'publication de décision au JORF',\n          acceptationAuto: null,\n          legalRef: null,\n          legalLien: null,\n          dateDebut: null,\n          dateFin: null\n        },\n        points: [],\n        documents: [\n          {\n            id: 'h-cxx-courdemanges-1988-mut02-dpu01-8c4cc033',\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut02-dpu01',\n            type: 'Décret',\n            nom:\n              \"Décret du 17 mars 1998 autorisant la mutation de la concession de mines d'hydrocarbures liquides ou gazeux dite « Concession de Courdemanges » (Marne)\",\n            jorf: 'JORFTEXT000000754620',\n            nor: 'ECOI9800196D',\n            url:\n              'https://www.legifrance.gouv.fr/affichTexte.do?cidTexte=JORFTEXT000000754620',\n            uri: null,\n            fichier: null\n          }\n        ],\n        substances: [],\n        titresSubstances: [],\n        titulaires: [],\n        titresTitulaires: [],\n        amodiataires: [],\n        titresAmodiataires: [],\n        administrations: [],\n        titresAdministrations: [],\n        emprises: [],\n        titresEmprises: []\n      },\n      {\n        id: 'h-cxx-courdemanges-1988-mut02-dex01',\n        titreDemarcheId: 'h-cxx-courdemanges-1988-mut02',\n        typeId: 'dex',\n        statutId: 'acc',\n        ordre: 1,\n        date: '1998-03-16T23:00:00.000Z',\n        dateDebut: null,\n        dateFin: null,\n        duree: null,\n        surface: null,\n        volume: null,\n        volumeUnite: null,\n        visas: null,\n        engagement: null,\n        engagementDevise: null,\n        sourceIndisponible: null,\n        statut: {\n          id: 'acc',\n          nom: 'acceptation',\n          couleur: 'success'\n        },\n        type: {\n          id: 'dex',\n          nom: 'décision expresse',\n          acceptationAuto: null,\n          legalRef: null,\n          legalLien: null,\n          dateDebut: null,\n          dateFin: null\n        },\n        points: [],\n        documents: [\n          {\n            id: 'h-cxx-courdemanges-1988-mut02-dex01-177cbb60',\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut02-dex01',\n            type: 'Décret',\n            nom:\n              \"Décret du 17 mars 1998 autorisant la mutation de la concession de mines d'hydrocarbures liquides ou gazeux dite « Concession de Courdemanges » (Marne)\",\n            jorf: null,\n            nor: null,\n            url: null,\n            uri: null,\n            fichier: null\n          }\n        ],\n        substances: [\n          {\n            id: 'hydx',\n            nom: 'hydrocarbures liquides ou gazeux',\n            symbole: null,\n            gerep: null,\n            description: null,\n            ordre: null,\n            connexe: null,\n            legales: [\n              {\n                id: 'hydx',\n                nom: 'hydrocarbures liquides ou gazeux',\n                domaineId: 'h',\n                description: \"A l'exeption de la tourbe\",\n                substanceLegaleCodeId: 'l111_1-1',\n                code: {\n                  id: 'l111_1-1',\n                  nom: 'L111-1, 1°',\n                  description:\n                    \"Des hydrocarbures et des combustibles fossiles, la tourbe exceptée, qu'ils soient sous forme solide, liquide ou gazeuse, du graphite, du diamant\",\n                  lien:\n                    'https://www.legifrance.gouv.fr/affichCodeArticle.do;?idArticle=LEGIARTI000036435815&cidTexte=LEGITEXT000023501962'\n                },\n                domaine: {\n                  id: 'h',\n                  nom: 'hydrocarbures liquides ou gazeux',\n                  ordre: 4\n                }\n              }\n            ]\n          }\n        ],\n        titresSubstances: [\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut02-dex01',\n            substanceId: 'hydx',\n            connexe: null,\n            ordre: null\n          }\n        ],\n        titulaires: [\n          {\n            id: 'fr-000000003',\n            nom: 'Coparex international',\n            raisonSociale: null,\n            paysId: 'FR',\n            legalSiren: null,\n            legalEtranger: null,\n            legalForme: null,\n            voieNumero: null,\n            voieType: null,\n            voieNom: null,\n            adresseComplement: null,\n            codePostal: null,\n            ville: null,\n            cedex: null,\n            localite: null,\n            insee: null,\n            url: null,\n            email: null,\n            telephone: null,\n            utilisateurs: []\n          },\n          {\n            id: 'fr-395042054',\n            nom: 'Carr Production France',\n            raisonSociale: null,\n            paysId: 'FR',\n            legalSiren: '395042054',\n            legalEtranger: null,\n            legalForme: null,\n            voieNumero: null,\n            voieType: null,\n            voieNom: null,\n            adresseComplement: null,\n            codePostal: null,\n            ville: 'PARIS',\n            cedex: null,\n            localite: null,\n            insee: null,\n            url: null,\n            email: null,\n            telephone: null,\n            utilisateurs: []\n          }\n        ],\n        titresTitulaires: [\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut02-dex01',\n            entrepriseId: 'fr-000000003'\n          },\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut02-dex01',\n            entrepriseId: 'fr-395042054'\n          }\n        ],\n        amodiataires: [],\n        titresAmodiataires: [],\n        administrations: [],\n        titresAdministrations: [],\n        emprises: [],\n        titresEmprises: []\n      }\n    ]\n  },\n  {\n    id: 'h-cxx-courdemanges-1988-mut03',\n    titreId: 'h-cxx-courdemanges-1988',\n    typeId: 'mut',\n    statutId: 'acc',\n    ordre: 4,\n    annulationDemarcheId: null,\n    type: {\n      id: 'mut',\n      nom: 'mutation',\n      ordre: null,\n      duree: true,\n      points: true,\n      substances: null,\n      titulaires: true,\n      renouvelable: true,\n      exception: null\n    },\n    statut: {\n      id: 'acc',\n      nom: 'acceptée',\n      couleur: 'success'\n    },\n    phase: null,\n    etapes: [\n      {\n        id: 'h-cxx-courdemanges-1988-mut03-dpu01',\n        titreDemarcheId: 'h-cxx-courdemanges-1988-mut03',\n        typeId: 'dpu',\n        statutId: 'acc',\n        ordre: 2,\n        date: '2009-02-13T23:00:00.000Z',\n        dateDebut: null,\n        dateFin: null,\n        duree: null,\n        surface: null,\n        volume: null,\n        volumeUnite: null,\n        visas: null,\n        engagement: null,\n        engagementDevise: null,\n        sourceIndisponible: null,\n        statut: {\n          id: 'acc',\n          nom: 'acceptation',\n          couleur: 'success'\n        },\n        type: {\n          id: 'dpu',\n          nom: 'publication de décision au JORF',\n          acceptationAuto: null,\n          legalRef: null,\n          legalLien: null,\n          dateDebut: null,\n          dateFin: null\n        },\n        points: [],\n        documents: [\n          {\n            id: 'h-cxx-courdemanges-1988-mut03-dpu01-36369b20',\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut03-dpu01',\n            type: 'Arrêté',\n            nom:\n              \"Arrêté du 28 janvier 2009 autorisant la mutation du permis exclusif de recherches de mines d'hydrocarbures liquides ou gazeux de Val-des-Marais et des concessions de Courdemanges, de Soudron, de Vert-la-Gravelle (Marne) et de Grandville (Aube) au profit de la société Lundin International\",\n            jorf: 'JORFTEXT000020251500',\n            nor: 'DEVE0903222A',\n            url:\n              'https://www.legifrance.gouv.fr/affichTexte.do?cidTexte=JORFTEXT000020251500',\n            uri:\n              'https://www.legifrance.gouv.fr/eli/arrete/2009/1/28/DEVE0903222A/jo/texte',\n            fichier: null\n          }\n        ],\n        substances: [],\n        titresSubstances: [],\n        titulaires: [],\n        titresTitulaires: [],\n        amodiataires: [],\n        titresAmodiataires: [],\n        administrations: [],\n        titresAdministrations: [],\n        emprises: [],\n        titresEmprises: []\n      },\n      {\n        id: 'h-cxx-courdemanges-1988-mut03-dex01',\n        titreDemarcheId: 'h-cxx-courdemanges-1988-mut03',\n        typeId: 'dex',\n        statutId: 'acc',\n        ordre: 1,\n        date: '2009-01-27T23:00:00.000Z',\n        dateDebut: null,\n        dateFin: null,\n        duree: null,\n        surface: null,\n        volume: null,\n        volumeUnite: null,\n        visas: null,\n        engagement: null,\n        engagementDevise: null,\n        sourceIndisponible: null,\n        statut: {\n          id: 'acc',\n          nom: 'acceptation',\n          couleur: 'success'\n        },\n        type: {\n          id: 'dex',\n          nom: 'décision expresse',\n          acceptationAuto: null,\n          legalRef: null,\n          legalLien: null,\n          dateDebut: null,\n          dateFin: null\n        },\n        points: [],\n        documents: [\n          {\n            id: 'h-cxx-courdemanges-1988-mut03-dex01-0bc694c5',\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut03-dex01',\n            type: 'Arrêté',\n            nom:\n              \"Arrêté du 28 janvier 2009 autorisant la mutation du permis exclusif de recherches de mines d'hydrocarbures liquides ou gazeux de Val-des-Marais et des concessions de Courdemanges, de Soudron, de Vert-la-Gravelle (Marne) et de Grandville (Aube) au profit de la société Lundin International\",\n            jorf: null,\n            nor: null,\n            url: null,\n            uri: null,\n            fichier: null\n          }\n        ],\n        substances: [\n          {\n            id: 'hydx',\n            nom: 'hydrocarbures liquides ou gazeux',\n            symbole: null,\n            gerep: null,\n            description: null,\n            ordre: null,\n            connexe: null,\n            legales: [\n              {\n                id: 'hydx',\n                nom: 'hydrocarbures liquides ou gazeux',\n                domaineId: 'h',\n                description: \"A l'exeption de la tourbe\",\n                substanceLegaleCodeId: 'l111_1-1',\n                code: {\n                  id: 'l111_1-1',\n                  nom: 'L111-1, 1°',\n                  description:\n                    \"Des hydrocarbures et des combustibles fossiles, la tourbe exceptée, qu'ils soient sous forme solide, liquide ou gazeuse, du graphite, du diamant\",\n                  lien:\n                    'https://www.legifrance.gouv.fr/affichCodeArticle.do;?idArticle=LEGIARTI000036435815&cidTexte=LEGITEXT000023501962'\n                },\n                domaine: {\n                  id: 'h',\n                  nom: 'hydrocarbures liquides ou gazeux',\n                  ordre: 4\n                }\n              }\n            ]\n          }\n        ],\n        titresSubstances: [\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut03-dex01',\n            substanceId: 'hydx',\n            connexe: null,\n            ordre: null\n          }\n        ],\n        titulaires: [\n          {\n            id: 'fr-572199164',\n            nom: 'IPC Petroleum France',\n            raisonSociale: null,\n            paysId: 'FR',\n            legalSiren: '572199164',\n            legalEtranger: null,\n            legalForme: null,\n            voieNumero: null,\n            voieType: null,\n            voieNom: null,\n            adresseComplement: null,\n            codePostal: null,\n            ville: 'REIMS',\n            cedex: null,\n            localite: null,\n            insee: null,\n            url: null,\n            email: null,\n            telephone: null,\n            utilisateurs: []\n          }\n        ],\n        titresTitulaires: [\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-mut03-dex01',\n            entrepriseId: 'fr-572199164'\n          }\n        ],\n        amodiataires: [],\n        titresAmodiataires: [],\n        administrations: [],\n        titresAdministrations: [],\n        emprises: [],\n        titresEmprises: []\n      }\n    ]\n  },\n  {\n    id: 'h-cxx-courdemanges-1988-pro01',\n    titreId: 'h-cxx-courdemanges-1988',\n    typeId: 'pro',\n    statutId: 'acc',\n    ordre: 5,\n    annulationDemarcheId: null,\n    type: {\n      id: 'pro',\n      nom: 'prolongation',\n      ordre: 2,\n      duree: true,\n      points: true,\n      substances: null,\n      titulaires: null,\n      renouvelable: true,\n      exception: null\n    },\n    statut: {\n      id: 'acc',\n      nom: 'acceptée',\n      couleur: 'success'\n    },\n    phase: {\n      titreDemarcheId: 'h-cxx-courdemanges-1988-pro01',\n      statutId: 'val',\n      dateDebut: '2013-03-11T23:00:00.000Z',\n      dateFin: '2038-03-11T23:00:00.000Z',\n      statut: {\n        id: 'val',\n        nom: 'valide',\n        couleur: 'success'\n      }\n    },\n    etapes: [\n      {\n        id: 'h-cxx-courdemanges-1988-pro01-dpu01',\n        titreDemarcheId: 'h-cxx-courdemanges-1988-pro01',\n        typeId: 'dpu',\n        statutId: 'acc',\n        ordre: 2,\n        date: '2013-05-23T22:00:00.000Z',\n        dateDebut: null,\n        dateFin: null,\n        duree: null,\n        surface: null,\n        volume: null,\n        volumeUnite: null,\n        visas: null,\n        engagement: null,\n        engagementDevise: null,\n        sourceIndisponible: null,\n        statut: {\n          id: 'acc',\n          nom: 'acceptation',\n          couleur: 'success'\n        },\n        type: {\n          id: 'dpu',\n          nom: 'publication de décision au JORF',\n          acceptationAuto: null,\n          legalRef: null,\n          legalLien: null,\n          dateDebut: null,\n          dateFin: null\n        },\n        points: [],\n        documents: [\n          {\n            id: 'h-cxx-courdemanges-1988-pro01-dpu01-e7158dba',\n            titreEtapeId: 'h-cxx-courdemanges-1988-pro01-dpu01',\n            type: 'Décret',\n            nom:\n              \"Décret du 22 mai 2013 prolongeant la validité de la concession de mines d'hydrocarbures liquides ou gazeux dite « Concession de Courdemanges » à la société Lundin International SA (Marne)\",\n            jorf: 'JORFTEXT000027443282',\n            nor: 'DEVR1241761D',\n            url:\n              'https://www.legifrance.gouv.fr/affichTexte.do?cidTexte=JORFTEXT000027443282',\n            uri:\n              'https://www.legifrance.gouv.fr/eli/decret/2013/5/22/DEVR1241761D/jo/texte',\n            fichier: null\n          }\n        ],\n        substances: [],\n        titresSubstances: [],\n        titulaires: [],\n        titresTitulaires: [],\n        amodiataires: [],\n        titresAmodiataires: [],\n        administrations: [],\n        titresAdministrations: [],\n        emprises: [],\n        titresEmprises: []\n      },\n      {\n        id: 'h-cxx-courdemanges-1988-pro01-dex01',\n        titreDemarcheId: 'h-cxx-courdemanges-1988-pro01',\n        typeId: 'dex',\n        statutId: 'acc',\n        ordre: 1,\n        date: '2013-05-21T22:00:00.000Z',\n        dateDebut: null,\n        dateFin: '2038-03-11T23:00:00.000Z',\n        duree: 25,\n        surface: 19.9,\n        volume: null,\n        volumeUnite: null,\n        visas: null,\n        engagement: null,\n        engagementDevise: null,\n        sourceIndisponible: null,\n        statut: {\n          id: 'acc',\n          nom: 'acceptation',\n          couleur: 'success'\n        },\n        type: {\n          id: 'dex',\n          nom: 'décision expresse',\n          acceptationAuto: null,\n          legalRef: null,\n          legalLien: null,\n          dateDebut: null,\n          dateFin: null\n        },\n        points: [],\n        documents: [\n          {\n            id: 'h-cxx-courdemanges-1988-pro01-dex01-8ea8dbdc',\n            titreEtapeId: 'h-cxx-courdemanges-1988-pro01-dex01',\n            type: 'Décret',\n            nom:\n              \"Décret du 22 mai 2013 prolongeant la validité de la concession de mines d'hydrocarbures liquides ou gazeux dite « Concession de Courdemanges » à la société Lundin International SA (Marne)\",\n            jorf: null,\n            nor: null,\n            url: null,\n            uri: null,\n            fichier: null\n          }\n        ],\n        substances: [\n          {\n            id: 'hydx',\n            nom: 'hydrocarbures liquides ou gazeux',\n            symbole: null,\n            gerep: null,\n            description: null,\n            ordre: null,\n            connexe: null,\n            legales: [\n              {\n                id: 'hydx',\n                nom: 'hydrocarbures liquides ou gazeux',\n                domaineId: 'h',\n                description: \"A l'exeption de la tourbe\",\n                substanceLegaleCodeId: 'l111_1-1',\n                code: {\n                  id: 'l111_1-1',\n                  nom: 'L111-1, 1°',\n                  description:\n                    \"Des hydrocarbures et des combustibles fossiles, la tourbe exceptée, qu'ils soient sous forme solide, liquide ou gazeuse, du graphite, du diamant\",\n                  lien:\n                    'https://www.legifrance.gouv.fr/affichCodeArticle.do;?idArticle=LEGIARTI000036435815&cidTexte=LEGITEXT000023501962'\n                },\n                domaine: {\n                  id: 'h',\n                  nom: 'hydrocarbures liquides ou gazeux',\n                  ordre: 4\n                }\n              }\n            ]\n          }\n        ],\n        titresSubstances: [\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-pro01-dex01',\n            substanceId: 'hydx',\n            connexe: null,\n            ordre: null\n          }\n        ],\n        titulaires: [\n          {\n            id: 'fr-572199164',\n            nom: 'IPC Petroleum France',\n            raisonSociale: null,\n            paysId: 'FR',\n            legalSiren: '572199164',\n            legalEtranger: null,\n            legalForme: null,\n            voieNumero: null,\n            voieType: null,\n            voieNom: null,\n            adresseComplement: null,\n            codePostal: null,\n            ville: 'REIMS',\n            cedex: null,\n            localite: null,\n            insee: null,\n            url: null,\n            email: null,\n            telephone: null,\n            utilisateurs: []\n          }\n        ],\n        titresTitulaires: [\n          {\n            titreEtapeId: 'h-cxx-courdemanges-1988-pro01-dex01',\n            entrepriseId: 'fr-572199164'\n          }\n        ],\n        amodiataires: [],\n        titresAmodiataires: [],\n        administrations: [],\n        titresAdministrations: [],\n        emprises: [],\n        titresEmprises: []\n      }\n    ]\n  }\n]\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/__mocks__/titre-demarches.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 290,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-date-fin-find.js",
    "content": "const titreDemarcheDateFinAndDureeFind = require('./titre-demarche-date-fin-duree-find')\n\n/**\n * Trouve la date de fin d'un titre\n * @param {titreDemarche[]} titreDemarches la liste des démarches d'un titres\n * @return {String} la date de fin du titre sous forme yyyy-mm-dd\n */\n\nconst titreDateFinFind = titreDemarches => {\n  // la dernière démarche dont le statut est acceptée ou terminée\n  const titreDemarche = titreDemarches.find(titreDemarche =>\n    ['acc', 'ter'].includes(titreDemarche.statutId)\n  )\n  const dateFin =\n    titreDemarche &&\n    titreDemarcheDateFinAndDureeFind(titreDemarches, titreDemarche.ordre)\n      .dateFin\n\n  return dateFin\n}\n\nmodule.exports = titreDateFinFind\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-date-fin-find.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 291,
    "kind": "function",
    "name": "titreDateFinFind",
    "memberof": "camino-api/tasks/_utils/titre-date-fin-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-date-fin-find.js~titreDateFinFind",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-date-fin-find.js",
    "importStyle": "titreDateFinFind",
    "description": "Trouve la date de fin d'un titre",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "titreDemarche[]"
        ],
        "spread": false,
        "optional": false,
        "name": "titreDemarches",
        "description": "la liste des démarches d'un titres"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "la date de fin du titre sous forme yyyy-mm-dd"
    }
  },
  {
    "__docId__": 292,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-date-fin-find.test.js",
    "content": "const titreDateFinFind = require('./titre-date-fin-find')\nconst titreDemarches = require('./__mocks__/titre-demarches')\n\ntest(\"la date de fin de validité d'un titre\", () => {\n  expect(titreDateFinFind(titreDemarches)).toMatch(/2013-03-12/)\n})\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-date-fin-find.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 293,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js",
    "content": "const dateFormat = require('dateformat')\nconst titreEtapesAscSort = require('./titre-etapes-asc-sort')\nconst titreEtapesDescSort = require('./titre-etapes-desc-sort')\n\n// entrée:\n// - les démarches d'un titre\n// - l'ordre d'une démarche dont on cherche la date de fin et la durée\n// sortie\n// - la date de fin de la démarche\n// - la durée cumulée depuis la date de fin précédemment enregistré dans la bdd\nconst titreDemarcheDateFinAndDureeFind = (titreDemarches, ordre) =>\n  titreDemarches\n    // liste les démarches précédentes dont le statut est acceptée ou terminée\n    .filter(\n      titreDemarche =>\n        (titreDemarche.statutId === 'acc' ||\n          titreDemarche.statutId === 'ter') &&\n        ordre >= titreDemarche.ordre\n    )\n    // parcourt les démarches\n    .reduce(\n      ({ duree, dateFin }, titreDemarche) => {\n        // la date de fin est déjà définie -> retourne l'accumulateur tel quel\n        if (dateFin) {\n          return { duree, dateFin }\n        }\n\n        if (\n          // la démarche est un octroi\n          titreDemarche.typeId === 'oct'\n        ) {\n          return titreDemarcheOctroiDateFinFind(duree, titreDemarche)\n        }\n\n        if (\n          // la démarche est une abrogation, retrait ou renonciation\n          // si c'est une renonciation et que la démarche contient une étape avec des infos géo (points)\n          // alors c'est une renonciation partielle et elle n'est pas prise en compte\n          titreDemarche.typeId === 'abr' ||\n          titreDemarche.typeId === 'ret' ||\n          (titreDemarche.typeId === 'ren' &&\n            !titreDemarche.etapes.find(te => te.points.length))\n        ) {\n          // trouve la date de fin d'une démarche d'annulation\n          return titreDemarcheAnnulationDateFinFind(titreDemarche)\n        }\n\n        // trouve soit la date de fin\n        // soit la durée d'une démarche\n        return titreDemarcheNormaleDateFinAndDureeFind(\n          duree,\n          titreDemarche.etapes\n        )\n      },\n      // l'accumulateur contient initialement\n      // - la durée cumulée égale à 0\n      // - la date de fin (null)\n      { duree: 0, dateFin: null }\n    )\n\n// trouve la date de fin et la durée d'une démarche d'octroi\nconst titreDemarcheOctroiDateFinFind = (dureeAcc, titreDemarche) => {\n  // retourne la durée cumulée et la date de fin\n  // de la démarche d'octroi\n  const { duree, dateFin } = titreDemarcheNormaleDateFinAndDureeFind(\n    dureeAcc,\n    titreDemarche.etapes\n  )\n\n  const dateFinUpdatedFind = () => {\n    // si il n'y a ni date de fin, ni de durée cumulée,\n    // la date de fin par défaut est fixée au 31 décembre 2018\n    if (duree === 0) {\n      return '2018-12-31'\n    }\n\n    const titreEtapesDescSorted = titreDemarche.etapes || titreEtapesDescSort(titreDemarche)\n\n    // chercher dans les dpu s'il y a une date de debut\n    const titreEtapeHasDateDebut = titreEtapesDescSorted.find(\n      te => ['dex', 'dpu', 'rpu'].includes(te.typeId) && te.dateDebut\n    )\n\n    if (titreEtapeHasDateDebut) {\n      return dateAddYears(titreEtapeHasDateDebut.dateDebut, duree)\n    }\n\n    // sinon, la date de fin est calculée\n    // en ajoutant la durée cumulée à la date de la première dpu ou ens\n    const titreEtapeDpuFirst = titreEtapesAscSort(titreDemarche).find(\n      titreEtape => titreEtape.typeId === 'dpu'\n    )\n\n    if (titreEtapeDpuFirst) {\n      return dateAddYears(titreEtapeDpuFirst.date, duree)\n    }\n\n    // si on ne trouve pas de dpu, la date de fin est calculée\n    // en ajoutant la date de la première dex\n    const titreEtapeDexFirst = titreEtapesAscSort(titreDemarche).find(\n      titreEtape => titreEtape.typeId === 'dex'\n    )\n\n    return titreEtapeDexFirst ? dateAddYears(titreEtapeDexFirst.date, duree) : null\n  }\n\n  // si la démarche contient une date de fin,\n  // sinon trouve une date de fin\n  const dateFinUpdated = dateFin || dateFinUpdatedFind()\n\n  return {\n    duree,\n    dateFin: dateFinUpdated\n  }\n}\n\n// trouve la date de fin d'une démarche d'annulation\nconst titreDemarcheAnnulationDateFinFind = titreDemarche => {\n  const dateFinFind = () => {\n    // la dernière étape dex qui contient une date de fin\n    const etapeDexHasDateFin = titreEtapesDescSort(titreDemarche)\n      .filter(te => te.typeId === 'dex')\n      .find(te => te.dateFin)\n\n    // si la démarche contient une date de fin\n    if (etapeDexHasDateFin) {\n      return dateFormat(etapeDexHasDateFin, 'yyyy-mm-dd')\n    }\n\n    // sinon,\n    // trouve la première étape de décision expresse (dex)\n    const etapeDex = titreEtapesAscSort(titreDemarche).find(\n      te => te.typeId === 'dex'\n    )\n\n    // la date de fin est la date de l'étape\n    return dateFormat(etapeDex.date, 'yyyy-mm-dd')\n  }\n\n  return {\n    duree: 0,\n    dateFin: dateFinFind()\n  }\n}\n\n// entrées:\n// - les étapes d'une démarche\n// - la durée cumulée\n// retourne\n// - dateFin: la date de fin de la démarche si définie, sinon null\n// - duree: la durée cumulée\nconst titreDemarcheNormaleDateFinAndDureeFind = (dureeAcc, titreEtapes) => {\n  titreEtapes = titreEtapesDescSort({ etapes: titreEtapes })\n\n  const titreEtapeHasDateFinOrDuree = titreEtapes\n    // filtre les étapes dont le type est décision express (dex)\n    // et decision de publication au JORF (dpu)\n    // et publication au recueil des actes administratifs de la préfecture (rpu)\n    .filter(titreEtape => ['dex', 'dpu', 'rpu'].includes(titreEtape.typeId))\n    // parcourt les étapes et retourne la première date de fin ou durée trouvée\n    .find(({ dateFin, duree }) => dateFin || duree)\n\n  if (!titreEtapeHasDateFinOrDuree) {\n    return { dateFin: null, duree: dureeAcc }\n  }\n\n  const { dateFin, duree } = titreEtapeHasDateFinOrDuree\n\n  // retourne la date de fin et\n  // ajoute la durée calculée à la durée cumulée\n  return {\n    duree: duree ? duree + dureeAcc : dureeAcc,\n    dateFin: dateFin ? dateAddYears(dateFin, dureeAcc) : null\n  }\n}\n\n// ajoute une durée en années à une date au format YYYY-MM-DD\nconst dateAddYears = (date, years) => {\n  const d = dateFormat(date, 'yyyy-mm-dd')\n  return `${Number(d.slice(0, 4)) + years}-${d.slice(5)}`\n}\n\nmodule.exports = titreDemarcheDateFinAndDureeFind\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 294,
    "kind": "function",
    "name": "titreDemarcheOctroiDateFinFind",
    "memberof": "camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js~titreDemarcheOctroiDateFinFind",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [
      {
        "name": "dureeAcc",
        "types": [
          "*"
        ]
      },
      {
        "name": "titreDemarche",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"duree\": *, \"dateFin\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 295,
    "kind": "function",
    "name": "titreDemarcheAnnulationDateFinFind",
    "memberof": "camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js~titreDemarcheAnnulationDateFinFind",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarche",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"duree\": *, \"dateFin\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 296,
    "kind": "function",
    "name": "titreDemarcheNormaleDateFinAndDureeFind",
    "memberof": "camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js~titreDemarcheNormaleDateFinAndDureeFind",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 152,
    "undocument": true,
    "params": [
      {
        "name": "dureeAcc",
        "types": [
          "*"
        ]
      },
      {
        "name": "titreEtapes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"duree\": *, \"dateFin\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "dateAddYears",
    "memberof": "camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js~dateAddYears",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "params": [
      {
        "name": "date",
        "types": [
          "*"
        ]
      },
      {
        "name": "years",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 298,
    "kind": "function",
    "name": "titreDemarcheDateFinAndDureeFind",
    "memberof": "camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js~titreDemarcheDateFinAndDureeFind",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.js",
    "importStyle": "titreDemarcheDateFinAndDureeFind",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarches",
        "types": [
          "*"
        ]
      },
      {
        "name": "ordre",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 299,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.test.js",
    "content": "const titreDemarcheDateFinAndDureeFind = require('./titre-demarche-date-fin-duree-find')\nconst titreDemarches = require('./__mocks__/titre-demarches')\n\ntest(\"trouve la date de fin et la durée d'une démarche\", () => {\n  expect(titreDemarcheDateFinAndDureeFind(titreDemarches, 2)).toEqual({\n    dateFin: '2013-03-12',\n    duree: 25\n  })\n})\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-demarche-date-fin-duree-find.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 300,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-demarche-ordre-find.js",
    "content": "const titreDemarchesAscSort = require('./titre-demarches-asc-sort')\n\n// retourne l'ordre (index + 1) d'une démarche\nconst titreDemarcheOrdreFind = (titreDemarcheId, titreDemarches) => {\n  // index de la démarche parmi les démarches classées\n  const titreDemarcheIndex = titreDemarchesAscSort(titreDemarches).findIndex(\n    titreDemarche => titreDemarche.id === titreDemarcheId\n  )\n\n  return titreDemarcheIndex !== -1 ? titreDemarcheIndex + 1 : 0\n}\n\nmodule.exports = titreDemarcheOrdreFind\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-demarche-ordre-find.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 301,
    "kind": "function",
    "name": "titreDemarcheOrdreFind",
    "memberof": "camino-api/tasks/_utils/titre-demarche-ordre-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-demarche-ordre-find.js~titreDemarcheOrdreFind",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-demarche-ordre-find.js",
    "importStyle": "titreDemarcheOrdreFind",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarcheId",
        "types": [
          "*"
        ]
      },
      {
        "name": "titreDemarches",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-demarche-phases-filter.js",
    "content": "const titreEtapesAscSort = require('./titre-etapes-asc-sort')\n\n// si\n// - la démarche est un octroi ou une prolongation ou une prolongation 1\n// ou une prolongation 2 ou une prolongation exceptionnelle\n// - le statut de la démarche est acceptée\n// - la démarche a une étape de dpu\n// - le statut de l'étape de dpu est acceptée\n\nconst titreDemarchePhasesFilter = (titreDemarche, titreTypeId) => {\n  // retourne l'étape de dpu de la démarche si elle existe\n  // si il existe une dpu et une dpu rectificative, on prend en compte l'originale\n  const etapeDpuFirst = titreEtapesAscSort(titreDemarche).find(\n    titreEtape =>\n      titreEtape.typeId === 'dpu' ||\n        (titreTypeId === 'axm' && titreEtape.typeId === 'dex') ||\n        (titreTypeId === 'prx' && titreEtape.typeId === 'rpu')\n  )\n\n  return (\n    (titreDemarche.typeId === 'oct' ||\n      titreDemarche.typeId === 'pro' ||\n      titreDemarche.typeId === 'pr1' ||\n      titreDemarche.typeId === 'pr2' ||\n      titreDemarche.typeId === 'pre') &&\n    titreDemarche.statutId === 'acc' &&\n    etapeDpuFirst &&\n    etapeDpuFirst.statutId === 'acc'\n  )\n}\n\nmodule.exports = titreDemarchePhasesFilter\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-demarche-phases-filter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 303,
    "kind": "function",
    "name": "titreDemarchePhasesFilter",
    "memberof": "camino-api/tasks/_utils/titre-demarche-phases-filter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-demarche-phases-filter.js~titreDemarchePhasesFilter",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-demarche-phases-filter.js",
    "importStyle": "titreDemarchePhasesFilter",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarche",
        "types": [
          "*"
        ]
      },
      {
        "name": "titreTypeId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-demarche-statut-id-find.js",
    "content": "const titreEtapesDescSort = require('./titre-etapes-desc-sort')\n\nconst titreDemarcheStatutIdFind = (titreDemarche, titreTypeId) => {\n  // l'étape la plus récente\n  const titreEtapeRecent = titreEtapesDescSort(titreDemarche)[0]\n\n  //  1. la démarche fait l’objet d’une demande\n  //  - le nom de la démarche est égal à\n  //    octroi ou prolongation(1, 2 ou exceptionnelle)\n  //    ou renonciation ou fusion ou extension du périmètre\n  //    ou extension de substance ou mutation ou amodiation\n  //    ou résiliation d’amodiation\n  if (\n    [\n      'oct',\n      'pro',\n      'pr1',\n      'pr2',\n      'pre',\n      'ren',\n      'fus',\n      'exp',\n      'exs',\n      'mut',\n      'amo',\n      'res',\n      'ces'\n    ].includes(titreDemarche.typeId)\n  ) {\n    //  - le type de l’étape est publication au JO (dpu) ou décision implicite (dim)\n    //  - et le statut de l’étape est acceptée ou rejetée\n    if (\n      ['acc', 'rej'].includes(titreEtapeRecent.statutId) &&\n        (['dpu', 'dim'].includes(titreEtapeRecent.typeId) ||\n         titreTypeId === 'axm' && ['dex'].includes(titreEtapeRecent.typeId) ||\n         titreTypeId === 'prx' && ['rpu'].includes(titreEtapeRecent.typeId))\n    ) {\n      //  - le statut de la démarche est égal au statut de l’étape:\n      // accepté (acc) ou rejeté(rej)\n      return titreEtapeRecent.statutId\n    }\n\n    //  - le type de l’étape est enregistrement de la demande (men)\n    //  - la date de l'étape est inférieure à la date du jour\n    if (\n      titreEtapeRecent.typeId === 'men' &&\n      new Date(titreEtapeRecent.date) < new Date()\n    ) {\n      //  - le statut de la démarche est “en instruction”\n      return 'ins'\n    }\n\n    //  - le type de l’étape est retrait de la demande (ret)\n    if (titreEtapeRecent.typeId === 'ret') {\n      //  - le statut de la démarche est “retirée”\n      return 'ret'\n    }\n\n    //  - le type de l’étape est dépôt de la demande (mdp)\n    //  - il n’y a pas d’étape après\n    if (titreEtapeRecent.typeId === 'mdp') {\n      //  - le statut de la démarche est “déposée”\n      return 'dep'\n    }\n\n    //  - le type de l’étape est formalisation de la demande (mfr)\n    if (titreEtapeRecent.typeId === 'mfr') {\n      //  - le statut de la démarche est “en construction”\n      return 'eco'\n    }\n\n    //  - le type de l’étape est recevabilité de la demande (mre)\n    //  - et le statut de l’étape est défavorable (def)\n    if (\n      titreEtapeRecent.typeId === 'mre' &&\n      titreEtapeRecent.statutId === 'def'\n    ) {\n      //  - le statut de la démarche est classée sans suite (cls)\n      return 'cls'\n    }\n\n    //  - le type de l’étape est décision expresse (dex)\n    //  - et le statut de l’étape est rejetée (rej)\n    if (\n      titreEtapeRecent.typeId === 'dex' &&\n      titreEtapeRecent.statutId === 'rej'\n    ) {\n      //  - le statut de la démarche est rejetée (rej)\n      return 'rej'\n    }\n\n    // sinon le statut de la démarche est indéterminé\n    return 'ind'\n  }\n\n  //  2. la démarche ne fait pas l’objet d’une demande (unilatérale)\n  //  - le nom de la démarche est égal à retrait ou abrogation ou prorogation\n  if (['ret', 'abr', 'prr', 'dec'].includes(titreDemarche.typeId)) {\n    // - le type de l’étape est publication au JO\n    // - et le statut de l’étape est terminée\n    if (\n      titreEtapeRecent.typeId === 'dpu' &&\n      titreEtapeRecent.statutId === 'fai'\n    ) {\n      // - le statut de la démarche est terminée\n      return 'ter'\n    }\n\n    // sinon, le statut de la démarche est “initiée”\n    return 'ini'\n  }\n\n  //  3. sinon, le statut est indéterminé\n  return 'ind'\n}\n\nmodule.exports = titreDemarcheStatutIdFind\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-demarche-statut-id-find.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 305,
    "kind": "function",
    "name": "titreDemarcheStatutIdFind",
    "memberof": "camino-api/tasks/_utils/titre-demarche-statut-id-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-demarche-statut-id-find.js~titreDemarcheStatutIdFind",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-demarche-statut-id-find.js",
    "importStyle": "titreDemarcheStatutIdFind",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarche",
        "types": [
          "*"
        ]
      },
      {
        "name": "titreTypeId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 306,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-demarches-asc-sort.js",
    "content": "// classe les démarches selon la date de leur première étape\nconst titreEtapesAscSort = require('./titre-etapes-asc-sort')\n\nconst titreDemarchesAscSort = titreDemarches =>\n  titreDemarches.sort((a, b) => {\n    // date identique -> todo\n    // if (titreEtapesAscSort(a)[0].date - titreEtapesAscSort(b)[0].date === 0) {\n    //   console.log(a.id, b.id)\n    // }\n    return titreEtapesAscSort(a)[0].date - titreEtapesAscSort(b)[0].date\n  })\n\nmodule.exports = titreDemarchesAscSort\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-demarches-asc-sort.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 307,
    "kind": "function",
    "name": "titreDemarchesAscSort",
    "memberof": "camino-api/tasks/_utils/titre-demarches-asc-sort.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-demarches-asc-sort.js~titreDemarchesAscSort",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-demarches-asc-sort.js",
    "importStyle": "titreDemarchesAscSort",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarches",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 308,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-etapes-asc-sort.js",
    "content": "// classe les étapes selon leur ordre: 1, 2, 3, …\nconst titreEtapesAscSort = titreDemarche =>\n  titreDemarche.etapes.sort((a, b) => a.ordre - b.ordre)\n\nmodule.exports = titreEtapesAscSort\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-etapes-asc-sort.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 309,
    "kind": "function",
    "name": "titreEtapesAscSort",
    "memberof": "camino-api/tasks/_utils/titre-etapes-asc-sort.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-etapes-asc-sort.js~titreEtapesAscSort",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-etapes-asc-sort.js",
    "importStyle": "titreEtapesAscSort",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarche",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 310,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-etapes-desc-sort.js",
    "content": "// classe les étapes selon leur ordre inverse: 3, 2, 1.\nconst titreEtapesSortDesc = td => td.etapes.sort((a, b) => b.ordre - a.ordre)\n\nmodule.exports = titreEtapesSortDesc\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-etapes-desc-sort.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 311,
    "kind": "function",
    "name": "titreEtapesSortDesc",
    "memberof": "camino-api/tasks/_utils/titre-etapes-desc-sort.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-etapes-desc-sort.js~titreEtapesSortDesc",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-etapes-desc-sort.js",
    "importStyle": "titreEtapesSortDesc",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "td",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 312,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-phases-find.js",
    "content": "const dateFormat = require('dateformat')\nconst titreDemarcheDateFinAndDureeFind = require('./titre-demarche-date-fin-duree-find')\nconst titreDemarchePhasesFilter = require('./titre-demarche-phases-filter')\nconst titreEtapesDescSort = require('./titre-etapes-desc-sort')\nconst titreEtapesAscSort = require('./titre-etapes-asc-sort')\n\n// retourne un tableau contenant les phases d'un titre\nconst titrePhasesFind = (titreDemarchesByTitre, titreTypeId) => {\n  // filtre les démarches qui donnent lieu à des phases\n  const titreDemarchesByTitreFiltered = titreDemarchesByTitre.filter(\n    titreDemarche => titreDemarchePhasesFilter(titreDemarche, titreTypeId)\n  )\n\n  return titreDemarchesByTitreFiltered.reduce(\n    (titrePhases, titreDemarche, index) => {\n      const dateFin = titrePhaseDateFinFind(\n        titreDemarchesByTitre,\n        titreDemarchesByTitreFiltered,\n        titreDemarche\n      )\n\n      const dateDebut = titrePhaseDateDebutFind(\n        titreDemarche,\n        titrePhases,\n        index,\n        titreTypeId\n      )\n\n      // si\n      // - la date du jour est plus récente que la date de fin\n      // le statut est valide\n      // sinon,\n      // - le statut est échu\n      const statutId =\n        dateFormat(new Date(), 'yyyy-mm-dd') > dateFin ? 'ech' : 'val'\n\n      return [\n        ...titrePhases,\n        {\n          titreDemarcheId: titreDemarche.id,\n          dateFin,\n          dateDebut,\n          statutId\n        }\n      ]\n    },\n    []\n  )\n}\n\nconst titrePhaseDateDebutFind = (\n  titreDemarche,\n  titrePhases,\n  index,\n  titreTypeId\n) => {\n  // retourne la phase précédente\n  const phasePrevious = titrePhases[index - 1]\n\n  // retourne une étape de dpu si celle-ci possède une date de début\n  const etapeDpuHasDateDebut = titreEtapesDescSort(titreDemarche)\n    .filter(\n      titreEtape =>\n        titreEtape.typeId === 'dpu' ||\n        (titreTypeId === 'axm' && titreEtape.typeId === 'dex') ||\n        (titreTypeId === 'prx' && titreEtape.typeId === 'rpu')\n    )\n    .find(te => te.dateDebut)\n\n  // si\n  // - la démarche est un octroi\n  // - cette démarche a une étape dpu qui possède une date de début\n  if (titreDemarche.typeId === 'oct' && etapeDpuHasDateDebut) {\n    // la date de début est égale à la date de début de la dpu\n    return dateFormat(etapeDpuHasDateDebut.dateDebut, 'yyyy-mm-dd')\n  }\n\n  // si il y a une phase précédente\n  if (phasePrevious) {\n    // la date de début est égale à la date de fin de l'étape précédente\n    return phasePrevious.dateFin\n  }\n\n  // sinon, la date de début est égale à la date de la première étape de dpu\n  const titreEtapeDpuFirst = titreEtapesAscSort(titreDemarche).find(\n    titreEtape =>\n      titreEtape.typeId === 'dpu' ||\n      (titreTypeId === 'axm' && titreEtape.typeId === 'dex') ||\n      (titreTypeId === 'prx' && titreEtape.typeId === 'rpu')\n  )\n\n  return titreEtapeDpuFirst && dateFormat(titreEtapeDpuFirst.date, 'yyyy-mm-dd')\n}\n\n// trouve la date de fin d'une phase\n// in:\n// - titreDemarchesByTitre: toutes les démarches du titre,\n//   utile pour trouver la date de fin en cas d'annulation\n// - titreDemarchesByTitreFiltered: uniquement les démarches\n//   d'un titre qui donnent lieu à des phases\n// - titreDemarche: la démarche dont on cherche la date de fin\n\nconst titrePhaseDateFinFind = (\n  titreDemarchesByTitre,\n  titreDemarchesByTitreFiltered,\n  titreDemarche\n) => {\n  // trouve une démarche d'annulation si elle existe\n  const titreDemarcheAnnulation = demarcheAnnulationFind(\n    titreDemarchesByTitre,\n    titreDemarche.annulationDemarcheId\n  )\n\n  // si il y a une démarche d'annulation\n  // retourne sa date de fin\n  if (titreDemarcheAnnulation !== null) {\n    return titreDemarcheDateFinAndDureeFind(\n      titreDemarchesByTitre.slice().reverse(),\n      titreDemarcheAnnulation.ordre\n    ).dateFin\n  }\n\n  return titreDemarcheDateFinAndDureeFind(\n    titreDemarchesByTitreFiltered.slice().reverse(),\n    titreDemarche.ordre\n  ).dateFin\n}\n\nconst demarcheAnnulationFind = (\n  titreDemarchesByTitre,\n  annulationDemarcheId\n) => {\n  if (!annulationDemarcheId) {\n    return null\n  }\n\n  return titreDemarchesByTitre.find(t => t.id === annulationDemarcheId)\n}\n\nmodule.exports = titrePhasesFind\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-phases-find.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 313,
    "kind": "function",
    "name": "titrePhaseDateDebutFind",
    "memberof": "camino-api/tasks/_utils/titre-phases-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-phases-find.js~titrePhaseDateDebutFind",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-phases-find.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarche",
        "types": [
          "*"
        ]
      },
      {
        "name": "titrePhases",
        "types": [
          "*"
        ]
      },
      {
        "name": "index",
        "types": [
          "*"
        ]
      },
      {
        "name": "titreTypeId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 314,
    "kind": "function",
    "name": "titrePhaseDateFinFind",
    "memberof": "camino-api/tasks/_utils/titre-phases-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-phases-find.js~titrePhaseDateFinFind",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-phases-find.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarchesByTitre",
        "types": [
          "*"
        ]
      },
      {
        "name": "titreDemarchesByTitreFiltered",
        "types": [
          "*"
        ]
      },
      {
        "name": "titreDemarche",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 315,
    "kind": "function",
    "name": "demarcheAnnulationFind",
    "memberof": "camino-api/tasks/_utils/titre-phases-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-phases-find.js~demarcheAnnulationFind",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-phases-find.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarchesByTitre",
        "types": [
          "*"
        ]
      },
      {
        "name": "annulationDemarcheId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 316,
    "kind": "function",
    "name": "titrePhasesFind",
    "memberof": "camino-api/tasks/_utils/titre-phases-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-phases-find.js~titrePhasesFind",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-phases-find.js",
    "importStyle": "titrePhasesFind",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarchesByTitre",
        "types": [
          "*"
        ]
      },
      {
        "name": "titreTypeId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 317,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-prop-etape-id-find.js",
    "content": "// retourne l'id de la dernière étape acceptée\n// de la dernière démarche acceptée\n// pour laquelle la propriété existe\n\nconst titrePropEtapeIdFind = (titreDemarches, prop) =>\n  // filtre les démarches acceptée, terminée ou en instruction\n  titreDemarches\n    .filter(titreDemarche => ['acc', 'ter', 'ins'].includes(titreDemarche.statutId))\n    // parcourt les démarches\n    .reduce((etapeId, titreDemarche) => {\n      // Si la démarche est en instruction,\n      // on ne prend en compte que l'octroi (demande initiale)\n      if (etapeId || titreDemarche.statutId === 'ins' && titreDemarche.typeId !== 'oct') {\n        return etapeId\n      }\n\n      // filtre les étapes acceptation, fait ou favorable\n      const etape = titreDemarche.etapes\n        .filter(\n          titreEtape =>\n            ['acc', 'fai', 'fav'].includes(titreEtape.statutId) &&\n            (['dpu', 'dex', 'rpu'].includes(titreEtape.typeId) ||\n              // Si l'étape est une formalisation de la demande,\n              // on ne prend en compte que pour un octroi (demande initiale)\n              titreEtape.typeId === 'mfr' && titreDemarche.typeId === 'oct')\n        )\n        // trouve une étape qui contient la propriété\n        .find(\n          titreEtape =>\n            (titreEtape[prop] &&\n              Array.isArray(titreEtape[prop]) &&\n              titreEtape[prop].length) ||\n              (titreEtape[prop] && !Array.isArray(titreEtape[prop]))\n        )\n\n      // si l'étape existe, retourne son id\n      // sinon retourne `null`\n      return (etape && etape.id) || (!etape && null)\n    }, null)\n\nmodule.exports = titrePropEtapeIdFind\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-prop-etape-id-find.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 318,
    "kind": "function",
    "name": "titrePropEtapeIdFind",
    "memberof": "camino-api/tasks/_utils/titre-prop-etape-id-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-prop-etape-id-find.js~titrePropEtapeIdFind",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-prop-etape-id-find.js",
    "importStyle": "titrePropEtapeIdFind",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarches",
        "types": [
          "*"
        ]
      },
      {
        "name": "prop",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 319,
    "kind": "file",
    "name": "camino-api/tasks/_utils/titre-statut-id-find.js",
    "content": "const dateFormat = require('dateformat')\nconst titreDateFinFind = require('./titre-date-fin-find')\n\nconst titreStatutIdFind = titre => {\n  const today = dateFormat(new Date(), 'yyyy-mm-dd')\n\n  // si il y a une seule démarche (octroi)\n  if (\n    titre.demarches.length === 1 &&\n    titre.demarches[0].typeId === 'oct' &&\n    ['ins', 'dep', 'rej', 'cls', 'ret'].includes(titre.demarches[0].statutId)\n  ) {\n    // le statut de la démarche est en instruction ou déposée\n    if (['ins', 'dep'].includes(titre.demarches[0].statutId)) {\n      // le statut du titre est demande initiale\n      return 'dmi'\n    }\n\n    // le statut de la démarche est rejetée ou classée sans suite ou retirée\n    if (['rej', 'cls', 'ret'].includes(titre.demarches[0].statutId)) {\n      // le statut du titre est demande classée\n      return 'dmc'\n    }\n\n    return 'ind'\n  }\n\n  // une démarche a le statut en instruction\n  if (titre.demarches.find(d => d.statutId === 'ins')) {\n    // le statut du titre est modification en instance\n    return 'mod'\n  }\n\n  // la date du jour est inférieure à la date d’échéance\n  if (today < titreDateFinFind(titre.demarches)) {\n    // le statut du titre est valide\n    return 'val'\n  }\n\n  // le statut du titre est échu\n  return 'ech'\n}\n\nmodule.exports = titreStatutIdFind\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/_utils/titre-statut-id-find.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 320,
    "kind": "function",
    "name": "titreStatutIdFind",
    "memberof": "camino-api/tasks/_utils/titre-statut-id-find.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/_utils/titre-statut-id-find.js~titreStatutIdFind",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/_utils/titre-statut-id-find.js",
    "importStyle": "titreStatutIdFind",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "titre",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 321,
    "kind": "file",
    "name": "camino-api/tasks/daily/index.js",
    "content": "require('dotenv').config()\nrequire('../../database/index')\n\nconst { titresGet } = require('../../database/queries/titres')\nconst {\n  titresDemarchesGet\n} = require('../../database/queries/titres-demarches')\nconst { titresPhasesGet } = require('../../database/queries/titres-phases')\nconst { titresEtapesGet } = require('../../database/queries/titres-etapes')\n\nconst titresEtapesOrdreUpdate = require('./titres-etapes-ordre-update')\nconst titresDemarchesStatutIdUpdate = require('./titres-demarches-statut-ids-update')\nconst titresDemarchesOrdreUpdate = require('./titres-demarches-ordre-update')\nconst titresStatutIdsUpdate = require('./titres-statut-ids-update')\nconst titresPhasesUpdate = require('./titres-phases-update')\nconst titresPropsEtapeIdUpdate = require('./titres-props-etape-id-update')\n\nconst run = async () => {\n  // 1.\n  // détermine l'ordre des étapes\n  // en fonction de leur date\n  let titresEtapes = await titresEtapesGet({})\n  const titresEtapesOrdre = await titresEtapesOrdreUpdate(titresEtapes)\n\n  // 2.\n  // détermine le statut des démarches\n  // en fonction de ses étapes (type, ordre, statut)\n  let titres = await titresGet({})\n  let titresDemarches = await titresDemarchesGet({})\n  const titresDemarchesStatutId = await titresDemarchesStatutIdUpdate(\n    titresDemarches,\n    titres\n  )\n\n  // 3.\n  // détermine l'ordre des démarche\n  // en fonction de la date de leur première étape\n  titresDemarches = await titresDemarchesGet({})\n  const titresDemarchesOrdre = await titresDemarchesOrdreUpdate(titresDemarches)\n\n  // 4.\n  // détermine le statut des titres\n  // en fonction des démarches et de la date du jour\n  titres = await titresGet({})\n  const titresStatutIds = await titresStatutIdsUpdate(titres)\n\n  // 5.\n  // détermine les phases\n  // en fonction des démarches et de la date du jour\n  titres = await titresGet({})\n  titresDemarches = await titresDemarchesGet({})\n  let titresPhases = await titresPhasesGet()\n  const titresPhasesRes = await titresPhasesUpdate(\n    titres,\n    titresDemarches,\n    titresPhases\n  )\n\n  // 6.\n  // détermine les phases\n  // en fonction des démarches et de la date du jour\n  titres = await titresGet({})\n  const titresPropsEtapeId = await titresPropsEtapeIdUpdate(titres)\n\n  // logs\n  console.log(titresEtapesOrdre)\n  console.log(titresDemarchesStatutId)\n  console.log(titresDemarchesOrdre)\n  console.log(titresStatutIds)\n  console.log(titresPhasesRes)\n  console.log(titresPropsEtapeId)\n\n  console.log('Tâches quotidiennes executées')\n  process.exit()\n}\n\nrun()\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/daily/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 322,
    "kind": "function",
    "name": "run",
    "memberof": "camino-api/tasks/daily/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/daily/index.js~run",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/daily/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 323,
    "kind": "file",
    "name": "camino-api/tasks/daily/titres-demarches-ordre-update.js",
    "content": "const { titreDemarchesOrdreUpdate } = require('../titre-demarches')\n\nconst titresDemarchesOrdreUpdate = async titresDemarches => {\n  const titresDemarchesByTitre = titresDemarchesByTitreGroup(titresDemarches)\n  const titresDemarchesUpdated = Object.keys(titresDemarchesByTitre).reduce(\n    (res, titreId) => {\n      const titreDemarchesOrdreUpdated = titreDemarchesOrdreUpdate(\n        titresDemarchesByTitre[titreId]\n      )\n\n      return [...res, ...titreDemarchesOrdreUpdated]\n    },\n    []\n  )\n\n  await Promise.all(titresDemarchesUpdated)\n\n  return `Mise à jour: ${titresDemarchesUpdated.length} ordres de démarches.`\n}\n\nconst titresDemarchesByTitreGroup = titresDemarches =>\n  titresDemarches.reduce((res, titreDemarche) => {\n    res[titreDemarche.titreId] = res[titreDemarche.titreId]\n      ? [...res[titreDemarche.titreId], titreDemarche]\n      : [titreDemarche]\n\n    return res\n  }, {})\n\nmodule.exports = titresDemarchesOrdreUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/daily/titres-demarches-ordre-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 324,
    "kind": "function",
    "name": "titresDemarchesByTitreGroup",
    "memberof": "camino-api/tasks/daily/titres-demarches-ordre-update.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/daily/titres-demarches-ordre-update.js~titresDemarchesByTitreGroup",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/daily/titres-demarches-ordre-update.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "titresDemarches",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 325,
    "kind": "function",
    "name": "titresDemarchesOrdreUpdate",
    "memberof": "camino-api/tasks/daily/titres-demarches-ordre-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/daily/titres-demarches-ordre-update.js~titresDemarchesOrdreUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/daily/titres-demarches-ordre-update.js",
    "importStyle": "titresDemarchesOrdreUpdate",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "titresDemarches",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "file",
    "name": "camino-api/tasks/daily/titres-demarches-statut-ids-update.js",
    "content": "const { titreDemarcheStatutIdUpdate } = require('../titre-demarches')\nconst titreDemarcheStatutIdFind = require('../_utils/titre-demarche-statut-id-find')\n\n// met à jour le statut des démarches\nconst titresDemarchesUpdate = async (titresDemarches, titres) => {\n  const titresDemarchesUpdated = titresDemarches.reduce(\n    (arr, titreDemarche) => {\n      const titreTypeId =\n        titres.find(t => t.id === titreDemarche.titreId).typeId\n      const statutId = titreDemarcheStatutIdFind(titreDemarche, titreTypeId)\n\n      const titreDemarcheUpdated = titreDemarcheStatutIdUpdate(\n        titreDemarche,\n        statutId\n      )\n\n      return titreDemarcheUpdated ? [...arr, titreDemarcheUpdated] : arr\n    },\n    []\n  )\n\n  await Promise.all(titresDemarchesUpdated)\n\n  return `Mise à jour: ${titresDemarchesUpdated.length} statuts de démarches.`\n}\n\nmodule.exports = titresDemarchesUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/daily/titres-demarches-statut-ids-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 327,
    "kind": "function",
    "name": "titresDemarchesUpdate",
    "memberof": "camino-api/tasks/daily/titres-demarches-statut-ids-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/daily/titres-demarches-statut-ids-update.js~titresDemarchesUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/daily/titres-demarches-statut-ids-update.js",
    "importStyle": "titresDemarchesUpdate",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "titresDemarches",
        "types": [
          "*"
        ]
      },
      {
        "name": "titres",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "file",
    "name": "camino-api/tasks/daily/titres-etapes-ordre-update.js",
    "content": "const { titreEtapesOrdreUpdate } = require('../titre-etapes')\n\nconst titresEtapesOrdreUpdate = async titresEtapes => {\n  const titreEtapesByDemarches = titreEtapesByDemarchesGroup(titresEtapes)\n\n  const titresEtapesUpdated = Object.keys(titreEtapesByDemarches).reduce(\n    (arr, titreDemarche) => [\n      ...arr,\n      ...titreEtapesOrdreUpdate(titreEtapesByDemarches[titreDemarche])\n    ],\n    []\n  )\n\n  await Promise.all(titresEtapesUpdated)\n\n  return `Mise à jour: ${titresEtapesUpdated.length} ordres d'étapes.`\n}\n\n// retourne les étapes classées par démarche\nconst titreEtapesByDemarchesGroup = titresEtapes =>\n  titresEtapes.reduce((titreEtapesByDemarches, titreEtape) => {\n    titreEtapesByDemarches[titreEtape.titreDemarcheId] = titreEtapesByDemarches[\n      titreEtape.titreDemarcheId\n    ]\n      ? [...titreEtapesByDemarches[titreEtape.titreDemarcheId], titreEtape]\n      : [titreEtape]\n    return titreEtapesByDemarches\n  }, {})\n\nmodule.exports = titresEtapesOrdreUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/daily/titres-etapes-ordre-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 329,
    "kind": "function",
    "name": "titreEtapesByDemarchesGroup",
    "memberof": "camino-api/tasks/daily/titres-etapes-ordre-update.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/daily/titres-etapes-ordre-update.js~titreEtapesByDemarchesGroup",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/daily/titres-etapes-ordre-update.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "titresEtapes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 330,
    "kind": "function",
    "name": "titresEtapesOrdreUpdate",
    "memberof": "camino-api/tasks/daily/titres-etapes-ordre-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/daily/titres-etapes-ordre-update.js~titresEtapesOrdreUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/daily/titres-etapes-ordre-update.js",
    "importStyle": "titresEtapesOrdreUpdate",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "titresEtapes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "file",
    "name": "camino-api/tasks/daily/titres-phases-update.js",
    "content": "const { titrePhaseUpdate, titrePhaseDelete } = require('../titre-phases')\n\nconst titrePhasesFind = require('../_utils/titre-phases-find')\n\nconst titresPhasesUpdate = async (titres, titresDemarches, titresPhasesOld) => {\n  // créé un objet la liste des titres { [titreId]: titre.typeId, … }\n  const titreTypeIdsList = titres.reduce((res, titre) => {\n    res[titre.id] = titre.typeId\n    return res\n  }, {})\n\n  // regroupe les démarches par titre\n  const titresDemarchesGroupedByTitres = titreDemarchesByTitreGroup(\n    titresDemarches\n  )\n\n  // retourne un tableau avec les phases\n  // crées à partir des démarches\n  const titresPhases = Object.keys(titresDemarchesGroupedByTitres).reduce(\n    (res, titreId) => [\n      ...res,\n      ...titrePhasesFind(\n        titresDemarchesGroupedByTitres[titreId],\n        titreTypeIdsList[titreId]\n      )\n    ],\n    []\n  )\n\n  // retourne un tableau de requêtes pour\n  // - créer les nouvelles phases\n  // - modifier les phases existantes\n  const titresPhasesUpdated = titresPhases.reduce(\n    (res, titrePhase) => titrePhaseUpdate(res, titrePhase, titresPhasesOld),\n    []\n  )\n\n  // retourne un tableau de requêtes pour\n  // - supprimer les phases qui n'existent plus\n  const titrePhasesDeleted = titresPhasesOld.reduce(\n    (res, titrePhaseOld) => titrePhaseDelete(res, titrePhaseOld, titresPhases),\n    []\n  )\n\n  await Promise.all([...titresPhasesUpdated, ...titrePhasesDeleted])\n\n  return `Mise à jour: ${titresPhasesUpdated.length} phases de titres.`\n}\n\nconst titreDemarchesByTitreGroup = titreDemarches =>\n  titreDemarches.reduce((titreDemarchesByTitres, titreDemarche) => {\n    titreDemarchesByTitres[titreDemarche.titreId] = titreDemarchesByTitres[\n      titreDemarche.titreId\n    ]\n      ? [...titreDemarchesByTitres[titreDemarche.titreId], titreDemarche]\n      : [titreDemarche]\n    return titreDemarchesByTitres\n  }, {})\n\nmodule.exports = titresPhasesUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/daily/titres-phases-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 332,
    "kind": "function",
    "name": "titreDemarchesByTitreGroup",
    "memberof": "camino-api/tasks/daily/titres-phases-update.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/daily/titres-phases-update.js~titreDemarchesByTitreGroup",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/daily/titres-phases-update.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarches",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 333,
    "kind": "function",
    "name": "titresPhasesUpdate",
    "memberof": "camino-api/tasks/daily/titres-phases-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/daily/titres-phases-update.js~titresPhasesUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/daily/titres-phases-update.js",
    "importStyle": "titresPhasesUpdate",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "titres",
        "types": [
          "*"
        ]
      },
      {
        "name": "titresDemarches",
        "types": [
          "*"
        ]
      },
      {
        "name": "titresPhasesOld",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "file",
    "name": "camino-api/tasks/daily/titres-props-etape-id-update.js",
    "content": "const { titrePropsUpdate, calculatedProps } = require('../titres')\n\nconst titresPropsEtapeIdsUpdate = async titres => {\n  const titreUpdateRequests = titres.reduce((arr, titre) => {\n    const titrePropsUpdateRequests = calculatedProps.reduce((res, prop) => {\n      const titrePropsUpdated = titrePropsUpdate(titre, prop)\n\n      return titrePropsUpdated ? [...res, titrePropsUpdated] : res\n    }, [])\n\n    return [...arr, ...titrePropsUpdateRequests]\n  }, [])\n\n  await Promise.all(titreUpdateRequests)\n\n  return `Mise à jour: ${titreUpdateRequests.length} propriétés de titres.`\n}\n\nmodule.exports = titresPropsEtapeIdsUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/daily/titres-props-etape-id-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 335,
    "kind": "function",
    "name": "titresPropsEtapeIdsUpdate",
    "memberof": "camino-api/tasks/daily/titres-props-etape-id-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/daily/titres-props-etape-id-update.js~titresPropsEtapeIdsUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/daily/titres-props-etape-id-update.js",
    "importStyle": "titresPropsEtapeIdsUpdate",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "titres",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 336,
    "kind": "file",
    "name": "camino-api/tasks/daily/titres-statut-ids-update.js",
    "content": "const { titreStatutIdUpdate } = require('../titres')\n\nconst titreStatutIdFind = require('../_utils/titre-statut-id-find')\n\nconst titresStatutIdsUpdate = async titres => {\n  const titresUpdated = titres.reduce((arr, titre) => {\n    const statutId = titreStatutIdFind(titre)\n    const titreUpdated = titreStatutIdUpdate(titre, statutId)\n\n    return titreUpdated ? [...arr, titreUpdated] : arr\n  }, [])\n\n  await Promise.all(titresUpdated)\n\n  return `Mise à jour: ${titresUpdated.length} statuts de titres.`\n}\nmodule.exports = titresStatutIdsUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/daily/titres-statut-ids-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 337,
    "kind": "function",
    "name": "titresStatutIdsUpdate",
    "memberof": "camino-api/tasks/daily/titres-statut-ids-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/daily/titres-statut-ids-update.js~titresStatutIdsUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/daily/titres-statut-ids-update.js",
    "importStyle": "titresStatutIdsUpdate",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "titres",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "file",
    "name": "camino-api/tasks/etape-update/index.js",
    "content": "require('dotenv').config()\nrequire('../../database/index')\nconst { titreGet } = require('../../database/queries/titres')\nconst { titreDemarcheGet } = require('../../database/queries/titres-demarches')\nconst { titreEtapeGet } = require('../../database/queries/titres-etapes')\n\nconst titreEtapesOrdreUpdate = require('./titre-etapes-ordre-update')\nconst titreDemarcheStatutIdUpdate = require('./titre-demarche-statut-id-update')\nconst titreDemarchesOrdreUpdate = require('./titre-demarches-ordre-update')\nconst titreStatutIdsUpdate = require('./titre-statut-id-update')\nconst titrePhasesUpdate = require('./titre-phases-update')\nconst titrePropsEtapeIdUpdate = require('./titre-props-etape-id-update')\n\nconst run = async titreEtape => {\n  // détermine l'ordre des étapes\n  // en fonction de leur date\n\n  const titreEtapeOld = await titreEtapeGet(titreEtape.id)\n  const titreDemarcheId = titreEtapeOld.titreDemarcheId\n  let titreDemarche = await titreDemarcheGet(titreDemarcheId)\n  const titreId = titreDemarche.titreId\n  const titreEtapesOrdre = await titreEtapesOrdreUpdate(titreDemarche)\n\n  // détermine le statut de la démarche\n  // en fonction de ses étapes (type, ordre, statut)\n\n  titreDemarche = await titreDemarcheGet(titreDemarcheId)\n  let titre = await titreGet(titreId)\n  const titreTypeId = titre.typeId\n  const titreDemarcheStatutId = await titreDemarcheStatutIdUpdate(\n    titreDemarche,\n    titreTypeId\n  )\n\n  // détermine l'ordre des démarches\n  // en fonction de la date de leur première étape\n  titre = await titreGet(titreId)\n  const titreDemarchesOrdre = await titreDemarchesOrdreUpdate(titre.demarches)\n\n  // détermine le statut des titres\n  // en fonction des démarches et de la date du jour\n  titre = await titreGet(titreId)\n  const titreStatutIds = await titreStatutIdsUpdate(titre)\n\n  // détermine les phases\n  // en fonction des démarches et de la date du jour\n  titre = await titreGet(titreId)\n  const titresPhases = await titrePhasesUpdate(titre)\n\n  // détermine les phases\n  // en fonction des démarches et de la date du jour\n  titre = await titreGet(titreId)\n  const titresPropsEtapeId = await titrePropsEtapeIdUpdate(titre)\n\n  console.log(titreEtapesOrdre)\n  console.log(titreDemarcheStatutId)\n  console.log(titreDemarchesOrdre)\n  console.log(titreStatutIds)\n  console.log(titresPhases)\n  console.log(titresPropsEtapeId)\n\n  console.log('Étape mise à jour')\n}\n\nmodule.exports = run\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/etape-update/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 339,
    "kind": "function",
    "name": "run",
    "memberof": "camino-api/tasks/etape-update/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/etape-update/index.js~run",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/etape-update/index.js",
    "importStyle": "run",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "titreEtape",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 340,
    "kind": "file",
    "name": "camino-api/tasks/etape-update/titre-demarche-statut-id-update.js",
    "content": "const { titreDemarcheStatutIdUpdate } = require('../titre-demarches')\nconst titreDemarcheStatutIdFind = require('../_utils/titre-demarche-statut-id-find')\n\n// met à jour le statut des démarches\nconst titresDemarchesUpdate = async (titreDemarche, titreTypeId) => {\n  const statutId = titreDemarcheStatutIdFind(titreDemarche, titreTypeId)\n\n  const titreDemarcheUpdated = titreDemarcheStatutIdUpdate(\n    titreDemarche,\n    statutId\n  )\n\n  if (titreDemarcheUpdated) {\n    await titreDemarcheUpdated\n  }\n\n  return `Mise à jour: ${titreDemarcheUpdated ? '1' : '0'} statut de démarches.`\n}\n\nmodule.exports = titresDemarchesUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/etape-update/titre-demarche-statut-id-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 341,
    "kind": "function",
    "name": "titresDemarchesUpdate",
    "memberof": "camino-api/tasks/etape-update/titre-demarche-statut-id-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/etape-update/titre-demarche-statut-id-update.js~titresDemarchesUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/etape-update/titre-demarche-statut-id-update.js",
    "importStyle": "titresDemarchesUpdate",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarche",
        "types": [
          "*"
        ]
      },
      {
        "name": "titreTypeId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "file",
    "name": "camino-api/tasks/etape-update/titre-demarches-ordre-update.js",
    "content": "const { titreDemarchesOrdreUpdate } = require('../titre-demarches')\n\nconst titresDemarchesOrdreUpdate = async titresDemarchesByTitre => {\n  const titreDemarchesOrdreUpdated = titreDemarchesOrdreUpdate(\n    titresDemarchesByTitre\n  )\n\n  await Promise.all(titreDemarchesOrdreUpdated)\n\n  return `Mise à jour: ${\n    titreDemarchesOrdreUpdated.length\n  } ordres de démarches.`\n}\n\nmodule.exports = titresDemarchesOrdreUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/etape-update/titre-demarches-ordre-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "titresDemarchesOrdreUpdate",
    "memberof": "camino-api/tasks/etape-update/titre-demarches-ordre-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/etape-update/titre-demarches-ordre-update.js~titresDemarchesOrdreUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/etape-update/titre-demarches-ordre-update.js",
    "importStyle": "titresDemarchesOrdreUpdate",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "titresDemarchesByTitre",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 344,
    "kind": "file",
    "name": "camino-api/tasks/etape-update/titre-etapes-ordre-update.js",
    "content": "const { titreEtapesOrdreUpdate } = require('../titre-etapes')\n\nconst titresEtapesOrdreUpdate = async titreDemarche => {\n  const titresEtapesUpdated = titreEtapesOrdreUpdate(titreDemarche.etapes)\n\n  await Promise.all(titresEtapesUpdated)\n\n  return `Mise à jour: ${titresEtapesUpdated.length} ordres d'étapes.`\n}\n\nmodule.exports = titresEtapesOrdreUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/etape-update/titre-etapes-ordre-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 345,
    "kind": "function",
    "name": "titresEtapesOrdreUpdate",
    "memberof": "camino-api/tasks/etape-update/titre-etapes-ordre-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/etape-update/titre-etapes-ordre-update.js~titresEtapesOrdreUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/etape-update/titre-etapes-ordre-update.js",
    "importStyle": "titresEtapesOrdreUpdate",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarche",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "file",
    "name": "camino-api/tasks/etape-update/titre-phases-update.js",
    "content": "const { titrePhaseUpdate, titrePhaseDelete } = require('../titre-phases')\nconst titrePhasesFind = require('../_utils/titre-phases-find')\n\nconst titresPhasesUpdate = async titre => {\n  const titreTypeId = titre.typeId\n  // retourne les démarches enregistrées en base\n\n  // retourne les phases enregistrées en base\n  const titresPhasesOld = titre.demarches.reduce(\n    (res, td) => (td.phase ? [...res, td.phase] : res),\n    []\n  )\n\n  // retourne un tableau avec les phases\n  // crées à partir des démarches\n  const titresPhases = titrePhasesFind(titre.demarches, titreTypeId)\n\n  // retourne un tableau de requêtes pour\n  // - créer les nouvelles phases\n  // - modifier les phases existantes\n  const titresPhasesUpdated = titresPhases.reduce(\n    (res, titrePhase) => titrePhaseUpdate(res, titrePhase, titresPhasesOld),\n    []\n  )\n\n  // retourne un tableau de requêtes pour\n  // - supprimer les phases qui n'existent plus\n  const titrePhasesDeleted = titresPhasesOld.reduce(\n    (res, titrePhaseOld) => titrePhaseDelete(res, titrePhaseOld, titresPhases),\n    []\n  )\n\n  await Promise.all([...titresPhasesUpdated, ...titrePhasesDeleted])\n\n  return `Mise à jour: ${titresPhasesUpdated.length} phases de titres.`\n}\n\nmodule.exports = titresPhasesUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/etape-update/titre-phases-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 347,
    "kind": "function",
    "name": "titresPhasesUpdate",
    "memberof": "camino-api/tasks/etape-update/titre-phases-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/etape-update/titre-phases-update.js~titresPhasesUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/etape-update/titre-phases-update.js",
    "importStyle": "titresPhasesUpdate",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "titre",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "file",
    "name": "camino-api/tasks/etape-update/titre-props-etape-id-update.js",
    "content": "const { titrePropsUpdate, calculatedProps } = require('../titres')\n\nconst titresPropsEtapeIdsUpdate = async titre => {\n  const titrePropsUpdateRequests = calculatedProps.reduce((res, prop) => {\n    const titrePropsUpdated = titrePropsUpdate(titre, prop)\n\n    return titrePropsUpdated ? [...res, titrePropsUpdated] : res\n  }, [])\n\n  await Promise.all(titrePropsUpdateRequests)\n\n  return `Mise à jour: ${titrePropsUpdateRequests.length} propriétés de titres.`\n}\n\nmodule.exports = titresPropsEtapeIdsUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/etape-update/titre-props-etape-id-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 349,
    "kind": "function",
    "name": "titresPropsEtapeIdsUpdate",
    "memberof": "camino-api/tasks/etape-update/titre-props-etape-id-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/etape-update/titre-props-etape-id-update.js~titresPropsEtapeIdsUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/etape-update/titre-props-etape-id-update.js",
    "importStyle": "titresPropsEtapeIdsUpdate",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "titre",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "file",
    "name": "camino-api/tasks/etape-update/titre-statut-id-update.js",
    "content": "const { titreStatutIdUpdate } = require('../titres')\n\nconst titreStatutIdFind = require('../_utils/titre-statut-id-find')\n\nconst titreStatutUpdate = async titre => {\n  const statutId = titreStatutIdFind(titre)\n  const titreUpdated = titreStatutIdUpdate(titre, statutId)\n\n  if (titreUpdated) {\n    await titreUpdated\n  }\n\n  return `Mise à jour: ${titreUpdated ? '1' : '0'} statuts de titres.`\n}\n\nmodule.exports = titreStatutUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/etape-update/titre-statut-id-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 351,
    "kind": "function",
    "name": "titreStatutUpdate",
    "memberof": "camino-api/tasks/etape-update/titre-statut-id-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/etape-update/titre-statut-id-update.js~titreStatutUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/etape-update/titre-statut-id-update.js",
    "importStyle": "titreStatutUpdate",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "titre",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 352,
    "kind": "file",
    "name": "camino-api/tasks/index.js",
    "content": "/**\n * @typedef {Object} titreDemarche\n * @property {!String} id id de la démarche\n * @property {!string} titreId id du titre minier\n * @property {!string} typeId id du type de la démarche\n * @property {!string} statutId id du statut de la démarche\n * @property {number} ordre ordre chronologique de la démarche au sein du titre\n * @property {boolean} annulationDemarcheId si la démarche est une annulation, cette id identifie la démarche annulée\n */\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 353,
    "kind": "typedef",
    "name": "titreDemarche",
    "memberof": "camino-api/tasks/index.js",
    "static": true,
    "longname": "camino-api/tasks/index.js~titreDemarche",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": false,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "id de la démarche"
      },
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "titreId",
        "description": "id du titre minier"
      },
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "typeId",
        "description": "id du type de la démarche"
      },
      {
        "nullable": false,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "statutId",
        "description": "id du statut de la démarche"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ordre",
        "description": "ordre chronologique de la démarche au sein du titre"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "annulationDemarcheId",
        "description": "si la démarche est une annulation, cette id identifie la démarche annulée"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "titreDemarche"
    }
  },
  {
    "__docId__": 354,
    "kind": "file",
    "name": "camino-api/tasks/titre-demarches.js",
    "content": "const {\n  titreDemarcheStatutIdUpdate,\n  titreDemarcheOrdreUpdate\n} = require('../database/queries/titres-demarches')\n\nconst titreDemarchesAscSort = require('./_utils/titre-demarches-asc-sort')\n\nconst titreDemarches = {\n  // met à jour le statut d'une démarche\n  titreDemarcheStatutIdUpdate(titreDemarche, statutId) {\n    return (\n      // filtre uniquement les démarches dont le statut a changé\n      statutId !== titreDemarche.statutId &&\n      titreDemarcheStatutIdUpdate({\n        id: titreDemarche.id,\n        statutId\n      }).then(u => {\n        console.log(\n          `Mise à jour: démarche ${titreDemarche.id}, statutId ${statutId}`\n        )\n        return u\n      })\n    )\n  },\n\n  // met à jour la propriété 'ordre' de toutes les démarches d'un titre\n  titreDemarchesOrdreUpdate(titreDemarchesByTitre) {\n    return titreDemarchesAscSort(titreDemarchesByTitre)\n    // to-do: faire un reduce au lieu de map-filter-map\n      .map((titreDemarche, index) => {\n        titreDemarche.ordreUpdated = index + 1\n        return titreDemarche\n      })\n      .filter(\n        titreDemarche => titreDemarche.ordreUpdated !== titreDemarche.ordre\n      )\n      .map(titreDemarche => {\n        return titreDemarcheOrdreUpdate({\n          id: titreDemarche.id,\n          ordre: titreDemarche.ordreUpdated\n        }).then(u => {\n          console.log(\n            `Mise à jour: démarche ${titreDemarche.id}, ordre ${\n              titreDemarche.ordreUpdated\n            }`\n          )\n          return u\n        })\n      })\n  }\n}\n\nmodule.exports = titreDemarches\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/titre-demarches.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 355,
    "kind": "variable",
    "name": "titreDemarches",
    "memberof": "camino-api/tasks/titre-demarches.js",
    "static": true,
    "longname": "camino-api/tasks/titre-demarches.js~titreDemarches",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/titre-demarches.js",
    "importStyle": "titreDemarches",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"titreDemarcheStatutIdUpdate\": function, \"titreDemarchesOrdreUpdate\": function}"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "file",
    "name": "camino-api/tasks/titre-etapes.js",
    "content": "const { titreEtapeUpdate } = require('../database/queries/titres-etapes')\n\nconst titreEtapes = {\n  titreEtapesOrdreUpdate(titreEtapesByDemarche) {\n    return titreEtapesByDemarche\n      .sort((a, b) => a.date - b.date)\n      .map((titreEtape, index) => {\n        titreEtape.ordreNew = index + 1\n        return titreEtape\n      })\n      .filter(titreEtape => titreEtape.ordreNew !== titreEtape.ordre)\n      .map(titreEtape => {\n        const props = {\n          ordre: titreEtape.ordreNew\n        }\n\n        titreEtapeUpdate({ id: titreEtape.id, props }).then(u => {\n          console.log(\n            `Mise à jour: étape ${titreEtape.id}, ${JSON.stringify(props)}`\n          )\n          return u\n        })\n      })\n  }\n}\n\nmodule.exports = titreEtapes\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/titre-etapes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 357,
    "kind": "variable",
    "name": "titreEtapes",
    "memberof": "camino-api/tasks/titre-etapes.js",
    "static": true,
    "longname": "camino-api/tasks/titre-etapes.js~titreEtapes",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/titre-etapes.js",
    "importStyle": "titreEtapes",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"titreEtapesOrdreUpdate\": function}"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "file",
    "name": "camino-api/tasks/titre-phases.js",
    "content": "const dateFormat = require('dateformat')\n\nconst {\n  titrePhaseUpdate,\n  titrePhaseDelete\n} = require('../database/queries/titres-phases')\n\nconst titrePhases = {\n  titrePhaseUpdate(res, titrePhase, titresPhasesOld) {\n    const titrePhaseOld = titrePhaseEqualFind(\n      titrePhase.titreDemarcheId,\n      titresPhasesOld\n    )\n    const titrePhasePropsChanged = titrePhaseOld\n      ? titrePhasePropsChangedFind(titrePhase, titrePhaseOld)\n      : null\n\n    let titrePhaseUpdated\n\n    if (\n      // si la phase n'existe pas\n      !titrePhaseOld\n    ) {\n      titrePhaseUpdated = titrePhaseUpdate({ titrePhase }).then(u => {\n        console.log(`Création: phase ${titrePhase.titreDemarcheId}`)\n\n        return u\n      })\n    } else if (\n      // si la phase existe et est modifiée\n      titrePhasePropsChanged\n    ) {\n      // console.log(titrePhasePropsChanged)\n      titrePhaseUpdated = titrePhaseUpdate({ titrePhase }).then(u => {\n        console.log(\n          `Mise à jour: phase ${titrePhase.titreDemarcheId}, ${JSON.stringify(\n            titrePhasePropsChanged\n          )}`\n        )\n\n        return u\n      })\n    }\n\n    return titrePhaseUpdated ? [...res, titrePhaseUpdated] : res\n  },\n\n  titrePhaseDelete(res, titrePhaseOld, titresPhases) {\n    const titrePhase = titrePhaseEqualFind(\n      titrePhaseOld.titreDemarcheId,\n      titresPhases\n    )\n\n    let titrePhaseDeleted\n\n    if (!titrePhase) {\n      titrePhaseDeleted = titrePhaseDelete({\n        titreDemarcheId: titrePhaseOld.titreDemarcheId\n      }).then(u => {\n        console.log(`Suppression: phase ${titrePhaseOld.titreDemarcheId}`)\n\n        return u\n      })\n    }\n    return titrePhaseDeleted ? [...res, titrePhaseDeleted] : res\n  }\n}\n\n// retourne une phase parmi les titrePhases en fonction de son id\nconst titrePhaseEqualFind = (titreDemarcheId, titrePhases) =>\n  titrePhases.find(tp => tp.titreDemarcheId === titreDemarcheId)\n\n// retourne les propriétés de la phase existante\n// qui sont différentes de la nouvelle phase\nconst titrePhasePropsChangedFind = (titrePhase, titrePhaseOld) =>\n  Object.keys(titrePhase).reduce((res, key) => {\n    if (titrePhaseOld[key] instanceof Date) {\n      titrePhaseOld[key] = dateFormat(titrePhaseOld[key], 'yyyy-mm-dd')\n    }\n\n    const mod = { [key]: [titrePhaseOld[key], titrePhase[key]] }\n\n    return titrePhase[key] === titrePhaseOld[key]\n      ? res\n      : res\n      ? Object.assign(res, mod)\n      : mod\n  }, null)\n\nmodule.exports = titrePhases\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/titre-phases.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 359,
    "kind": "function",
    "name": "titrePhaseEqualFind",
    "memberof": "camino-api/tasks/titre-phases.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/titre-phases.js~titrePhaseEqualFind",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/titre-phases.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [
      {
        "name": "titreDemarcheId",
        "types": [
          "*"
        ]
      },
      {
        "name": "titrePhases",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 360,
    "kind": "function",
    "name": "titrePhasePropsChangedFind",
    "memberof": "camino-api/tasks/titre-phases.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tasks/titre-phases.js~titrePhasePropsChangedFind",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/titre-phases.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [
      {
        "name": "titrePhase",
        "types": [
          "*"
        ]
      },
      {
        "name": "titrePhaseOld",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 361,
    "kind": "variable",
    "name": "titrePhases",
    "memberof": "camino-api/tasks/titre-phases.js",
    "static": true,
    "longname": "camino-api/tasks/titre-phases.js~titrePhases",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/titre-phases.js",
    "importStyle": "titrePhases",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{\"titrePhaseUpdate\": function, \"titrePhaseDelete\": function}"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "file",
    "name": "camino-api/tasks/titres-without-points-list.js",
    "content": "require('dotenv').config()\nrequire('../database/index')\n\nconst { titresGet } = require('../database/queries/titres')\n\nconst titresWithoutPointsList = async () => {\n  const titres = await titresGet({ domaineIds: ['g'] })\n\n  const list = titres.filter(\n    titre =>\n      titre.demarches.every(demarche =>\n        demarche.etapes.every(etape => etape.points.length === 0)\n      ) && titre.statutId === 'val'\n  )\n\n  return list.map(titre => titre.id)\n}\n\nconst run = async () => {\n  const res = await titresWithoutPointsList()\n  console.log(res)\n  console.log('Done')\n\n  process.exit()\n}\n\nrun()\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/titres-without-points-list.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 363,
    "kind": "function",
    "name": "titresWithoutPointsList",
    "memberof": "camino-api/tasks/titres-without-points-list.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/titres-without-points-list.js~titresWithoutPointsList",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/titres-without-points-list.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 364,
    "kind": "function",
    "name": "run",
    "memberof": "camino-api/tasks/titres-without-points-list.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/titres-without-points-list.js~run",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/titres-without-points-list.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 365,
    "kind": "file",
    "name": "camino-api/tasks/titres.js",
    "content": "const { titrePropsUpdate } = require('../database/queries/titres')\nconst titrePropEtapeIdFind = require('./_utils/titre-prop-etape-id-find')\n\nconst titres = {\n  calculatedProps: [\n    'points',\n    'titulaires',\n    'amodiataires',\n    'administrations',\n    'surface',\n    'volume',\n    'substances'\n  ],\n\n  titreStatutIdUpdate(titre, statutId) {\n    return (\n      statutId !== titre.statutId &&\n      titrePropsUpdate({\n        id: titre.id,\n        props: { statutId }\n      }).then(u => {\n        console.log(`Mise à jour: titre ${titre.id}, statutId ${statutId}`)\n        return u\n      })\n    )\n  },\n\n  titrePropsUpdate(titre, prop) {\n    const propEtapeIdName = `${prop}TitreEtapeId`\n    const etapeId = titrePropEtapeIdFind(titre.demarches, prop)\n\n    return (\n      etapeId !== titre[propEtapeIdName] &&\n      titrePropsUpdate({\n        id: titre.id,\n        props: { [propEtapeIdName]: etapeId }\n      }).then(u => {\n        console.log(`Mise à jour: titre ${titre.id}, ${prop}, ${etapeId}`)\n        return u\n      })\n    )\n  }\n}\n\nmodule.exports = titres\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/titres.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 366,
    "kind": "variable",
    "name": "titres",
    "memberof": "camino-api/tasks/titres.js",
    "static": true,
    "longname": "camino-api/tasks/titres.js~titres",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tasks/titres.js",
    "importStyle": "titres",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"calculatedProps\": *, \"titreStatutIdUpdate\": function, \"titrePropsUpdate\": function}"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "file",
    "name": "camino-api/tasks/utilisateur-add.js",
    "content": "require('dotenv').config()\nconst bcrypt = require('bcrypt')\nrequire('../database/index')\n\nconst { utilisateurAdd } = require('../database/queries/utilisateurs')\n\nconst password = process.env.ADMIN_PASSWORD\n\nconst utilisateur = {\n  id: process.env.ADMIN_ID,\n  email: process.env.ADMIN_EMAIL,\n  permissionId: 'super'\n}\n\nconst run = async () => {\n  utilisateur.motDePasse = await bcrypt.hash(password, 10)\n  await utilisateurAdd(utilisateur)\n  console.log('Utilisateur créé')\n  process.exit()\n}\n\nrun()\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/utilisateur-add.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 368,
    "kind": "variable",
    "name": "password",
    "memberof": "camino-api/tasks/utilisateur-add.js",
    "static": true,
    "longname": "camino-api/tasks/utilisateur-add.js~password",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/utilisateur-add.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 369,
    "kind": "variable",
    "name": "utilisateur",
    "memberof": "camino-api/tasks/utilisateur-add.js",
    "static": true,
    "longname": "camino-api/tasks/utilisateur-add.js~utilisateur",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/utilisateur-add.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": *, \"email\": *, \"permissionId\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 370,
    "kind": "function",
    "name": "run",
    "memberof": "camino-api/tasks/utilisateur-add.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/utilisateur-add.js~run",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/utilisateur-add.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 371,
    "kind": "file",
    "name": "camino-api/tasks/utilisateur-remove.js",
    "content": "require('dotenv').config()\nrequire('../database/index')\n\nconst { utilisateurRemove } = require('../database/queries/utilisateurs')\n\nconst id = process.env.ADMIN_ID\n\nconst run = async () => {\n  const utilisateur = await utilisateurRemove(id)\n  if (utilisateur) {\n    console.log('Utilisateur supprimé')\n  } else {\n    console.log('Aucun utilisateur supprimé')\n  }\n  process.exit()\n}\n\nrun()\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tasks/utilisateur-remove.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 372,
    "kind": "variable",
    "name": "id",
    "memberof": "camino-api/tasks/utilisateur-remove.js",
    "static": true,
    "longname": "camino-api/tasks/utilisateur-remove.js~id",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/utilisateur-remove.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 373,
    "kind": "function",
    "name": "run",
    "memberof": "camino-api/tasks/utilisateur-remove.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tasks/utilisateur-remove.js~run",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tasks/utilisateur-remove.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 374,
    "kind": "file",
    "name": "camino-api/tools/export/_utils/db-process.js",
    "content": "const jsonToSpreadsheet = require('./json-to-spreadsheet')\nconst credentials = require('../credentials')\n\nconst dbProcess = async definition => {\n  const content = await definition.fetch\n  await jsonToSpreadsheet(\n    definition.spreadsheetId,\n    credentials,\n    definition.tables,\n    content\n  )\n  return `Export: ${content.length} ${definition.name}`\n}\n\nmodule.exports = dbProcess\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/_utils/db-process.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 375,
    "kind": "function",
    "name": "dbProcess",
    "memberof": "camino-api/tools/export/_utils/db-process.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/export/_utils/db-process.js~dbProcess",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/export/_utils/db-process.js",
    "importStyle": "dbProcess",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "definition",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 376,
    "kind": "file",
    "name": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "content": "const gssUseServiceAccountAuth = (gss, credentials) =>\n  new Promise((resolve, reject) =>\n    gss.useServiceAccountAuth(credentials, (err, res) => {\n      if (err) {\n        console.log('Erreur useServiceAccountAuth:', err)\n        reject(err)\n      } else {\n        console.log('authentification: succès')\n        resolve(res)\n      }\n    })\n  )\n\nconst gssGetInfo = gss =>\n  new Promise((resolve, reject) =>\n    gss.getInfo((err, res) => {\n      if (err) {\n        console.log('Erreur getInfo:', err)\n        reject(err)\n      } else {\n        console.log('spreadsheet:', res.title)\n        resolve(res)\n      }\n    })\n  )\n\nconst worksheetRemove = (gss, worksheet) =>\n  new Promise((resolve, reject) => {\n    gss.removeWorksheet(worksheet.id, (err, res) => {\n      if (err) {\n        console.log('Erreur removeWorksheet:', err)\n        reject(err)\n      } else {\n        console.log(`worksheet supprimée: ${worksheet.title}`)\n        resolve(res)\n      }\n    })\n  })\n\nconst worksheetAdd = (gss, worksheet) =>\n  new Promise((resolve, reject) =>\n    gss.addWorksheet(worksheet, (err, res) => {\n      if (err) {\n        console.log('Erreur addWorksheet:', err)\n        reject(err)\n      } else {\n        console.log(`worksheet ajoutée: ${worksheet.title}`)\n        resolve(res)\n      }\n    })\n  )\n\nconst rowAdd = (gss, worksheetId, row) =>\n  new Promise((resolve, reject) =>\n    gss.addRow(worksheetId, row, (err, res) => {\n      if (err) {\n        console.log('Erreur addRow:', err)\n        reject(err)\n      } else {\n        console.log(`row ajouté: ${row[Object.keys(row)[0]]}`)\n        resolve(res)\n      }\n    })\n  )\n\nconst rowsGet = (gss, worksheetId, options) =>\n  new Promise((resolve, reject) =>\n    gss.getRows(worksheetId, options, (err, res) => {\n      if (err) {\n        console.log('Erreur getRows:', err)\n        reject(err)\n      } else {\n        resolve(res)\n      }\n    })\n  )\n\nconst rowDelete = row =>\n  new Promise((resolve, reject) =>\n    row.del((err, res) => {\n      if (err) {\n        console.log('Erreur rowSave:', err)\n        reject(err)\n      } else {\n        resolve(res)\n      }\n    })\n  )\n\nconst cellsGet = (gss, worksheetId, options) =>\n  new Promise((resolve, reject) =>\n    gss.getCells(worksheetId, options, (err, res) => {\n      if (err) {\n        console.log('Erreur getCells:', err)\n        reject(err)\n      } else {\n        resolve(res)\n      }\n    })\n  )\n\nconst cellSet = (cell, value) =>\n  new Promise((resolve, reject) =>\n    cell.setValue(value, (err, res) => {\n      if (err) {\n        console.log('Erreur cell.setValue:', err)\n        reject(err)\n      } else {\n        resolve(res)\n      }\n    })\n  )\n\nmodule.exports = {\n  gssUseServiceAccountAuth,\n  gssGetInfo,\n  worksheetRemove,\n  worksheetAdd,\n  rowAdd,\n  rowsGet,\n  rowDelete,\n  cellsGet,\n  cellSet\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 377,
    "kind": "function",
    "name": "gssUseServiceAccountAuth",
    "memberof": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js~gssUseServiceAccountAuth",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "gss",
        "types": [
          "*"
        ]
      },
      {
        "name": "credentials",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 378,
    "kind": "function",
    "name": "gssGetInfo",
    "memberof": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js~gssGetInfo",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "gss",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 379,
    "kind": "function",
    "name": "worksheetRemove",
    "memberof": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js~worksheetRemove",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "gss",
        "types": [
          "*"
        ]
      },
      {
        "name": "worksheet",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 380,
    "kind": "function",
    "name": "worksheetAdd",
    "memberof": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js~worksheetAdd",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "gss",
        "types": [
          "*"
        ]
      },
      {
        "name": "worksheet",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 381,
    "kind": "function",
    "name": "rowAdd",
    "memberof": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js~rowAdd",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "gss",
        "types": [
          "*"
        ]
      },
      {
        "name": "worksheetId",
        "types": [
          "*"
        ]
      },
      {
        "name": "row",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 382,
    "kind": "function",
    "name": "rowsGet",
    "memberof": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js~rowsGet",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "gss",
        "types": [
          "*"
        ]
      },
      {
        "name": "worksheetId",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 383,
    "kind": "function",
    "name": "rowDelete",
    "memberof": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js~rowDelete",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [
      {
        "name": "row",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 384,
    "kind": "function",
    "name": "cellsGet",
    "memberof": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js~cellsGet",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [
      {
        "name": "gss",
        "types": [
          "*"
        ]
      },
      {
        "name": "worksheetId",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 385,
    "kind": "function",
    "name": "cellSet",
    "memberof": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/_utils/google-spreadsheet-promisify.js~cellSet",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/_utils/google-spreadsheet-promisify.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [
      {
        "name": "cell",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 386,
    "kind": "file",
    "name": "camino-api/tools/export/_utils/json-to-spreadsheet.js",
    "content": "const PQueue = require('p-queue')\nconst GoogleSpreadsheet = require('google-spreadsheet')\nconst decamelize = require('decamelize')\nconst rowFormat = require('./row-format')\n\nconst {\n  gssUseServiceAccountAuth,\n  gssGetInfo,\n  worksheetRemove,\n  worksheetAdd,\n  rowAdd,\n  cellsGet,\n  cellSet\n} = require('./google-spreadsheet-promisify')\n\nconst jsonToSpreadsheet = async (\n  spreadsheetId,\n  credentials,\n  tables,\n  content\n) => {\n  // instancie le constructeur\n  const gss = new GoogleSpreadsheet(spreadsheetId)\n\n  // authentification dans google\n  await gssUseServiceAccountAuth(gss, credentials)\n\n  // obtiens les infos sur la spreadsheet\n  const infos = await gssGetInfo(gss)\n\n  // si l'onglet 'tmp' n'existe pas, le créer\n  if (!infos.worksheets.find(w => w.title === 'tmp')) {\n    await worksheetAdd(gss, { title: 'tmp' })\n  }\n\n  // retourne un tableau des onglets à supprimer\n  const worksheetsRemove = infos.worksheets.filter(w => w.title !== 'tmp')\n\n  // retourne un tableau avec les requêtes pour supprimer les onglets\n  const worksheetRemovePromises = worksheetsRemove.map(w =>\n    worksheetRemove(gss, w)\n  )\n\n  // supprime les onglets\n  await Promise.all(worksheetRemovePromises)\n\n  // retourne un tableau avec les requêtes pour ajouter les nouveaux onglets\n  const worksheetsPromises = tables.map(({ name, columns }) => () =>\n    worksheetAdd(gss, {\n      title: decamelize(name),\n      // id est un mot clé reservé par l'API google\n      // pour contourner cette limitation, on converti id en Id\n      // on le convertira à nouveau en id ensuite\n      headers: columns.map(h => (h === 'id' ? 'Id' : decamelize(h))),\n      colCount: columns.length,\n      rowCount: 1\n    })\n  )\n\n  // on utilise une queue plutôt que Promise.all\n  // pour que les onglets soient créés dans l'ordre\n  const worksheetQueue = new PQueue({ concurrency: 1 })\n  const worksheets = await worksheetQueue.addAll(worksheetsPromises)\n\n  // est ce que l'onglet tmp existe ?\n  const worksheetTmpRemove = infos.worksheets.find(w => w.title === 'tmp')\n\n  // si l'onglet 'tmp' existe, on le supprime\n  if (worksheetTmpRemove) {\n    await worksheetRemove(gss, worksheetTmpRemove)\n  }\n\n  // pour chaque table,\n  tables.forEach(table => {\n    // renseigne l'id des worksheets créées\n    const worksheet = worksheets.find(w => w.title === decamelize(table.name))\n    table.worksheetId = worksheet && worksheet.id\n\n    // retourne les rows mis au format\n    table.rows = rowsCreate(content, table.parents).map(row =>\n      rowFormat(row, table.columns, table.callbacks)\n    )\n  })\n\n  // retourne un tableau avec les requêtes pour ajouter les nouveaux rows\n  const rowPromises = tables.reduce(\n    (promises, table) => [\n      ...promises,\n      ...table.rows.map(row => () => rowAdd(gss, table.worksheetId, row))\n    ],\n    []\n  )\n\n  // utilise une queue plutôt que Promise.all\n  // pour éviter de saturer l'API google\n  const rowsQueue = new PQueue({ concurrency: 15 })\n  await rowsQueue.addAll(rowPromises)\n\n  // converti le champs Id en id\n  const tablesWithId = tables.filter(w => w.columns.find(h => h === 'id'))\n\n  await Promise.all(\n    tablesWithId.map(async table => {\n      const cells = await cellsGet(gss, table.worksheetId, {\n        'min-row': 1,\n        'max-row': 1,\n        'min-col': 1,\n        'max-col': 1\n      })\n\n      await cellSet(cells[0], 'id')\n    })\n  )\n}\n\n// fonction récursive qui parcourt les 'elements' (p.e.: 'titres')\n// en descendant la chaîne de 'parents' (p.e.: ['demarches', 'etapes', 'points'])\n// et retourne un tableau avec les éléments à convertir en 'rows'\n// ceux dont le nom correspond à la dernière entrée parmi les parents\n// (p.e.: des 'points')\n// in:\n// - elements: un tableau avec les éléments extraits de la bdd\n// - parents: un tableau avec le nom des ancêtres ['grandParents', 'parents', 'elements']\n// out\n// - un tableau avec les éléments à convertir en 'rows'\nconst rowsCreate = (elements, parents) =>\n  // si il existe au moins un parent\n  parents && parents.length\n    ? // parcourt la liste d'éléments\n      elements.reduce(\n        (rows, element) =>\n          // si il existe un element dont le nom correspond au premier parent\n          element[parents[0]]\n            ? // recursion sur rowsCreate avec cet élément\n              // et la liste de parents moins le premier\n              [...rows, ...rowsCreate(element[parents[0]], parents.slice(1))]\n            : // sinon, retourne le résultat\n              rows,\n        []\n      )\n    : // si il n'y a pas de parent\n    // si elements est un tableau\n    Array.isArray(elements)\n    ? // le retourne tel quel\n      elements\n    : // sinon, l'insère dans un tableau\n      [elements]\n\nmodule.exports = jsonToSpreadsheet\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/_utils/json-to-spreadsheet.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 387,
    "kind": "function",
    "name": "rowsCreate",
    "memberof": "camino-api/tools/export/_utils/json-to-spreadsheet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/_utils/json-to-spreadsheet.js~rowsCreate",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/_utils/json-to-spreadsheet.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "params": [
      {
        "name": "elements",
        "types": [
          "*"
        ]
      },
      {
        "name": "parents",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 388,
    "kind": "function",
    "name": "jsonToSpreadsheet",
    "memberof": "camino-api/tools/export/_utils/json-to-spreadsheet.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/export/_utils/json-to-spreadsheet.js~jsonToSpreadsheet",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/export/_utils/json-to-spreadsheet.js",
    "importStyle": "jsonToSpreadsheet",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "spreadsheetId",
        "types": [
          "*"
        ]
      },
      {
        "name": "credentials",
        "types": [
          "*"
        ]
      },
      {
        "name": "tables",
        "types": [
          "*"
        ]
      },
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 389,
    "kind": "file",
    "name": "camino-api/tools/export/_utils/row-format.js",
    "content": "// formate un objet 'element' sous forme de 'row'\nconst decamelize = require('decamelize')\n\n// in\n// - element: un objet json extrait de la base de données source\n// - columns: les colonnes de la spreadsheet cible\n// - callbacks: un tableau avec les fonctions de transformation des données de certaines colonnes\n// out\n// - un objet 'row' avec les données formatées par colonnes\n//   prêt à être inséré dans une spreadsheet\n\nconst rowFormat = (element, columns, callbacks) =>\n  columns.reduce(\n    (row, column) =>\n      element[column]\n        ? Object.assign(row, {\n            // id est un mot clé réservé par google\n            // pour contourner cette limitation, on converti id en Id\n            [column === 'id' ? 'Id' : decamelize(column)]:\n              callbacks && Object.keys(callbacks).find(cb => cb === column)\n                ? callbacks[column](element[column])\n                : element[column]\n          })\n        : row,\n    {}\n  )\n\nmodule.exports = rowFormat\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/_utils/row-format.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 390,
    "kind": "function",
    "name": "rowFormat",
    "memberof": "camino-api/tools/export/_utils/row-format.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/_utils/row-format.js~rowFormat",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/export/_utils/row-format.js",
    "importStyle": "rowFormat",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "element",
        "types": [
          "*"
        ]
      },
      {
        "name": "columns",
        "types": [
          "*"
        ]
      },
      {
        "name": "callbacks",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 391,
    "kind": "file",
    "name": "camino-api/tools/export/_utils/spreadsheet-row-add.js",
    "content": "const GoogleSpreadsheet = require('google-spreadsheet')\nconst rowFormat = require('./row-format')\n\nconst {\n  gssUseServiceAccountAuth,\n  rowAdd\n} = require('./google-spreadsheet-promisify')\n\nconst spreadsheetRowAdd = async (\n  spreadsheetId,\n  credentials,\n  table,\n  content\n) => {\n  // instancie le constructeur\n  const gss = new GoogleSpreadsheet(spreadsheetId)\n\n  // authentification dans google\n  await gssUseServiceAccountAuth(gss, credentials)\n\n  const row = rowFormat(content, table.columns, table.callbacks)\n\n  await rowAdd(gss, 1, row)\n}\n\nmodule.exports = spreadsheetRowAdd\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/_utils/spreadsheet-row-add.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 392,
    "kind": "function",
    "name": "spreadsheetRowAdd",
    "memberof": "camino-api/tools/export/_utils/spreadsheet-row-add.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/export/_utils/spreadsheet-row-add.js~spreadsheetRowAdd",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/export/_utils/spreadsheet-row-add.js",
    "importStyle": "spreadsheetRowAdd",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "spreadsheetId",
        "types": [
          "*"
        ]
      },
      {
        "name": "credentials",
        "types": [
          "*"
        ]
      },
      {
        "name": "table",
        "types": [
          "*"
        ]
      },
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 393,
    "kind": "file",
    "name": "camino-api/tools/export/_utils/spreadsheet-row-update.js",
    "content": "const GoogleSpreadsheet = require('google-spreadsheet')\nconst rowFormat = require('./row-format')\n\nconst {\n  gssUseServiceAccountAuth,\n  rowsGet,\n  rowDelete,\n  rowAdd\n} = require('./google-spreadsheet-promisify')\n\nconst spreadsheetRowUpdate = async (\n  spreadsheetId,\n  credentials,\n  table,\n  content\n) => {\n  // instancie le constructeur\n  const gss = new GoogleSpreadsheet(spreadsheetId)\n\n  // authentification dans google\n  await gssUseServiceAccountAuth(gss, credentials)\n\n  const row = rowFormat(content, table.columns, table.callbacks)\n\n  const rows = await rowsGet(gss, 1, { query: `(id=${content.id})` })\n\n  if (rows[0]) {\n    await rowDelete(rows[0])\n  }\n\n  await rowAdd(gss, 1, row)\n}\n\nmodule.exports = spreadsheetRowUpdate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/_utils/spreadsheet-row-update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 394,
    "kind": "function",
    "name": "spreadsheetRowUpdate",
    "memberof": "camino-api/tools/export/_utils/spreadsheet-row-update.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/export/_utils/spreadsheet-row-update.js~spreadsheetRowUpdate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/export/_utils/spreadsheet-row-update.js",
    "importStyle": "spreadsheetRowUpdate",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "spreadsheetId",
        "types": [
          "*"
        ]
      },
      {
        "name": "credentials",
        "types": [
          "*"
        ]
      },
      {
        "name": "table",
        "types": [
          "*"
        ]
      },
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 395,
    "kind": "file",
    "name": "camino-api/tools/export/credentials.js",
    "content": "module.exports = {\n  type: 'service_account',\n  project_id: process.env.GOOGLE_PROJECT_ID,\n  private_key_id: process.env.GOOGLE_PRIVATE_KEY_ID,\n  private_key: process.env.GOOGLE_PRIVATE_KEY,\n  client_email: process.env.GOOGLE_CLIENT_EMAIL,\n  client_id: process.env.GOOGLE_CLIENT_ID,\n  auth_uri: 'https://accounts.google.com/o/oauth2/auth',\n  token_uri: 'https://accounts.google.com/o/oauth2/token',\n  auth_provider_x509_cert_url: 'https://www.googleapis.com/oauth2/v1/certs',\n  client_x509_cert_url: process.env.GOOGLE_CLIENT_X509_CERT_URL\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/credentials.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 396,
    "kind": "file",
    "name": "camino-api/tools/export/definitions.js",
    "content": "const { titresGet } = require('../../database/queries/titres')\nconst { utilisateursGet } = require('../../database/queries/utilisateurs')\nconst {\n  titresTravauxRapportsGet\n} = require('../../database/queries/titres-travaux')\n\nconst titresTables = require('./tables/titres')\nconst utilisateursTables = require('./tables/utilisateurs')\nconst titresTravauxRapportsTables = require('./tables/titres-travaux')\n\nconst titresCSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_EXPORT_TITRES_C\nconst titresFSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_EXPORT_TITRES_F\nconst titresGSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_EXPORT_TITRES_G\nconst titresHSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_EXPORT_TITRES_H\nconst titresMSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_EXPORT_TITRES_M\nconst titresRSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_EXPORT_TITRES_R\nconst titresSSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_EXPORT_TITRES_S\nconst titresWSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_EXPORT_TITRES_W\nconst utilisateursSpreadsheetId =\n  process.env.GOOGLE_SPREADSHEET_ID_EXPORT_UTILISATEURS\nconst titresTravauxRapportsSpreadsheetId =\n  process.env.GOOGLE_SPREADSHEET_ID_EXPORT_TITRES_TRAVAUX_RAPPORTS\n// const metasSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_EXPORT_METAS\n// const entreprisesSpreadsheetId =\n//   process.env.GOOGLE_SPREADSHEET_ID_EXPORT_ENTREPRISES\n// const administrationsSpreadsheetId =\n//   process.env.GOOGLE_SPREADSHEET_ID_EXPORT_ADMINISTRATIONS\n// const substancesSpreadsheetId =\n//   process.env.GOOGLE_SPREADSHEET_ID_EXPORT_SUBSTANCES\n\nconst titresFetch = domaineId =>\n  titresGet({\n    typeIds: undefined,\n    domaineIds: [domaineId],\n    statutIds: undefined,\n    substances: undefined,\n    noms: undefined\n  })\n\nconst utilisateursFetch = () =>\n  utilisateursGet({\n    noms: undefined,\n    entrepriseIds: undefined,\n    administrationIds: undefined,\n    permissionIds: undefined\n  })\n\nconst titresTravauxRapportsFetch = () => titresTravauxRapportsGet()\n\nconst definitions = [\n  {\n    name: 'utilisateurs',\n    spreadsheetId: utilisateursSpreadsheetId,\n    fetch: utilisateursFetch(),\n    tables: utilisateursTables\n  },\n  {\n    name: 'titres-c',\n    spreadsheetId: titresCSpreadsheetId,\n    fetch: titresFetch('c'),\n    tables: titresTables\n  },\n  {\n    name: 'titres-f',\n    spreadsheetId: titresFSpreadsheetId,\n    fetch: titresFetch('f'),\n    tables: titresTables\n  },\n  {\n    name: 'titres-g',\n    spreadsheetId: titresGSpreadsheetId,\n    fetch: titresFetch('g'),\n    tables: titresTables\n  },\n  {\n    name: 'titres-h',\n    spreadsheetId: titresHSpreadsheetId,\n    fetch: titresFetch('h'),\n    tables: titresTables\n  },\n  {\n    name: 'titres-m',\n    spreadsheetId: titresMSpreadsheetId,\n    fetch: titresFetch('m'),\n    tables: titresTables\n  },\n  {\n    name: 'titres-r',\n    spreadsheetId: titresRSpreadsheetId,\n    fetch: titresFetch('r'),\n    tables: titresTables\n  },\n  {\n    name: 'titres-s',\n    spreadsheetId: titresSSpreadsheetId,\n    fetch: titresFetch('s'),\n    tables: titresTables\n  },\n  {\n    name: 'titres-w',\n    spreadsheetId: titresWSpreadsheetId,\n    fetch: titresFetch('w'),\n    tables: titresTables\n  },\n  {\n    name: 'titres-travaux-rapports',\n    spreadsheetId: titresTravauxRapportsSpreadsheetId,\n    fetch: titresTravauxRapportsFetch(),\n    tables: titresTravauxRapportsTables\n  }\n]\n\nmodule.exports = definitions\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/definitions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 397,
    "kind": "variable",
    "name": "titresCSpreadsheetId",
    "memberof": "camino-api/tools/export/definitions.js",
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~titresCSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 398,
    "kind": "variable",
    "name": "titresFSpreadsheetId",
    "memberof": "camino-api/tools/export/definitions.js",
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~titresFSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 399,
    "kind": "variable",
    "name": "titresGSpreadsheetId",
    "memberof": "camino-api/tools/export/definitions.js",
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~titresGSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 400,
    "kind": "variable",
    "name": "titresHSpreadsheetId",
    "memberof": "camino-api/tools/export/definitions.js",
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~titresHSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 401,
    "kind": "variable",
    "name": "titresMSpreadsheetId",
    "memberof": "camino-api/tools/export/definitions.js",
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~titresMSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 402,
    "kind": "variable",
    "name": "titresRSpreadsheetId",
    "memberof": "camino-api/tools/export/definitions.js",
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~titresRSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 403,
    "kind": "variable",
    "name": "titresSSpreadsheetId",
    "memberof": "camino-api/tools/export/definitions.js",
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~titresSSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 404,
    "kind": "variable",
    "name": "titresWSpreadsheetId",
    "memberof": "camino-api/tools/export/definitions.js",
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~titresWSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 405,
    "kind": "variable",
    "name": "utilisateursSpreadsheetId",
    "memberof": "camino-api/tools/export/definitions.js",
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~utilisateursSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 406,
    "kind": "variable",
    "name": "titresTravauxRapportsSpreadsheetId",
    "memberof": "camino-api/tools/export/definitions.js",
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~titresTravauxRapportsSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 407,
    "kind": "function",
    "name": "titresFetch",
    "memberof": "camino-api/tools/export/definitions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~titresFetch",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "domaineId",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 408,
    "kind": "function",
    "name": "utilisateursFetch",
    "memberof": "camino-api/tools/export/definitions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~utilisateursFetch",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 409,
    "kind": "function",
    "name": "titresTravauxRapportsFetch",
    "memberof": "camino-api/tools/export/definitions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~titresTravauxRapportsFetch",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 410,
    "kind": "variable",
    "name": "definitions",
    "memberof": "camino-api/tools/export/definitions.js",
    "static": true,
    "longname": "camino-api/tools/export/definitions.js~definitions",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/export/definitions.js",
    "importStyle": "definitions",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 411,
    "kind": "file",
    "name": "camino-api/tools/export/index.js",
    "content": "require('dotenv').config()\nrequire('../../database/index')\nconst PQueue = require('p-queue')\nconst dbProcess = require('./_utils/db-process')\n\nconst definitions = require('./definitions')\n\nconst run = async () => {\n  // on utilise une queue plutôt que Promise.all\n  // pour ne pas surcharger l'API de google\n  const spreadSheetsPromises = definitions.map(definition => () =>\n    dbProcess(definition)\n  )\n  const spreadSheetsQueue = new PQueue({ concurrency: 1 })\n  await spreadSheetsQueue.addAll(spreadSheetsPromises)\n}\n\nrun()\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 412,
    "kind": "function",
    "name": "run",
    "memberof": "camino-api/tools/export/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/export/index.js~run",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 413,
    "kind": "file",
    "name": "camino-api/tools/export/tables/titres-travaux.js",
    "content": "// liste des tables\n// la colonne id si elle existe doit être en première position\n// car c'est un mot clé réservé par l'API google\n// (cf: _utils/json-to-spreadsheet.js)\nconst tables = [\n  {\n    name: 'titresTravauxRapports',\n    columns: ['id', 'titreId', 'date', 'confirmation', 'contenu'],\n    callbacks: {\n      contenu: v => JSON.stringify(v)\n    }\n  }\n]\n\nmodule.exports = tables\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/tables/titres-travaux.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 414,
    "kind": "variable",
    "name": "tables",
    "memberof": "camino-api/tools/export/tables/titres-travaux.js",
    "static": true,
    "longname": "camino-api/tools/export/tables/titres-travaux.js~tables",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/export/tables/titres-travaux.js",
    "importStyle": "tables",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 415,
    "kind": "file",
    "name": "camino-api/tools/export/tables/titres.js",
    "content": "const dateFormat = require('dateformat')\n\n// liste des tables\n// la colonne id si elle existe doit être en première position\n// car c'est un mot clé réservé par l'API google\n// (cf: _utils/json-to-spreadsheet.js)\nconst tables = [\n  {\n    name: 'titres',\n    columns: ['id', 'nom', 'typeId', 'domaineId', 'statutId', 'references'],\n    callbacks: {\n      references: v => JSON.stringify(v)\n    }\n  },\n  {\n    name: 'titresDemarches',\n    columns: ['id', 'typeId', 'titreId', 'statutId', 'ordre'],\n    parents: ['demarches']\n  },\n  {\n    name: 'titresPhases',\n    columns: ['titreDemarcheId', 'statutId', 'dateDebut', 'dateFin'],\n    parents: ['demarches', 'phase'],\n    callbacks: {\n      dateDebut: v => dateFormat(v, 'yyyy-mm-dd'),\n      dateFin: v => dateFormat(v, 'yyyy-mm-dd')\n    }\n  },\n  {\n    name: 'titresEtapes',\n    columns: [\n      'id',\n      'titreDemarcheId',\n      'typeId',\n      'statutId',\n      'ordre',\n      'date',\n      'dateDebut',\n      'duree',\n      'dateFin',\n      'surface',\n      'visas',\n      'engagement',\n      'engagementDevise',\n      'sourceIndisponible'\n    ],\n    parents: ['demarches', 'etapes'],\n    callbacks: {\n      dateDebut: v => dateFormat(v, 'yyyy-mm-dd'),\n      dateFin: v => dateFormat(v, 'yyyy-mm-dd'),\n      date: v => dateFormat(v, 'yyyy-mm-dd'),\n      visas: v => JSON.stringify(v)\n    }\n  },\n  {\n    name: 'titresPoints',\n    columns: [\n      'id',\n      'titreEtapeId',\n      'coordonnees',\n      'groupe',\n      'contour',\n      'point',\n      'nom',\n      'description',\n      'securite'\n    ],\n    parents: ['demarches', 'etapes', 'points'],\n    callbacks: {\n      coordonnees: v => `${v.x}, ${v.y}`\n    }\n  },\n  {\n    name: 'titresPointsReferences',\n    columns: ['id', 'titrePointId', 'systeme', 'coordonnees'],\n    parents: ['demarches', 'etapes', 'points', 'references'],\n    callbacks: {\n      coordonnees: v => `${v.x}, ${v.y}`\n    }\n  },\n  {\n    name: 'titresDocuments',\n    columns: [\n      'id',\n      'titreEtapeId',\n      'type',\n      'jorf',\n      'nor',\n      'nom',\n      'url',\n      'uri',\n      'fichier'\n    ],\n    parents: ['demarches', 'etapes', 'documents']\n  },\n  {\n    name: 'titresSubstances',\n    columns: ['titreEtapeId', 'substanceId', 'connexe', 'ordre'],\n    parents: ['demarches', 'etapes', 'titresSubstances']\n  },\n  {\n    name: 'titresTitulaires',\n    columns: ['titreEtapeId', 'entrepriseId'],\n    parents: ['demarches', 'etapes', 'titresTitulaires']\n  },\n  {\n    name: 'titresAmodiataires',\n    columns: ['titreEtapeId', 'entrepriseId'],\n    parents: ['demarches', 'etapes', 'titresAmodiataires']\n  },\n  {\n    name: 'titresUtilisateurs',\n    columns: ['titreEtapeId', 'utilisateurId'],\n    parents: ['demarches', 'etapes', 'titresUtilisateurs']\n  },\n  {\n    name: 'titresEmprises',\n    columns: ['titreEtapeId', 'empriseId'],\n    parents: ['demarches', 'etapes', 'titresEmprises']\n  },\n  {\n    name: 'titresErreurs',\n    columns: [\n      'titreEtapeId',\n      'date',\n      'dateDebut',\n      'dateFin',\n      'duree',\n      'surface',\n      'points',\n      'substances',\n      'titulaires',\n      'amodiataires',\n      'administrations'\n    ],\n    parents: ['demarches', 'etapes', 'erreurs']\n  }\n]\n\nmodule.exports = tables\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/tables/titres.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 416,
    "kind": "variable",
    "name": "tables",
    "memberof": "camino-api/tools/export/tables/titres.js",
    "static": true,
    "longname": "camino-api/tools/export/tables/titres.js~tables",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/export/tables/titres.js",
    "importStyle": "tables",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 417,
    "kind": "file",
    "name": "camino-api/tools/export/tables/utilisateurs.js",
    "content": "const utilisateursTables = [\n  {\n    name: 'utilisateurs',\n    columns: [\n      'id',\n      'email',\n      'motDePasse',\n      'nom',\n      'prenom',\n      'administrationId',\n      'entrepriseId',\n      'telephoneFixe',\n      'telephoneMobile',\n      'permissionId',\n      'preferences'\n    ],\n    callbacks: {\n      preferences: v => JSON.stringify(v)\n    }\n  }\n]\n\nmodule.exports = utilisateursTables\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/tables/utilisateurs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 418,
    "kind": "variable",
    "name": "utilisateursTables",
    "memberof": "camino-api/tools/export/tables/utilisateurs.js",
    "static": true,
    "longname": "camino-api/tools/export/tables/utilisateurs.js~utilisateursTables",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/export/tables/utilisateurs.js",
    "importStyle": "utilisateursTables",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 419,
    "kind": "file",
    "name": "camino-api/tools/export/titre-travaux-rapport.js",
    "content": "const credentials = require('./credentials')\nconst spreadsheetRowAdd = require('./_utils/spreadsheet-row-add')\nconst spreadsheetRowUpdate = require('./_utils/spreadsheet-row-update')\nconst tables = require('./tables/titres-travaux')\n\nconst titreTravauxRapportRowAdd = async content => {\n  const spreadsheetId =\n    process.env.GOOGLE_SPREADSHEET_ID_EXPORT_TITRES_TRAVAUX_RAPPORTS\n\n  await spreadsheetRowAdd(spreadsheetId, credentials, tables[0], content)\n}\n\nconst titreTravauxRapportRowUpdate = async content => {\n  const spreadsheetId =\n    process.env.GOOGLE_SPREADSHEET_ID_EXPORT_TITRES_TRAVAUX_RAPPORTS\n\n  try {\n    await spreadsheetRowUpdate(spreadsheetId, credentials, tables[0], content)\n  } catch (e) {\n    console.log(\"erreur lors de l'ajout d'une ligne dans la spreasheet\", e)\n  }\n}\n\nmodule.exports = { titreTravauxRapportRowAdd, titreTravauxRapportRowUpdate }\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/titre-travaux-rapport.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 420,
    "kind": "function",
    "name": "titreTravauxRapportRowAdd",
    "memberof": "camino-api/tools/export/titre-travaux-rapport.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/export/titre-travaux-rapport.js~titreTravauxRapportRowAdd",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/titre-travaux-rapport.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 421,
    "kind": "function",
    "name": "titreTravauxRapportRowUpdate",
    "memberof": "camino-api/tools/export/titre-travaux-rapport.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/export/titre-travaux-rapport.js~titreTravauxRapportRowUpdate",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/titre-travaux-rapport.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 422,
    "kind": "file",
    "name": "camino-api/tools/export/titres-travaux-rapports.js",
    "content": "require('dotenv').config()\nrequire('../../database/index')\nconst dbProcess = require('./_utils/db-process')\n\nconst definitions = require('./definitions')\nconst titresTravauxRapportsDefinition = definitions.find(\n  definition => definition.name === 'titres-travaux-rapports'\n)\n\nconst run = async () => {\n  const res = await dbProcess(titresTravauxRapportsDefinition)\n  console.log(res)\n  process.exit()\n}\n\nrun()\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/titres-travaux-rapports.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 423,
    "kind": "variable",
    "name": "titresTravauxRapportsDefinition",
    "memberof": "camino-api/tools/export/titres-travaux-rapports.js",
    "static": true,
    "longname": "camino-api/tools/export/titres-travaux-rapports.js~titresTravauxRapportsDefinition",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/titres-travaux-rapports.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 424,
    "kind": "function",
    "name": "run",
    "memberof": "camino-api/tools/export/titres-travaux-rapports.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/export/titres-travaux-rapports.js~run",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/titres-travaux-rapports.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 425,
    "kind": "file",
    "name": "camino-api/tools/export/utilisateurs.js",
    "content": "require('dotenv').config()\nrequire('../../database/index')\nconst dbProcess = require('./_utils/db-process')\nconst definitions = require('./definitions')\n\nconst utilisateursDefinition = definitions.find(\n  definition => definition.name === 'utilisateurs'\n)\n\nconst run = async () => {\n  const res = await dbProcess(utilisateursDefinition)\n  console.log(res)\n  process.exit()\n}\n\nrun()\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/export/utilisateurs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 426,
    "kind": "variable",
    "name": "utilisateursDefinition",
    "memberof": "camino-api/tools/export/utilisateurs.js",
    "static": true,
    "longname": "camino-api/tools/export/utilisateurs.js~utilisateursDefinition",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/utilisateurs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 427,
    "kind": "function",
    "name": "run",
    "memberof": "camino-api/tools/export/utilisateurs.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/export/utilisateurs.js~run",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/export/utilisateurs.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 428,
    "kind": "file",
    "name": "camino-api/tools/geo/index.js",
    "content": "// converti les coordoonnées géo\n\nconst proj4 = require('proj4')\n\nproj4.defs(\n  'EPSG:2972',\n  '+proj=utm +zone=22 +ellps=GRS80 +towgs84=2,2,-2,0,0,0,0 +units=m +no_defs'\n)\n\nproj4('EPSG:2972', 'EPSG:4326', [coord1, coord2])\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/geo/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 429,
    "kind": "file",
    "name": "camino-api/tools/import/_utils/_spreadsheet-to-json.js",
    "content": "const spreadSheetToJson = require('google-spreadsheet-to-json')\nconst credentials = require('../credentials.js')\nconst fileCreate = require('./file-create.js')\n\nmodule.exports = async (filePath, spreadsheetId, worksheet, cb) => {\n  try {\n    console.log(`Spreadsheet: ${filePath}`)\n    let json = await spreadSheetToJson({\n      spreadsheetId,\n      credentials,\n      worksheet\n    })\n\n    if (cb) {\n      json = cb(json)\n    }\n\n    const fileContent = JSON.stringify(json, null, 2)\n\n    await fileCreate(filePath, fileContent)\n  } catch (err) {\n    console.log(err)\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/import/_utils/_spreadsheet-to-json.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 430,
    "kind": "function",
    "name": "_spreadsheettojson",
    "memberof": "camino-api/tools/import/_utils/_spreadsheet-to-json.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/import/_utils/_spreadsheet-to-json.js~_spreadsheettojson",
    "access": "private",
    "export": true,
    "importPath": "camino-api/camino-api/tools/import/_utils/_spreadsheet-to-json.js",
    "importStyle": "_spreadsheettojson",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "filePath",
        "types": [
          "*"
        ]
      },
      {
        "name": "spreadsheetId",
        "types": [
          "*"
        ]
      },
      {
        "name": "worksheet",
        "types": [
          "*"
        ]
      },
      {
        "name": "cb",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 431,
    "kind": "file",
    "name": "camino-api/tools/import/_utils/file-create.js",
    "content": "const fs = require('fs-extra')\n\nmodule.exports = async (name, content) => {\n  try {\n    await fs.writeFile(name, content, 'utf8')\n    console.log('File:', name)\n  } catch (err) {\n    console.log('File: error', err)\n  }\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/import/_utils/file-create.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 432,
    "kind": "function",
    "name": "filecreate",
    "memberof": "camino-api/tools/import/_utils/file-create.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/import/_utils/file-create.js~filecreate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/import/_utils/file-create.js",
    "importStyle": "filecreate",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "content",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 433,
    "kind": "file",
    "name": "camino-api/tools/import/_utils/file-path-create.js",
    "content": "const path = require('path')\n\nconst filePathCreate = fileName =>\n  path.join(__dirname, `../../sources/${fileName.replace(/_/g, '-')}.json`)\n\nmodule.exports = filePathCreate\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/import/_utils/file-path-create.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 434,
    "kind": "function",
    "name": "filePathCreate",
    "memberof": "camino-api/tools/import/_utils/file-path-create.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/import/_utils/file-path-create.js~filePathCreate",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/import/_utils/file-path-create.js",
    "importStyle": "filePathCreate",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "fileName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 435,
    "kind": "file",
    "name": "camino-api/tools/import/credentials.js",
    "content": "module.exports = {\n  type: 'service_account',\n  project_id: process.env.GOOGLE_PROJECT_ID,\n  private_key_id: process.env.GOOGLE_PRIVATE_KEY_ID,\n  private_key: process.env.GOOGLE_PRIVATE_KEY,\n  client_email: process.env.GOOGLE_CLIENT_EMAIL,\n  client_id: process.env.GOOGLE_CLIENT_ID,\n  auth_uri: 'https://accounts.google.com/o/oauth2/auth',\n  token_uri: 'https://accounts.google.com/o/oauth2/token',\n  auth_provider_x509_cert_url: 'https://www.googleapis.com/oauth2/v1/certs',\n  client_x509_cert_url: process.env.GOOGLE_CLIENT_X509_CERT_URL\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/import/credentials.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 436,
    "kind": "file",
    "name": "camino-api/tools/import/index.js",
    "content": "require('dotenv').config()\nconst PQueue = require('p-queue')\nconst spreadsheetToJson = require('./_utils/_spreadsheet-to-json')\nconst filePathCreate = require('./_utils/file-path-create')\nconst fileCreate = require('./_utils/file-create.js')\n\nconst spreadsheets = require('./spreadsheets')\n\nconst run = async () => {\n  // on utilise une queue plutôt que Promise.all\n  // pour ne pas surcharger l'API de google\n  const spreadSheetsPromises = spreadsheets.map(s => () =>\n    spreadsheetsProcess(s)\n  )\n  const spreadSheetsQueue = new PQueue({ concurrency: 1 })\n  await spreadSheetsQueue.addAll(spreadSheetsPromises)\n}\n\nconst spreadsheetsProcess = async spreadsheet =>\n  Promise.all([\n    ...spreadsheet.tables.map(\n      table =>\n        spreadsheet.id\n          ? // si l'id de la spreadsheet est renseignée\n            spreadsheetToJson(\n              filePathCreate(\n                spreadsheet.prefixFileName\n                  ? `${spreadsheet.name}-${table.name}`\n                  : table.name\n              ),\n              spreadsheet.id,\n              table.name,\n              table.cb\n            )\n          : // si l'id est absente on créé un fichier vide\n            fileCreate(\n              filePathCreate(\n                spreadsheet.prefixFileName\n                  ? `${spreadsheet.name}-${table.name}`\n                  : table.name\n              ),\n              JSON.stringify([], null, 2)\n            )\n    )\n  ])\n\nrun()\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/import/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 437,
    "kind": "function",
    "name": "run",
    "memberof": "camino-api/tools/import/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/import/index.js~run",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 438,
    "kind": "function",
    "name": "spreadsheetsProcess",
    "memberof": "camino-api/tools/import/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/import/index.js~spreadsheetsProcess",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "spreadsheet",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 439,
    "kind": "file",
    "name": "camino-api/tools/import/spreadsheets.js",
    "content": "const titresCSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_TITRES_C\nconst titresFSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_TITRES_F\nconst titresGSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_TITRES_G\nconst titresHSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_TITRES_H\nconst titresMSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_TITRES_M\nconst titresM973SpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_TITRES_M973\nconst titresRSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_TITRES_R\nconst titresSSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_TITRES_S\nconst titresWSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_TITRES_W\nconst metasSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_METAS\nconst entreprisesSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_ENTREPRISES\nconst utilisateursSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_UTILISATEURS\nconst permissionsSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_PERMISSIONS\nconst administrationsSpreadsheetId =\n  process.env.GOOGLE_SPREADSHEET_ID_ADMINISTRATIONS\nconst substancesSpreadsheetId = process.env.GOOGLE_SPREADSHEET_ID_SUBSTANCES\nconst titresTravauxRapportsSpreadsheetId =\n  process.env.GOOGLE_SPREADSHEET_ID_TITRES_TRAVAUX_RAPPORTS\n\nconst jsonParse = value => json =>\n  json.map(j =>\n    Object.keys(j).reduce((res, cur) => {\n      res[cur] = cur === value ? JSON.parse(j[cur]) : j[cur]\n      return res\n    }, {})\n  )\n\nconst titresTables = [\n  { name: 'titres', cb: jsonParse('references') },\n  { name: 'titres_demarches' },\n  { name: 'titres_etapes', cb: jsonParse('visas') },\n  { name: 'titres_points' },\n  { name: 'titres_points_references' },\n  { name: 'titres_documents' },\n  { name: 'titres_substances' },\n  { name: 'titres_titulaires' },\n  { name: 'titres_amodiataires' },\n  { name: 'titres_emprises' },\n  { name: 'titres_erreurs' }\n]\n\nconst spreadSheets = [\n  {\n    name: 'titres-c',\n    id: titresCSpreadsheetId,\n    tables: titresTables,\n    prefixFileName: true\n  },\n  {\n    name: 'titres-f',\n    id: titresFSpreadsheetId,\n    tables: titresTables,\n    prefixFileName: true\n  },\n  {\n    name: 'titres-g',\n    id: titresGSpreadsheetId,\n    tables: titresTables,\n    prefixFileName: true\n  },\n  {\n    name: 'titres-h',\n    id: titresHSpreadsheetId,\n    tables: titresTables,\n    prefixFileName: true\n  },\n  {\n    name: 'titres-m',\n    id: titresMSpreadsheetId,\n    tables: titresTables,\n    prefixFileName: true\n  },\n  {\n    name: 'titres-m973',\n    id: titresM973SpreadsheetId,\n    tables: titresTables,\n    prefixFileName: true\n  },\n  {\n    name: 'titres-r',\n    id: titresRSpreadsheetId,\n    tables: titresTables,\n    prefixFileName: true\n  },\n  {\n    name: 'titres-s',\n    id: titresSSpreadsheetId,\n    tables: titresTables,\n    prefixFileName: true\n  },\n  {\n    name: 'titres-w',\n    id: titresWSpreadsheetId,\n    tables: titresTables,\n    prefixFileName: true\n  },\n  {\n    name: 'metas',\n    id: metasSpreadsheetId,\n    tables: [\n      { name: 'domaines' },\n      { name: 'types' },\n      { name: 'domaines__types' },\n      { name: 'statuts' },\n      { name: 'demarches_types' },\n      { name: 'demarches_statuts' },\n      { name: 'demarches_types__types' },\n      { name: 'demarches_types__demarches_statuts' },\n      { name: 'phases_statuts' },\n      { name: 'etapes_types' },\n      { name: 'etapes_statuts' },\n      { name: 'etapes_types__etapes_statuts' },\n      { name: 'demarches_types__etapes_types' },\n      { name: 'emprises' }\n    ]\n  },\n  {\n    name: 'entreprises',\n    id: entreprisesSpreadsheetId,\n    tables: [\n      { name: 'c' },\n      { name: 'f' },\n      { name: 'g' },\n      { name: 'h' },\n      { name: 'm' },\n      { name: 'm973' },\n      { name: 'r' },\n      { name: 's' },\n      { name: 'w' }\n    ],\n    prefixFileName: true\n  },\n  {\n    name: 'utilisateurs',\n    id: utilisateursSpreadsheetId,\n    tables: [{ name: 'utilisateurs', cb: jsonParse('preferences') }]\n  },\n  {\n    name: 'utilisateurs',\n    id: permissionsSpreadsheetId,\n    tables: [{ name: 'permissions' }]\n  },\n  {\n    name: 'administrations',\n    id: administrationsSpreadsheetId,\n    tables: [{ name: 'administrations' }]\n  },\n  {\n    name: 'substances',\n    id: substancesSpreadsheetId,\n    tables: [\n      { name: 'substances' },\n      { name: 'substances_legales' },\n      { name: 'substances_legales_codes' },\n      { name: 'substances__substances_legales' }\n    ]\n  },\n  {\n    name: 'titresTravauxRapports',\n    id: titresTravauxRapportsSpreadsheetId,\n    tables: [{ name: 'titres_travaux_rapports', cb: jsonParse('contenu') }]\n  }\n]\n\nmodule.exports = spreadSheets\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/import/spreadsheets.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 440,
    "kind": "variable",
    "name": "titresCSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~titresCSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 441,
    "kind": "variable",
    "name": "titresFSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~titresFSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 442,
    "kind": "variable",
    "name": "titresGSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~titresGSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 443,
    "kind": "variable",
    "name": "titresHSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~titresHSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 444,
    "kind": "variable",
    "name": "titresMSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~titresMSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 445,
    "kind": "variable",
    "name": "titresM973SpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~titresM973SpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 446,
    "kind": "variable",
    "name": "titresRSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~titresRSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 447,
    "kind": "variable",
    "name": "titresSSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~titresSSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 448,
    "kind": "variable",
    "name": "titresWSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~titresWSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 449,
    "kind": "variable",
    "name": "metasSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~metasSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 450,
    "kind": "variable",
    "name": "entreprisesSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~entreprisesSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 451,
    "kind": "variable",
    "name": "utilisateursSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~utilisateursSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 452,
    "kind": "variable",
    "name": "permissionsSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~permissionsSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 453,
    "kind": "variable",
    "name": "administrationsSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~administrationsSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 454,
    "kind": "variable",
    "name": "substancesSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~substancesSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 455,
    "kind": "variable",
    "name": "titresTravauxRapportsSpreadsheetId",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~titresTravauxRapportsSpreadsheetId",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 456,
    "kind": "function",
    "name": "jsonParse",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~jsonParse",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 457,
    "kind": "variable",
    "name": "titresTables",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~titresTables",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 458,
    "kind": "variable",
    "name": "spreadSheets",
    "memberof": "camino-api/tools/import/spreadsheets.js",
    "static": true,
    "longname": "camino-api/tools/import/spreadsheets.js~spreadSheets",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/import/spreadsheets.js",
    "importStyle": "spreadSheets",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 459,
    "kind": "file",
    "name": "camino-api/tools/knex/config.js",
    "content": "require('dotenv').config({ path: '../../.env' })\nconst { knexSnakeCaseMappers } = require('objection')\n\nconst connection = {\n  host: process.env.PGHOST,\n  port: process.env.PGPORT,\n  database: process.env.PGDATABASE,\n  user: process.env.PGUSER,\n  password: process.env.PGPASSWORD\n}\n\nconst knexConfig = {\n  client: 'pg',\n  connection,\n  migrations: {\n    directory: './migrations'\n  },\n  seeds: {\n    directory: './seeds'\n  },\n  ...knexSnakeCaseMappers()\n}\n\nmodule.exports = knexConfig\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 460,
    "kind": "variable",
    "name": "connection",
    "memberof": "camino-api/tools/knex/config.js",
    "static": true,
    "longname": "camino-api/tools/knex/config.js~connection",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/knex/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"host\": *, \"port\": *, \"database\": *, \"user\": *, \"password\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 461,
    "kind": "variable",
    "name": "knexConfig",
    "memberof": "camino-api/tools/knex/config.js",
    "static": true,
    "longname": "camino-api/tools/knex/config.js~knexConfig",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/config.js",
    "importStyle": "knexConfig",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "{\"client\": string, \"connection\": *, \"migrations\": *, \"seeds\": *, ...undefined: Object}"
      ]
    }
  },
  {
    "__docId__": 462,
    "kind": "file",
    "name": "camino-api/tools/knex/index.js",
    "content": "const Knex = require('knex')\nconst knexConfig = require('./knex')\nconst knex = Knex(knexConfig)\nconst chalk = require('chalk')\n\nconst run = new Promise((resolve, reject) => {\n  resolve()\n})\n\nconst exit = (text) => {\n  if (text instanceof Error) {\n    console.error(chalk.red(text.stack))\n  } else {\n    console.error(chalk.red(text))\n  }\n\n  process.exit(1)\n}\n\nrun\n  .then(() => {\n    console.log('Rollback')\n    return knex.migrate\n      .rollback()\n      .spread((batchNo, log) => {\n        if (log.length === 0) {\n          console.log(chalk.cyan('Already at the base migration'))\n        }\n\n        console.log(\n          chalk.green(\n            `Batch ${batchNo} rolled back: ${log.length} migrations \\n`\n          ) + chalk.cyan(log.join('\\n'))\n        )\n      })\n      .catch(exit)\n  })\n  .then(() => {\n    console.log('Migrate')\n    return knex.migrate\n      .latest()\n      .spread((batchNo, log) => {\n        if (log.length === 0) {\n          console.log(chalk.cyan('Already up to date'))\n        }\n\n        console.log(\n          chalk.green(`Batch ${batchNo} run: ${log.length} migrations \\n`) +\n            chalk.cyan(log.join('\\n'))\n        )\n      })\n      .catch(exit)\n  })\n  .then(() => {\n    console.log('Seed')\n    return knex.seed\n      .run()\n      .spread(log => {\n        if (log.length === 0) {\n          console.log(chalk.cyan('No seed files exist'))\n        }\n\n        console.log(\n          chalk.green(\n            `Ran ${log.length} seed files \\n${chalk.cyan(log.join('\\n'))}`\n          )\n        )\n      })\n      .catch(exit)\n  })\n  .then(() => {\n    console.log('Migrations terminées')\n    process.exit()\n  })\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 463,
    "kind": "variable",
    "name": "knex",
    "memberof": "camino-api/tools/knex/index.js",
    "static": true,
    "longname": "camino-api/tools/knex/index.js~knex",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/knex/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 464,
    "kind": "variable",
    "name": "run",
    "memberof": "camino-api/tools/knex/index.js",
    "static": true,
    "longname": "camino-api/tools/knex/index.js~run",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/knex/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 465,
    "kind": "function",
    "name": "exit",
    "memberof": "camino-api/tools/knex/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/index.js~exit",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/knex/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 466,
    "kind": "file",
    "name": "camino-api/tools/knex/knex.js",
    "content": "require('dotenv').config()\nconst { knexSnakeCaseMappers } = require('objection')\n\nconst connection = {\n  host: process.env.PGHOST,\n  port: process.env.PGPORT,\n  database: process.env.PGDATABASE,\n  user: process.env.PGUSER,\n  password: process.env.PGPASSWORD\n}\n\nconst knexConfig = {\n  client: 'pg',\n  connection,\n  migrations: {\n    directory: './tools/knex/migrations'\n  },\n  seeds: {\n    directory: './tools/knex/seeds'\n  },\n  ...knexSnakeCaseMappers()\n}\n\nmodule.exports = knexConfig\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/knex.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 467,
    "kind": "variable",
    "name": "connection",
    "memberof": "camino-api/tools/knex/knex.js",
    "static": true,
    "longname": "camino-api/tools/knex/knex.js~connection",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/knex/knex.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"host\": *, \"port\": *, \"database\": *, \"user\": *, \"password\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 468,
    "kind": "variable",
    "name": "knexConfig",
    "memberof": "camino-api/tools/knex/knex.js",
    "static": true,
    "longname": "camino-api/tools/knex/knex.js~knexConfig",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/knex.js",
    "importStyle": "knexConfig",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "{\"client\": string, \"connection\": *, \"migrations\": *, \"seeds\": *, ...undefined: Object}"
      ]
    }
  },
  {
    "__docId__": 469,
    "kind": "file",
    "name": "camino-api/tools/knex/migrations/20180521134020_domaines_types_statuts.js",
    "content": "/**\r\n * création des tables 'metas' de la base de données\r\n */\r\n\r\nexports.up = knex => {\r\n  return knex.schema\r\n    .createTable('domaines', table => {\r\n      table.string('id', 1).primary()\r\n      table.string('nom').notNullable()\r\n      table.integer('ordre')\r\n    })\r\n    .createTable('types', table => {\r\n      table.string('id', 3).primary()\r\n      table.string('nom').notNullable()\r\n    })\r\n    .createTable('domaines__types', table => {\r\n      table\r\n        .string('domaineId', 1)\r\n        .references('domaines.id')\r\n        .notNullable()\r\n      table\r\n        .string('typeId', 3)\r\n        .references('types.id')\r\n        .notNullable()\r\n      table.boolean('archive')\r\n      table.primary(['domaineId', 'typeId'])\r\n    })\r\n    .createTable('emprises', table => {\r\n      table.string('id', 3).primary()\r\n      table.string('nom').notNullable()\r\n    })\r\n    .createTable('statuts', table => {\r\n      table.string('id', 3).primary()\r\n      table.string('nom', 32).notNullable()\r\n      table.string('couleur', 16).notNullable()\r\n    })\r\n}\r\n\r\nexports.down = knex => {\r\n  return knex.schema\r\n    .dropTable('domaines__types')\r\n    .dropTable('domaines')\r\n    .dropTable('types')\r\n    .dropTable('statuts')\r\n    .dropTable('emprises')\r\n}\r\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/migrations/20180521134020_domaines_types_statuts.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 470,
    "kind": "function",
    "name": "up",
    "memberof": "camino-api/tools/knex/migrations/20180521134020_domaines_types_statuts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180521134020_domaines_types_statuts.js~up",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180521134020_domaines_types_statuts.js",
    "importStyle": "{up}",
    "description": "création des tables 'metas' de la base de données",
    "lineNumber": 5,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 471,
    "kind": "function",
    "name": "down",
    "memberof": "camino-api/tools/knex/migrations/20180521134020_domaines_types_statuts.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180521134020_domaines_types_statuts.js~down",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180521134020_domaines_types_statuts.js",
    "importStyle": "{down}",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 472,
    "kind": "file",
    "name": "camino-api/tools/knex/migrations/20180521154020_demarches_etapes.js",
    "content": "exports.up = knex => {\r\n  return knex.schema\r\n    .createTable('demarchesTypes', table => {\r\n      table.string('id', 3).primary()\r\n      table.string('nom').notNullable()\r\n      table.integer('ordre')\r\n      table.boolean('duree')\r\n      table.boolean('points')\r\n      table.boolean('substances')\r\n      table.boolean('titulaires')\r\n      table.boolean('renouvelable')\r\n      table.boolean('exception')\r\n    })\r\n    .createTable('demarchesTypes__types', table => {\r\n      table\r\n        .string('typeId', 3)\r\n        .references('types.id')\r\n        .notNullable()\r\n      table\r\n        .string('demarcheTypeId', 3)\r\n        .references('demarchesTypes.id')\r\n        .notNullable()\r\n      table.integer('dureeMax')\r\n      table.boolean('acceptationImplicite')\r\n      table.string('delaiImplicite')\r\n      table.string('delaiRecours')\r\n      table.string('legalRef')\r\n      table.string('legalLien')\r\n      table.date('dateDebut')\r\n      table.date('dateFin')\r\n      table.primary(['demarcheTypeId', 'typeId'])\r\n    })\r\n    .createTable('demarchesStatuts', table => {\r\n      table.string('id', 3).primary()\r\n      table.string('nom', 32).notNullable()\r\n      table.string('couleur', 16).notNullable()\r\n    })\r\n    .createTable('demarchesTypes__demarchesStatuts', table => {\r\n      table\r\n        .string('demarcheTypeId', 3)\r\n        .references('demarchesTypes.id')\r\n        .notNullable()\r\n      table\r\n        .string('demarcheStatutId', 3)\r\n        .references('demarchesStatuts.id')\r\n        .notNullable()\r\n      table.integer('ordre')\r\n      table.primary(['demarcheTypeId', 'demarcheStatutId'])\r\n    })\r\n    .createTable('phasesStatuts', table => {\r\n      table.string('id', 3).primary()\r\n      table.string('nom', 32).notNullable()\r\n      table.string('couleur', 16).notNullable()\r\n    })\r\n    .createTable('etapesTypes', table => {\r\n      table.string('id', 3).primary()\r\n      table.string('nom', 128)\r\n      table.boolean('acceptationAuto')\r\n      table.string('legalRef')\r\n      table.string('legalLien')\r\n      table.date('dateDebut')\r\n      table.date('dateFin')\r\n    })\r\n    .createTable('demarchesTypes__etapesTypes', table => {\r\n      table\r\n        .string('demarcheTypeId', 7)\r\n        .references('demarchesTypes.id')\r\n        .notNullable()\r\n      table\r\n        .string('etapeTypeId', 3)\r\n        .references('etapesTypes.id')\r\n        .notNullable()\r\n      table\r\n        .string('typeId', 3)\r\n        .references('types.id')\r\n        .notNullable()\r\n      table.integer('ordre')\r\n      table.primary(['demarcheTypeId', 'etapeTypeId', 'typeId'])\r\n    })\r\n    .createTable('etapesStatuts', table => {\r\n      table.string('id', 3).primary()\r\n      table.string('nom', 32).notNullable()\r\n      table.string('couleur', 16).notNullable()\r\n    })\r\n    .createTable('etapesTypes__etapesStatuts', table => {\r\n      table\r\n        .string('etapeTypeId', 7)\r\n        .references('etapesTypes.id')\r\n        .notNullable()\r\n      table\r\n        .string('etapeStatutId', 3)\r\n        .references('etapesStatuts.id')\r\n        .notNullable()\r\n      table.integer('ordre')\r\n      table.primary(['etapeTypeId', 'etapeStatutId'])\r\n    })\r\n}\r\n\r\nexports.down = knex => {\r\n  return knex.schema\r\n    .dropTable('etapesTypes__etapesStatuts')\r\n    .dropTable('etapesStatuts')\r\n    .dropTable('demarchesTypes__etapesTypes')\r\n    .dropTable('etapesTypes')\r\n    .dropTable('demarchesTypes__demarchesStatuts')\r\n    .dropTable('demarchesStatuts')\r\n    .dropTable('demarchesTypes__types')\r\n    .dropTable('demarchesTypes')\r\n    .dropTable('phasesStatuts')\r\n}\r\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/migrations/20180521154020_demarches_etapes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 473,
    "kind": "function",
    "name": "up",
    "memberof": "camino-api/tools/knex/migrations/20180521154020_demarches_etapes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180521154020_demarches_etapes.js~up",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180521154020_demarches_etapes.js",
    "importStyle": "{up}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 474,
    "kind": "function",
    "name": "down",
    "memberof": "camino-api/tools/knex/migrations/20180521154020_demarches_etapes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180521154020_demarches_etapes.js~down",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180521154020_demarches_etapes.js",
    "importStyle": "{down}",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 475,
    "kind": "file",
    "name": "camino-api/tools/knex/migrations/20180521162125_substances.js",
    "content": "exports.up = knex => {\r\n  return knex.schema\r\n    .createTable('substancesLegalesCodes', table => {\r\n      table.string('id').primary()\r\n      table.string('nom').notNullable()\r\n      table.string('description')\r\n      table.string('lien').notNullable()\r\n    })\r\n    .createTable('substancesLegales', table => {\r\n      table.string('id').primary()\r\n      table.string('nom').notNullable()\r\n      table\r\n        .string('domaineId', 1)\r\n        .notNullable()\r\n        .references('domaines.id')\r\n      table.string('description')\r\n      table\r\n        .string('substanceLegaleCodeId')\r\n        .references('substancesLegalesCodes.id')\r\n        .notNullable()\r\n    })\r\n    .createTable('substances', table => {\r\n      table.string('id', 4).primary()\r\n      table.string('nom').notNullable()\r\n      table.string('symbole')\r\n      table.integer('gerep')\r\n      table.string('description', 2048)\r\n    })\r\n    .createTable('substances__substancesLegales', table => {\r\n      table\r\n        .string('substanceId')\r\n        .references('substances.id')\r\n        .notNullable()\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('substanceLegaleId')\r\n        .references('substancesLegales.id')\r\n        .notNullable()\r\n      table.primary(['substanceId', 'substanceLegaleId'])\r\n    })\r\n}\r\n\r\nexports.down = knex => {\r\n  return knex.schema\r\n    .dropTable('substances__substancesLegales')\r\n    .dropTable('substances')\r\n    .dropTable('substancesLegales')\r\n    .dropTable('substancesLegalesCodes')\r\n}\r\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/migrations/20180521162125_substances.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 476,
    "kind": "function",
    "name": "up",
    "memberof": "camino-api/tools/knex/migrations/20180521162125_substances.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180521162125_substances.js~up",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180521162125_substances.js",
    "importStyle": "{up}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 477,
    "kind": "function",
    "name": "down",
    "memberof": "camino-api/tools/knex/migrations/20180521162125_substances.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180521162125_substances.js~down",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180521162125_substances.js",
    "importStyle": "{down}",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 478,
    "kind": "file",
    "name": "camino-api/tools/knex/migrations/20180521162130_repertoire.js",
    "content": "exports.up = knex => {\r\n  return knex.schema\r\n    .createTable('entreprises', table => {\r\n      table.string('id', 64).primary()\r\n      table.string('nom')\r\n      table.string('raisonSociale')\r\n      table.string('paysId')\r\n      table.string('legalSiren')\r\n      table.string('legalEtranger')\r\n      table.string('legalForme')\r\n      table.string('voieNumero')\r\n      table.string('voieType')\r\n      table.string('voieNom')\r\n      table.string('adresseComplement')\r\n      table.string('codePostal')\r\n      table.string('ville')\r\n      table.string('cedex')\r\n      table.string('localite')\r\n      table.string('insee')\r\n      table.string('url')\r\n      table.string('email')\r\n      table.string('telephone')\r\n    })\r\n    .createTable('administrations', table => {\r\n      table.string('id', 64).primary()\r\n      table.string('nom').notNullable()\r\n      table.string('service')\r\n      table.string('site')\r\n      table.string('email')\r\n      table.string('telephone')\r\n      table.string('adresse1')\r\n      table.string('adresse2')\r\n      table.string('ville')\r\n      table.string('codePostal')\r\n      table.string('cedex')\r\n    })\r\n    .createTable('permissions', table => {\r\n      table.string('id', 12).primary()\r\n      table.string('nom').notNullable()\r\n      table.integer('ordre')\r\n    })\r\n    .createTable('utilisateurs', table => {\r\n      table.string('id').primary()\r\n      table.string('email').notNullable()\r\n      table.string('motDePasse').notNullable()\r\n      table.string('nom')\r\n      table.string('prenom')\r\n      table\r\n        .string('administrationId', 64)\r\n        .references('administrations.id')\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('entrepriseId', 64)\r\n        .references('entreprises.id')\r\n        .onDelete('CASCADE')\r\n      table.string('telephoneFixe')\r\n      table.string('telephoneMobile')\r\n      table\r\n        .string('permissionId', 12)\r\n        .references('permissions.id')\r\n        .notNullable()\r\n        .onDelete('CASCADE')\r\n      table.json('preferences')\r\n    })\r\n}\r\n\r\nexports.down = knex => {\r\n  return knex.schema\r\n    .dropTable('utilisateurs')\r\n    .dropTable('permissions')\r\n    .dropTable('entreprises')\r\n    .dropTable('administrations')\r\n}\r\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/migrations/20180521162130_repertoire.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 479,
    "kind": "function",
    "name": "up",
    "memberof": "camino-api/tools/knex/migrations/20180521162130_repertoire.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180521162130_repertoire.js~up",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180521162130_repertoire.js",
    "importStyle": "{up}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 480,
    "kind": "function",
    "name": "down",
    "memberof": "camino-api/tools/knex/migrations/20180521162130_repertoire.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180521162130_repertoire.js~down",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180521162130_repertoire.js",
    "importStyle": "{down}",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 481,
    "kind": "file",
    "name": "camino-api/tools/knex/migrations/20180521171034_titres.js",
    "content": "exports.up = knex => {\r\n  return knex.schema.createTable('titres', table => {\r\n    table.string('id', 128).primary()\r\n    table.string('nom').notNullable()\r\n    table.string('typeId', 3).notNullable()\r\n    table.string('domaineId', 1).notNullable()\r\n    table.string('statutId', 3).notNullable()\r\n    table.json('references')\r\n  })\r\n}\r\n\r\nexports.down = knex => {\r\n  return knex.schema.dropTable('titres')\r\n}\r\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/migrations/20180521171034_titres.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 482,
    "kind": "function",
    "name": "up",
    "memberof": "camino-api/tools/knex/migrations/20180521171034_titres.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180521171034_titres.js~up",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180521171034_titres.js",
    "importStyle": "{up}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 483,
    "kind": "function",
    "name": "down",
    "memberof": "camino-api/tools/knex/migrations/20180521171034_titres.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180521171034_titres.js~down",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180521171034_titres.js",
    "importStyle": "{down}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 484,
    "kind": "file",
    "name": "camino-api/tools/knex/migrations/20180522134857_titres_demarches_etapes.js",
    "content": "exports.up = knex => {\r\n  return knex.schema\r\n    .createTable('titresDemarches', table => {\r\n      table.string('id', 128).primary()\r\n      table\r\n        .string('titreId', 128)\r\n        .references('titres.id')\r\n        .notNullable()\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('typeId', 3)\r\n        .notNullable()\r\n        .references('demarchesTypes.id')\r\n      table\r\n        .string('statutId', 3)\r\n        .notNullable()\r\n        .references('demarchesStatuts.id')\r\n      table.integer('ordre')\r\n      table.string('annulationDemarcheId', 128).references('id')\r\n    })\r\n    .createTable('titresPhases', table => {\r\n      table\r\n        .string('titreDemarcheId', 128)\r\n        .primary()\r\n        .references('titresDemarches.id')\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('statutId', 3)\r\n        .notNullable()\r\n        .references('phasesStatuts.id')\r\n      table.date('dateDebut')\r\n      table.date('dateFin')\r\n    })\r\n    .createTable('titresEtapes', table => {\r\n      table.string('id', 128).primary()\r\n      table\r\n        .string('titreDemarcheId', 128)\r\n        .references('titresDemarches.id')\r\n        .notNullable()\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('typeId', 3)\r\n        .notNullable()\r\n        .references('etapesTypes.id')\r\n      table\r\n        .string('statutId', 3)\r\n        .notNullable()\r\n        .references('etapesStatuts.id')\r\n      table.integer('ordre')\r\n      table.date('date').notNullable()\r\n      table.date('dateDebut')\r\n      table.date('dateFin')\r\n      table.integer('duree')\r\n      table.float('surface')\r\n      table.float('volume')\r\n      table.string('volumeUnite')\r\n      table.specificType('visas', 'text[]')\r\n      table.float('engagement')\r\n      table.string('engagementDevise')\r\n      table.boolean('sourceIndisponible')\r\n    })\r\n    .alterTable('titres', table => {\r\n      table\r\n        .string('pointsTitreEtapeId', 128)\r\n        .references('titresEtapes.id')\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('titulairesTitreEtapeId', 128)\r\n        .references('titresEtapes.id')\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('amodiatairesTitreEtapeId', 128)\r\n        .references('titresEtapes.id')\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('administrationsTitreEtapeId', 128)\r\n        .references('titresEtapes.id')\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('surfaceTitreEtapeId', 128)\r\n        .references('titresEtapes.id')\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('volumeTitreEtapeId', 128)\r\n        .references('titresEtapes.id')\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('substancesTitreEtapeId', 128)\r\n        .references('titresEtapes.id')\r\n        .onDelete('CASCADE')\r\n    })\r\n}\r\n\r\nexports.down = knex => {\r\n  return knex.schema\r\n    .alterTable('titres', table => {\r\n      table.dropColumn('substancesTitreEtapeId')\r\n      table.dropColumn('pointsTitreEtapeId')\r\n      table.dropColumn('titulairesTitreEtapeId')\r\n      table.dropColumn('amodiatairesTitreEtapeId')\r\n      table.dropColumn('administrationsTitreEtapeId')\r\n      table.dropColumn('surfaceTitreEtapeId')\r\n      table.dropColumn('volumeTitreEtapeId')\r\n    })\r\n    .dropTable('titresEtapes')\r\n    .dropTable('titresPhases')\r\n    .dropTable('titresDemarches')\r\n}\r\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/migrations/20180522134857_titres_demarches_etapes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 485,
    "kind": "function",
    "name": "up",
    "memberof": "camino-api/tools/knex/migrations/20180522134857_titres_demarches_etapes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180522134857_titres_demarches_etapes.js~up",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180522134857_titres_demarches_etapes.js",
    "importStyle": "{up}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 486,
    "kind": "function",
    "name": "down",
    "memberof": "camino-api/tools/knex/migrations/20180522134857_titres_demarches_etapes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180522134857_titres_demarches_etapes.js~down",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180522134857_titres_demarches_etapes.js",
    "importStyle": "{down}",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 487,
    "kind": "file",
    "name": "camino-api/tools/knex/migrations/20180522174715_titres_etapes_substances_emprises.js",
    "content": "exports.up = (knex, Promise) => {\r\n  return knex.schema\r\n    .createTable('titresSubstances', table => {\r\n      table\r\n        .string('titreEtapeId', 128)\r\n        .references('titresEtapes.id')\r\n        .notNullable()\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('substanceId', 4)\r\n        .references('substances.id')\r\n        .notNullable()\r\n      table.boolean('connexe')\r\n      table.integer('ordre')\r\n      table.primary(['titreEtapeId', 'substanceId'])\r\n    })\r\n    .createTable('titresEmprises', table => {\r\n      table\r\n        .string('titreEtapeId', 128)\r\n        .notNullable()\r\n        .references('titresEtapes.id')\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('empriseId', 3)\r\n        .notNullable()\r\n        .references('emprises.id')\r\n      table.primary(['titreEtapeId', 'empriseId'])\r\n    })\r\n}\r\n\r\nexports.down = (knex, Promise) => {\r\n  return knex.schema.dropTable('titresSubstances').dropTable('titresEmprises')\r\n}\r\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/migrations/20180522174715_titres_etapes_substances_emprises.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 488,
    "kind": "function",
    "name": "up",
    "memberof": "camino-api/tools/knex/migrations/20180522174715_titres_etapes_substances_emprises.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180522174715_titres_etapes_substances_emprises.js~up",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180522174715_titres_etapes_substances_emprises.js",
    "importStyle": "{up}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      },
      {
        "name": "Promise",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 489,
    "kind": "function",
    "name": "down",
    "memberof": "camino-api/tools/knex/migrations/20180522174715_titres_etapes_substances_emprises.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180522174715_titres_etapes_substances_emprises.js~down",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180522174715_titres_etapes_substances_emprises.js",
    "importStyle": "{down}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      },
      {
        "name": "Promise",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 490,
    "kind": "file",
    "name": "camino-api/tools/knex/migrations/20180522174720_titres_etapes_utilisateurs_titulaires_amodiataires_administrations.js",
    "content": "exports.up = (knex, Promise) => {\r\n  return knex.schema\r\n    .createTable('titresTitulaires', table => {\r\n      table\r\n        .string('titreEtapeId', 128)\r\n        .references('titresEtapes.id')\r\n        .notNullable()\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('entrepriseId', 64)\r\n        .references('entreprises.id')\r\n        .notNullable()\r\n      table.primary(['titreEtapeId', 'entrepriseId'])\r\n    })\r\n    .createTable('titres_amodiataires', table => {\r\n      table\r\n        .string('titreEtapeId', 128)\r\n        .references('titresEtapes.id')\r\n        .notNullable()\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('entrepriseId', 64)\r\n        .references('entreprises.id')\r\n        .notNullable()\r\n      table.primary(['titreEtapeId', 'entrepriseId'])\r\n    })\r\n    .createTable('titres_administrations', table => {\r\n      table\r\n        .string('titreEtapeId', 128)\r\n        .references('titresEtapes.id')\r\n        .notNullable()\r\n        .onDelete('CASCADE')\r\n      table\r\n        .string('administrationId', 4)\r\n        .references('administrations.id')\r\n        .notNullable()\r\n      table.primary(['titreEtapeId', 'administrationId'])\r\n    })\r\n}\r\n\r\nexports.down = (knex, Promise) => {\r\n  return knex.schema\r\n    .dropTable('titresAdministrations')\r\n    .dropTable('titresAmodiataires')\r\n    .dropTable('titresTitulaires')\r\n}\r\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/migrations/20180522174720_titres_etapes_utilisateurs_titulaires_amodiataires_administrations.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 491,
    "kind": "function",
    "name": "up",
    "memberof": "camino-api/tools/knex/migrations/20180522174720_titres_etapes_utilisateurs_titulaires_amodiataires_administrations.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180522174720_titres_etapes_utilisateurs_titulaires_amodiataires_administrations.js~up",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180522174720_titres_etapes_utilisateurs_titulaires_amodiataires_administrations.js",
    "importStyle": "{up}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      },
      {
        "name": "Promise",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 492,
    "kind": "function",
    "name": "down",
    "memberof": "camino-api/tools/knex/migrations/20180522174720_titres_etapes_utilisateurs_titulaires_amodiataires_administrations.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180522174720_titres_etapes_utilisateurs_titulaires_amodiataires_administrations.js~down",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180522174720_titres_etapes_utilisateurs_titulaires_amodiataires_administrations.js",
    "importStyle": "{down}",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      },
      {
        "name": "Promise",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 493,
    "kind": "file",
    "name": "camino-api/tools/knex/migrations/20180522232605_titres_etapes_points.js",
    "content": "exports.up = knex => {\r\n  return knex.schema\r\n    .createTable('titresPoints', table => {\r\n      table.string('id').primary()\r\n      table\r\n        .string('titreEtapeId', 128)\r\n        .references('titresEtapes.id')\r\n        .notNullable()\r\n        .onDelete('CASCADE')\r\n      table.specificType('coordonnees', 'POINT').notNullable()\r\n      table.integer('groupe').notNullable()\r\n      table.integer('contour').notNullable()\r\n      table.integer('point').notNullable()\r\n      table.string('nom').notNullable()\r\n      table.string('description')\r\n      table.boolean('securite')\r\n    })\r\n    .createTable('titresPointsReferences', table => {\r\n      table.string('id').primary()\r\n      table\r\n        .string('titrePointId')\r\n        .references('titresPoints.id')\r\n        .onDelete('CASCADE')\r\n      table.string('systeme', 128).notNullable()\r\n      table.specificType('coordonnees', 'POINT').notNullable()\r\n    })\r\n}\r\n\r\nexports.down = knex => {\r\n  return knex.schema\r\n    .dropTable('titresPointsReferences')\r\n    .dropTable('titresPoints')\r\n}\r\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/migrations/20180522232605_titres_etapes_points.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 494,
    "kind": "function",
    "name": "up",
    "memberof": "camino-api/tools/knex/migrations/20180522232605_titres_etapes_points.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180522232605_titres_etapes_points.js~up",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180522232605_titres_etapes_points.js",
    "importStyle": "{up}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 495,
    "kind": "function",
    "name": "down",
    "memberof": "camino-api/tools/knex/migrations/20180522232605_titres_etapes_points.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180522232605_titres_etapes_points.js~down",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180522232605_titres_etapes_points.js",
    "importStyle": "{down}",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 496,
    "kind": "file",
    "name": "camino-api/tools/knex/migrations/20180522232610_titres_etapes_documents.js",
    "content": "exports.up = knex => {\r\n  return knex.schema.createTable('titresDocuments', table => {\r\n    table.string('id').primary()\r\n    table\r\n      .string('titreEtapeId', 128)\r\n      .references('titresEtapes.id')\r\n      .notNullable()\r\n      .onDelete('CASCADE')\r\n    table.string('type', 16).notNullable()\r\n    table.string('nom', 1024).notNullable()\r\n    table.string('jorf', 32)\r\n    table.string('nor', 32)\r\n    table.string('url')\r\n    table.string('uri')\r\n    table.string('fichier')\r\n  })\r\n}\r\n\r\nexports.down = knex => {\r\n  return knex.schema.dropTable('titresDocuments')\r\n}\r\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/migrations/20180522232610_titres_etapes_documents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 497,
    "kind": "function",
    "name": "up",
    "memberof": "camino-api/tools/knex/migrations/20180522232610_titres_etapes_documents.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180522232610_titres_etapes_documents.js~up",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180522232610_titres_etapes_documents.js",
    "importStyle": "{up}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 498,
    "kind": "function",
    "name": "down",
    "memberof": "camino-api/tools/knex/migrations/20180522232610_titres_etapes_documents.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180522232610_titres_etapes_documents.js~down",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180522232610_titres_etapes_documents.js",
    "importStyle": "{down}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 499,
    "kind": "file",
    "name": "camino-api/tools/knex/migrations/20180522232620_titres_etapes_erreurs.js",
    "content": "exports.up = knex => {\r\n  return knex.schema.createTable('titresErreurs', table => {\r\n    table\r\n      .string('titreEtapeId', 128)\r\n      .primary()\r\n      .references('titresEtapes.id')\r\n      .onDelete('CASCADE')\r\n    table.boolean('date')\r\n    table.boolean('dateDebut')\r\n    table.boolean('dateFin')\r\n    table.boolean('duree')\r\n    table.boolean('surface')\r\n    table.boolean('points')\r\n    table.boolean('pointsSecurite')\r\n    table.boolean('substances')\r\n    table.boolean('titulaires')\r\n    table.boolean('amodiataires')\r\n    table.boolean('administrations')\r\n  })\r\n}\r\n\r\nexports.down = knex => {\r\n  return knex.schema.dropTable('titresErreurs')\r\n}\r\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/migrations/20180522232620_titres_etapes_erreurs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 500,
    "kind": "function",
    "name": "up",
    "memberof": "camino-api/tools/knex/migrations/20180522232620_titres_etapes_erreurs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180522232620_titres_etapes_erreurs.js~up",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180522232620_titres_etapes_erreurs.js",
    "importStyle": "{up}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 501,
    "kind": "function",
    "name": "down",
    "memberof": "camino-api/tools/knex/migrations/20180522232620_titres_etapes_erreurs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20180522232620_titres_etapes_erreurs.js~down",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20180522232620_titres_etapes_erreurs.js",
    "importStyle": "{down}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 502,
    "kind": "file",
    "name": "camino-api/tools/knex/migrations/20181106210542_travaux_rapports.js",
    "content": "exports.up = knex => {\n  return knex.schema.createTable('titresTravauxRapports', table => {\n    table.string('id').primary()\n    table\n      .string('titreId', 128)\n      .references('titres.id')\n      .onDelete('CASCADE')\n    table.date('date')\n    table.boolean('confirmation')\n    table.jsonb('contenu')\n  })\n}\n\nexports.down = knex => {\n  return knex.schema.dropTable('titresTravauxRapports')\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/migrations/20181106210542_travaux_rapports.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 503,
    "kind": "function",
    "name": "up",
    "memberof": "camino-api/tools/knex/migrations/20181106210542_travaux_rapports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20181106210542_travaux_rapports.js~up",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20181106210542_travaux_rapports.js",
    "importStyle": "{up}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 504,
    "kind": "function",
    "name": "down",
    "memberof": "camino-api/tools/knex/migrations/20181106210542_travaux_rapports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/migrations/20181106210542_travaux_rapports.js~down",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/migrations/20181106210542_travaux_rapports.js",
    "importStyle": "{down}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 505,
    "kind": "file",
    "name": "camino-api/tools/knex/seeds/1-metas.js",
    "content": "const domaines = require('../../sources/domaines.json')\nconst types = require('../../sources/types.json')\nconst domaines_types = require('../../sources/domaines--types.json')\nconst statuts = require('../../sources/statuts.json')\nconst phasesStatuts = require('../../sources/phases-statuts.json')\nconst demarchesTypes = require('../../sources/demarches-types.json')\nconst demarchesTypes_types = require('../../sources/demarches-types--types.json')\nconst demarchesStatuts = require('../../sources/demarches-statuts.json')\nconst demarchesTypes_DemarchesStatuts = require('../../sources/demarches-types--demarches-statuts.json')\nconst etapesTypes = require('../../sources/etapes-types.json')\nconst demarchesTypes_EtapesTypes = require('../../sources/demarches-types--etapes-types.json')\nconst etapesStatuts = require('../../sources/etapes-statuts.json')\nconst etapesTypes_EtapesStatuts = require('../../sources/etapes-types--etapes-statuts.json')\nconst emprises = require('../../sources/emprises.json')\n\nexports.seed = (knex, Promise) =>\n  Promise.all([\n    knex('domaines__types').del(),\n    knex('demarchesTypes__types').del(),\n    knex('demarchesTypes__etapesTypes').del(),\n    knex('demarchesTypes__demarchesStatuts').del(),\n    knex('etapesTypes__etapesStatuts').del(),\n    knex('statuts').del(),\n    knex('emprises').del()\n  ])\n    .then(() =>\n      Promise.all([\n        knex('phasesStatuts').del(),\n        knex('demarchesTypes').del(),\n        knex('etapesTypes').del(),\n        knex('demarchesStatuts').del(),\n        knex('etapesStatuts').del()\n      ])\n    )\n    .then(() => Promise.all([knex('domaines').del(), knex('types').del()]))\n    .then(() =>\n      Promise.all([\n        knex('domaines').insert(domaines),\n        knex('types').insert(types),\n        knex('statuts').insert(statuts),\n        knex('phasesStatuts').insert(phasesStatuts),\n        knex('demarchesTypes').insert(demarchesTypes),\n        knex('etapesTypes').insert(etapesTypes),\n        knex('emprises').insert(emprises),\n        knex('demarchesStatuts').insert(demarchesStatuts),\n        knex('etapesStatuts').insert(etapesStatuts)\n      ])\n    )\n    .then(() =>\n      Promise.all([\n        knex('domaines__types').insert(domaines_types),\n        knex('demarchesTypes__types').insert(demarchesTypes_types),\n        knex('demarchesTypes__demarchesStatuts').insert(\n          demarchesTypes_DemarchesStatuts\n        ),\n        knex('demarchesTypes__etapesTypes').insert(demarchesTypes_EtapesTypes),\n        knex('etapesTypes__etapesStatuts').insert(etapesTypes_EtapesStatuts)\n      ])\n    )\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/seeds/1-metas.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 506,
    "kind": "function",
    "name": "seed",
    "memberof": "camino-api/tools/knex/seeds/1-metas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/seeds/1-metas.js~seed",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/seeds/1-metas.js",
    "importStyle": "{seed}",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      },
      {
        "name": "Promise",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 507,
    "kind": "file",
    "name": "camino-api/tools/knex/seeds/2-substances.js",
    "content": "const substances = require('../../sources/substances.json')\nconst substancesLegales = require('../../sources/substances-legales.json')\nconst substancesLegalesCodes = require('../../sources/substances-legales-codes.json')\nconst substancesSubstancesLegales = require('../../sources/substances--substances-legales.json')\n\nexports.seed = (knex, Promise) =>\n  knex('substances')\n    .del()\n    .then(() => knex('substances__substancesLegales').del())\n    .then(() => knex('substancesLegales').del())\n    .then(() => knex('substancesLegalesCodes').del())\n    .then(() => knex('substancesLegalesCodes').insert(substancesLegalesCodes))\n    .then(() => knex('substancesLegales').insert(substancesLegales))\n    .then(() => knex('substances').insert(substances))\n    .then(() =>\n      knex('substances__substancesLegales').insert(substancesSubstancesLegales)\n    )\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/seeds/2-substances.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 508,
    "kind": "function",
    "name": "seed",
    "memberof": "camino-api/tools/knex/seeds/2-substances.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/seeds/2-substances.js~seed",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/seeds/2-substances.js",
    "importStyle": "{seed}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      },
      {
        "name": "Promise",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 509,
    "kind": "file",
    "name": "camino-api/tools/knex/seeds/3-repertoire.js",
    "content": "const entreprisesC = require('../../sources/entreprises-c.json')\nconst entreprisesF = require('../../sources/entreprises-f.json')\nconst entreprisesG = require('../../sources/entreprises-g.json')\nconst entreprisesH = require('../../sources/entreprises-h.json')\nconst entreprisesM = require('../../sources/entreprises-m.json')\nconst entreprisesM973 = require('../../sources/entreprises-m973.json')\nconst entreprisesR = require('../../sources/entreprises-r.json')\nconst entreprisesS = require('../../sources/entreprises-s.json')\nconst entreprisesW = require('../../sources/entreprises-w.json')\nconst administrations = require('../../sources/administrations.json')\n\nconst entreprises = [\n  ...entreprisesC,\n  ...entreprisesF,\n  ...entreprisesG,\n  ...entreprisesH,\n  ...entreprisesM,\n  ...entreprisesM973,\n  ...entreprisesR,\n  ...entreprisesS,\n  ...entreprisesW\n]\n\nconst findup = (array, key1) =>\n  array.reduce((res, el) => {\n    if (res.find(e => e[key1] === el[key1])) {\n      console.log(\n        'entreprise en doublon (à supprimer dans la source): ',\n        el[key1],\n        el\n      )\n      return res\n    } else {\n      return [...res, el]\n    }\n  }, [])\n\nconst entr = findup(entreprises, 'id')\n\nexports.seed = (knex, Promise) =>\n  Promise.all([knex('entreprises').del(), knex('administrations').del()]).then(\n    () =>\n      Promise.all([\n        knex('entreprises').insert(entr),\n        knex('administrations').insert(administrations)\n      ])\n  )\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/seeds/3-repertoire.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 510,
    "kind": "variable",
    "name": "entreprises",
    "memberof": "camino-api/tools/knex/seeds/3-repertoire.js",
    "static": true,
    "longname": "camino-api/tools/knex/seeds/3-repertoire.js~entreprises",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/knex/seeds/3-repertoire.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 511,
    "kind": "function",
    "name": "findup",
    "memberof": "camino-api/tools/knex/seeds/3-repertoire.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/seeds/3-repertoire.js~findup",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/knex/seeds/3-repertoire.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "key1",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 512,
    "kind": "variable",
    "name": "entr",
    "memberof": "camino-api/tools/knex/seeds/3-repertoire.js",
    "static": true,
    "longname": "camino-api/tools/knex/seeds/3-repertoire.js~entr",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/knex/seeds/3-repertoire.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 513,
    "kind": "function",
    "name": "seed",
    "memberof": "camino-api/tools/knex/seeds/3-repertoire.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/seeds/3-repertoire.js~seed",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/seeds/3-repertoire.js",
    "importStyle": "{seed}",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      },
      {
        "name": "Promise",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 514,
    "kind": "file",
    "name": "camino-api/tools/knex/seeds/4-utilisateurs.js",
    "content": "const utilisateurs = require('../../sources/utilisateurs.json')\nconst permissions = require('../../sources/permissions.json')\n\nexports.seed = (knex, Promise) =>\n  Promise.all([knex('utilisateurs').del(), knex('permissions').del()])\n    .then(() => knex('permissions').insert(permissions))\n    .then(() => knex('utilisateurs').insert(utilisateurs))\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/seeds/4-utilisateurs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 515,
    "kind": "function",
    "name": "seed",
    "memberof": "camino-api/tools/knex/seeds/4-utilisateurs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/seeds/4-utilisateurs.js~seed",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/seeds/4-utilisateurs.js",
    "importStyle": "{seed}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      },
      {
        "name": "Promise",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 516,
    "kind": "file",
    "name": "camino-api/tools/knex/seeds/5-titres.js",
    "content": "const decamelize = require('decamelize')\nconst domaineIds = ['c', 'f', 'g', 'h', 'm', 'm973', 'r', 's', 'w']\nconst files = [\n  'titres',\n  'titresDemarches',\n  'titresEtapes',\n  'titresEmprises',\n  'titresPoints',\n  'titresPointsReferences',\n  'titresDocuments',\n  'titresSubstances',\n  'titresTitulaires',\n  'titresAmodiataires',\n  'titresErreurs'\n]\n\nconst datas = files.reduce(\n  (d, file) =>\n    Object.assign(d, {\n      [file]: domaineIds.reduce((res, domaineId) => {\n        const fileName = decamelize(`titres-${domaineId}-${file}`, '-')\n        return [...res, ...require(`../../sources/${fileName}.json`)]\n      }, [])\n    }),\n  {}\n)\n\nexports.seed = (knex, Promise) =>\n  Promise.all([\n    knex('titresEmprises').del(),\n    knex('titresSubstances').del(),\n    knex('titresPointsReferences').del(),\n    knex('titresTitulaires').del(),\n    knex('titresAmodiataires').del(),\n    knex('titresErreurs').del(),\n    knex('titresDocuments').del()\n  ])\n    .then(() => knex('titresPoints').del())\n    .then(() =>\n      Promise.all([knex('titresEtapes').del(), knex('titresPhases').del()])\n    )\n    .then(() => knex('titresDemarches').del())\n    .then(() => knex('titres').del())\n    .then(() => knex('titres').insert(datas.titres))\n    .then(() => knex('titresDemarches').insert(datas.titresDemarches))\n    .then(() => knex('titresEtapes').insert(datas.titresEtapes))\n    .then(() =>\n      Promise.all([\n        knex('titresSubstances').insert(datas.titresSubstances),\n        knex('titresPoints').insert(datas.titresPoints),\n        knex('titresEmprises').insert(datas.titresEmprises),\n        knex('titresTitulaires').insert(datas.titresTitulaires),\n        knex('titresAmodiataires').insert(datas.titresAmodiataires),\n        knex('titresErreurs').insert(datas.titresErreurs),\n        knex('titresDocuments').insert(datas.titresDocuments)\n      ])\n    )\n    .then(() =>\n      knex('titresPointsReferences').insert(datas.titresPointsReferences)\n    )\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/seeds/5-titres.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 517,
    "kind": "variable",
    "name": "domaineIds",
    "memberof": "camino-api/tools/knex/seeds/5-titres.js",
    "static": true,
    "longname": "camino-api/tools/knex/seeds/5-titres.js~domaineIds",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/knex/seeds/5-titres.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 518,
    "kind": "variable",
    "name": "files",
    "memberof": "camino-api/tools/knex/seeds/5-titres.js",
    "static": true,
    "longname": "camino-api/tools/knex/seeds/5-titres.js~files",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/knex/seeds/5-titres.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 519,
    "kind": "variable",
    "name": "datas",
    "memberof": "camino-api/tools/knex/seeds/5-titres.js",
    "static": true,
    "longname": "camino-api/tools/knex/seeds/5-titres.js~datas",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/knex/seeds/5-titres.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 520,
    "kind": "function",
    "name": "seed",
    "memberof": "camino-api/tools/knex/seeds/5-titres.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/seeds/5-titres.js~seed",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/seeds/5-titres.js",
    "importStyle": "{seed}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      },
      {
        "name": "Promise",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 521,
    "kind": "file",
    "name": "camino-api/tools/knex/seeds/6-titres-travaux-rapports.js",
    "content": "const dateFormat = require('dateformat')\nconst titresTravauxRapports = require('../../sources/titres-travaux-rapports.json')\n\nexports.seed = (knex, Promise) =>\n  knex('titresTravauxRapports')\n    .del()\n    .then(() =>\n      knex('titresTravauxRapports').insert(\n        titresTravauxRapports.map(tr => {\n          tr.date = dateFormat(tr.date, 'yyyy-mm-dd')\n          return tr\n        })\n      )\n    )\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/knex/seeds/6-titres-travaux-rapports.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 522,
    "kind": "function",
    "name": "seed",
    "memberof": "camino-api/tools/knex/seeds/6-titres-travaux-rapports.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/knex/seeds/6-titres-travaux-rapports.js~seed",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/knex/seeds/6-titres-travaux-rapports.js",
    "importStyle": "{seed}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "knex",
        "types": [
          "*"
        ]
      },
      {
        "name": "Promise",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 523,
    "kind": "file",
    "name": "camino-api/tools/mailer/batch.js",
    "content": "const mailer = require('./index')\n\nconst emailsBatch = async (emails, subject, html) => {\n  try {\n    emails.forEach(email => {\n      mailer(email, subject, html)\n    })\n  } catch (e) {\n    console.log(\"erreur lors de l'envoi d'email\")\n  }\n}\n\nmodule.exports = emailsBatch\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/mailer/batch.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 524,
    "kind": "function",
    "name": "emailsBatch",
    "memberof": "camino-api/tools/mailer/batch.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/mailer/batch.js~emailsBatch",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/mailer/batch.js",
    "importStyle": "emailsBatch",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "emails",
        "types": [
          "*"
        ]
      },
      {
        "name": "subject",
        "types": [
          "*"
        ]
      },
      {
        "name": "html",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 525,
    "kind": "file",
    "name": "camino-api/tools/mailer/index.js",
    "content": "const nodemailer = require('nodemailer')\nconst htmlToText = require('nodemailer-html-to-text').htmlToText\n// const smtpTransport = require('nodemailer-smtp-transport')\n\n// const smtpTransportConfig = smtpTransport({\n//   service: process.env.EMAIL_SERVICE,\n//   auth: {\n//     user: process.env.EMAIL_USER,\n//     pass: process.env.EMAIL_PASSWORD\n//   }\n// })\n\nconst smtpTransportConfig = `smtps://${process.env.EMAIL_API_KEY}:${\n  process.env.EMAIL_API_PASSWORD\n}@${process.env.EMAIL_SMTP_SERVER}`\n\nconst from = process.env.EMAIL_USER\n\nconst transport = nodemailer.createTransport(smtpTransportConfig)\n\n// https://www.npmjs.com/package/html-to-text\n// const htmlToTextOptions = {}\n\ntransport.use('compile', htmlToText())\n\nconst mailer = async (to, subject, html) => {\n  const mail = { from, to, subject, html }\n\n  // si on est pas sur le serveur de prod\n  // l'adresse email du destinataire est remplacée\n  if (\n    !process.env.NODE_ENV ||\n    process.env.NODE_ENV !== 'production' ||\n    process.env.ENV !== 'prod' ||\n    !process.env.ENV\n  ) {\n    mail.subject = `\n${mail.subject} | env: ${process.env.ENV} | node: ${process.env.NODE_ENV} | \ndest: ${mail.to}`\n    mail.to = process.env.ADMIN_EMAIL\n  }\n\n  try {\n    const res = await transport.sendMail(mail)\n    console.log(`Message sent: ${mail.to}, ${mail.subject}, ${res.response}`)\n    transport.close()\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nmodule.exports = mailer\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/mailer/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 526,
    "kind": "variable",
    "name": "smtpTransportConfig",
    "memberof": "camino-api/tools/mailer/index.js",
    "static": true,
    "longname": "camino-api/tools/mailer/index.js~smtpTransportConfig",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/mailer/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 527,
    "kind": "variable",
    "name": "from",
    "memberof": "camino-api/tools/mailer/index.js",
    "static": true,
    "longname": "camino-api/tools/mailer/index.js~from",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/mailer/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 528,
    "kind": "variable",
    "name": "transport",
    "memberof": "camino-api/tools/mailer/index.js",
    "static": true,
    "longname": "camino-api/tools/mailer/index.js~transport",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/mailer/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 529,
    "kind": "function",
    "name": "mailer",
    "memberof": "camino-api/tools/mailer/index.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/mailer/index.js~mailer",
    "access": "public",
    "export": true,
    "importPath": "camino-api/camino-api/tools/mailer/index.js",
    "importStyle": "mailer",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "to",
        "types": [
          "*"
        ]
      },
      {
        "name": "subject",
        "types": [
          "*"
        ]
      },
      {
        "name": "html",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 530,
    "kind": "file",
    "name": "camino-api/tools/utils/database/demarches-by-titre.js",
    "content": "require('dotenv').config()\nrequire('../../../database/index')\n\nconst fileCreate = require('../../import/_utils/file-create.js')\n\nconst {\n  titresDemarchesGet\n} = require('../../../database/queries/titres-demarches')\n\nasync function main() {\n  const res = await titresDemarchesGet({\n    titresIds: ['h-cxx-courdemanges-1988'],\n    demarchesIds: undefined\n  })\n\n  await fileCreate('test.json', JSON.stringify(res, null, 2))\n\n  console.log(res)\n\n  process.exit()\n}\n\nmain()\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/utils/database/demarches-by-titre.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 531,
    "kind": "function",
    "name": "main",
    "memberof": "camino-api/tools/utils/database/demarches-by-titre.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/utils/database/demarches-by-titre.js~main",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/utils/database/demarches-by-titre.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 532,
    "kind": "file",
    "name": "camino-api/tools/utils/database/demarches-types.js",
    "content": "require('dotenv').config()\nrequire('../../../database/index')\n\nconst fileCreate = require('../../import/_utils/file-create.js')\n\nconst { demarchesTypesGet } = require('../../../database/queries/metas')\n\nasync function main() {\n  const res = await demarchesTypesGet()\n\n  await fileCreate('test.json', JSON.stringify(res, null, 2))\n\n  console.log(res)\n\n  process.exit()\n}\n\nmain()\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/utils/database/demarches-types.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 533,
    "kind": "function",
    "name": "main",
    "memberof": "camino-api/tools/utils/database/demarches-types.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/utils/database/demarches-types.js~main",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/utils/database/demarches-types.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 534,
    "kind": "file",
    "name": "camino-api/tools/utils/database/demarches-with-no-points.js",
    "content": "require('dotenv').config()\nrequire('../../../database/index')\n\nconst {\n  titresDemarchesGet\n} = require('../../../database/queries/titres-demarches')\n\nasync function main() {\n  let res = await titresDemarchesGet({ demarchesIds: ['abr', 'ren', 'ret'] })\n\n  res = res.filter(({ typeId, etapes }) => {\n    if (typeId === 'ren') {\n      return !etapes.find(te => te.points.length)\n    }\n    return true\n  })\n\n  console.log(res.map(({ id, statutId }) => ({ id, statutId })))\n\n  process.exit()\n}\n\nmain()\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/utils/database/demarches-with-no-points.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 535,
    "kind": "function",
    "name": "main",
    "memberof": "camino-api/tools/utils/database/demarches-with-no-points.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/utils/database/demarches-with-no-points.js~main",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/utils/database/demarches-with-no-points.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 536,
    "kind": "file",
    "name": "camino-api/tools/utils/database/utilisateurs-by-titre.js",
    "content": "require('dotenv').config()\nrequire('../../../database/index')\n\nconst { utilisateursGet } = require('../../../database/queries/utilisateurs')\nconst { titreGet } = require('../../../database/queries/titres')\n\nasync function main() {\n  const titre = await titreGet('m-pxm-esperance-1993')\n\n  const entrepriseIds = titre.titulaires.map(t => t.id)\n\n  console.log('titre.titulaires', titre.titulaires)\n  console.log('entrepriseIds', entrepriseIds)\n\n  const utilisateurs = await utilisateursGet({\n    entrepriseIds,\n    noms: undefined,\n    administrationIds: undefined,\n    permissionIds: undefined\n  })\n\n  console.log('utilisateurs', utilisateurs)\n\n  process.exit()\n}\n\nmain()\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/utils/database/utilisateurs-by-titre.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 537,
    "kind": "function",
    "name": "main",
    "memberof": "camino-api/tools/utils/database/utilisateurs-by-titre.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "camino-api/tools/utils/database/utilisateurs-by-titre.js~main",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/utils/database/utilisateurs-by-titre.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 538,
    "kind": "file",
    "name": "camino-api/tools/utils/graphql-dsl-to-query-convert.js",
    "content": "const fetch = require('node-fetch')\nconst { introspectionQuery } = require('graphql')\nconst fs = require('fs')\nconst url = `http://localhost:4000`\n\nfetch(url, {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({ query: introspectionQuery })\n})\n  .then(res => res.json())\n  .then(res =>\n    fs.writeFileSync(\n      'docs/graphql/schema.json',\n      JSON.stringify(res.data, null, 2)\n    )\n  )\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/utils/graphql-dsl-to-query-convert.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 539,
    "kind": "variable",
    "name": "url",
    "memberof": "camino-api/tools/utils/graphql-dsl-to-query-convert.js",
    "static": true,
    "longname": "camino-api/tools/utils/graphql-dsl-to-query-convert.js~url",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/utils/graphql-dsl-to-query-convert.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 540,
    "kind": "file",
    "name": "camino-api/tools/utils/index.js",
    "content": "const dedup = (...arrays) =>\n  arrays.reduce(\n    (result, array) =>\n      array.reduce(\n        (res, el) =>\n          !res.find(e => el.id && e.id === el.id) ? [...res, el] : res,\n        result\n      ),\n    []\n  )\n\nconst findup = (array, key1, key2) =>\n  array.reduce(\n    (res, el) =>\n      res.find(e => e[key1] === el[key1] && e[key2] === el[key2])\n        ? res\n        : [...res, el],\n    []\n  )\n\nmodule.exports = {\n  dedup,\n  findup\n}\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 541,
    "kind": "function",
    "name": "dedup",
    "memberof": "camino-api/tools/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/utils/index.js~dedup",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/utils/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "arrays",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 542,
    "kind": "function",
    "name": "findup",
    "memberof": "camino-api/tools/utils/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "camino-api/tools/utils/index.js~findup",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/utils/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "key1",
        "types": [
          "*"
        ]
      },
      {
        "name": "key2",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 543,
    "kind": "file",
    "name": "camino-api/tools/utils/json/error-find.js",
    "content": "const entreprisesR = require('../sources/repertoire-entreprises-r.json')\nconst entreprisesC = require('../sources/repertoire-entreprises-c.json')\nconst entreprisesF = require('../sources/repertoire-entreprises-f.json')\nconst entreprisesG = require('../sources/repertoire-entreprises-g.json')\nconst entreprisesH = require('../sources/repertoire-entreprises-h.json')\nconst entreprisesM = require('../sources/repertoire-entreprises-m.json')\nconst entreprisesM973 = require('../sources/repertoire-entreprises-m973.json')\nconst entreprisesS = require('../sources/repertoire-entreprises-s.json')\nconst entreprisesW = require('../sources/repertoire-entreprises-w.json')\n\nconst entreprises = [\n  ...entreprisesC,\n  ...entreprisesF,\n  ...entreprisesG,\n  ...entreprisesH,\n  ...entreprisesM,\n  ...entreprisesM973,\n  ...entreprisesR,\n  ...entreprisesS,\n  ...entreprisesW\n]\n\nconst titulairesR = require('../sources/titres-r-titulaires.json')\nconst titulairesC = require('../sources/titres-c-titulaires.json')\nconst titulairesF = require('../sources/titres-f-titulaires.json')\nconst titulairesG = require('../sources/titres-g-titulaires.json')\nconst titulairesH = require('../sources/titres-h-titulaires.json')\nconst titulairesM = require('../sources/titres-m-titulaires.json')\nconst titulairesM973 = require('../sources/titres-m973-titulaires.json')\nconst titulairesS = require('../sources/titres-s-titulaires.json')\nconst titulairesW = require('../sources/titres-w-titulaires.json')\n\nconst titulaires = [\n  ...titulairesR,\n  ...titulairesC,\n  ...titulairesF,\n  ...titulairesG,\n  ...titulairesH,\n  ...titulairesM,\n  ...titulairesM973,\n  ...titulairesS,\n  ...titulairesW\n]\n\n// demarches.forEach(d => {\n//   const ti = titres.find(t => t.id === d.titre_id)\n//   if (!ti) console.log(d.titre_id)\n// })\n\ntitulaires.forEach(t => {\n  const d = entreprises.find(e => e.id === t.entreprise_id)\n  if (!d) {\n    console.log(t.titre_etape_id, t.entreprise_id)\n  }\n})\n",
    "static": true,
    "longname": "/Volumes/fr-work/Sites/camino-api/tools/utils/json/error-find.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 544,
    "kind": "variable",
    "name": "entreprises",
    "memberof": "camino-api/tools/utils/json/error-find.js",
    "static": true,
    "longname": "camino-api/tools/utils/json/error-find.js~entreprises",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/utils/json/error-find.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 545,
    "kind": "variable",
    "name": "titulaires",
    "memberof": "camino-api/tools/utils/json/error-find.js",
    "static": true,
    "longname": "camino-api/tools/utils/json/error-find.js~titulaires",
    "access": "public",
    "export": false,
    "importPath": "camino-api/camino-api/tools/utils/json/error-find.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# Camino API\n\n[![Build Status](https://travis-ci.org/MTES-MCT/camino-api.svg?branch=master)](https://travis-ci.org/MTES-MCT/camino-api)\n\n> API GraphQL de [Camino](http://camino.beta.gouv.fr/): [api.camino.beta.gouv.fr](https://api.camino.beta.gouv.fr)\n\n---\n\n## Technologies\n\n- [Node.js](https://nodejs.org/)\n- [Express.js](http://expressjs.com)\n- [PostgreSQL](https://www.postgresql.org/)\n- [Express-GraphQL](https://github.com/graphql/express-graphql)\n- [Knex.js](https://knexjs.org/)\n- [Objection.js](http://vincit.github.io/objection.js/)\n- [Eslint](https://eslint.org/)\n- [Prettier](https://prettier.io/)\n- [Standardjs](https://standardjs.com/)\n- [Docker](https://www.docker.com/)\n\n---\n\n## Environnement\n\nPour que l'application fonctionne, sont requis:\n\n- Node.js (v.10 ou plus) et npm\n- Une base de données PostgreSQL (v.10 ou plus)\n\n---\n\n## Configuration et imports des données\n\n- Créer une base de données `camino`.\n- Renommer le fichier `.env.example` en `.env` et le compléter.\n\n```bash\n# installe les dépendances\nnpm install\n\n# importe les données au format .json\n# depuis google spreadsheets vers './tools/sources'\nnpm run import\n\n# crée les tables dans la base de données\n# et importe les données depuis './tools/sources'\nnpm run migrate\n\n# met à jour les données\nnpm run daily\n```\n\n---\n\n## Développement\n\n```bash\n# démarre le serveur avec nodemon\nnpm run dev\n```\n\n---\n\n## Tests\n\n```bash\n# lance les tests\nnpm run test\n```\n\n---\n\n## Docker\n\n### Environnement de développement\n\nPour développer sans installer PostgreSQL localement.\n\n```bash\n# démarre l'application et la base de données dans des conteneurs Docker\n# en mode `development`\n# accessible à http://localhost:NODE_PORT\ndocker-compose -f ./docker-compose.localhost.yml up --build\n```\n\n### Environnement de test\n\nPour tester l'application en local dans un environnement de production\n\nPré-requis:\n\n- une installation locale active de https://github.com/jwilder/nginx-proxy\n- un certificat ssl auto-signé\n- [instructions](https://medium.com/@francoisromain/set-a-local-web-development-environment-with-custom-urls-and-https-3fbe91d2eaf0)\n\n```bash\n# démarre l'application et la base de données dans des containers Docker\n# en mode `production`\n# accessible à https://api.camino.local\ndocker-compose -f ./docker-compose.local.yml up --build\n```\n\n### Environnement de production\n\nPré-requis:\n\n- une installation active de https://github.com/jwilder/nginx-proxy\n- [instructions](https://medium.com/@francoisromain/host-multiple-websites-with-https-inside-docker-containers-on-a-single-server-18467484ab95)\n\n```bash\n# démarre l'application et la base de données dans des containers Docker\n# en mode `production`\n# accessible à http://api.camino.beta.gouv.fr\ndocker-compose -f ./docker-compose.prod.yml up -d --build\n```\n\n---\n\n## Structure des fichiers\n\n```bash\n.\n├── index.js                    # `point d'entrée`\n│\n├── api                         # `API graphql`\n│   ├── resolvers               # `liens entre l'API et la base de données`\n│   ├── schemas                 # `description des nœuds de l'API`\n│   └── types                   # `types graphQl customs`\n│\n├── config                      #\n│   ├── index.js                # `variables globales`\n│   └── knex.js                 # `connexion à la base de données`\n│\n├── database                    # `base de données PostgresQL`\n│   ├── models                  # `modèles de la base de données (knex.js / objection.js)`\n│   └── queries                 # `requêtes à la base de données (knex.js / objection.js)`\n│\n├── docs                        # `documentation et exemples`\n│\n├── tasks                       # `logique métier`\n│   ├── _utils                  # `scripts de mise à jour de la base de données`\n│   ├── daily                   # `scripts quotidiens (npm run daily)`\n│   └── etape-update            # `script effectués lors de la mise à jour d'une étape`\n│\n└── tools                       # `outils`\n    ├── export                  # `exportation de la base de données vers des spreadsheets (npm run export)`\n    ├── import                  # `import de spreadsheets vers des fichiers json dans /sources (npm run import)`\n    ├── knex                    # `scripts de création et d'import de la base de données (npm run migrate)`\n    │   ├── migrations          # `création de la base de données`\n    │   └── seeds               # `import depuis les fichier /sources vers la base de données`\n    ├── mailer                  # `utilitaire d'envoi d'email (Nodemailer)`\n    ├── sources                 # `données sources sous forme de fichiers json`\n    └── utils                   #\n\n```\n\n---\n\n## PostgreSQL\n\n![camino database schema](manual/db/camino-db.png)\n\n---\n\n## Contribution\n\nVoir [contributing.md](contributing.md) (en anglais) pour plus d'infos.\n\n---\n\n## Crédits\n\n### Production\n\n- [La Fabrique Numérique, Ministère de la transition écologique et solidaire](https://www.ecologique-solidaire.gouv.fr/inauguration-fabrique-numerique-lincubateur-des-ministeres-charges-lecologie-et-des-territoires)\n\n### Équipe\n\n- Guillaume Levieux, intrapreneur\n- Joeffrey Arruyer, coach\n- [François Romain](http://francoisromain.com), développeur\n\n---\n\n## Licence\n\nCamino API, le cadastre minier numérique ouvert\n\n[AGPL 3 ou plus récent](https://spdx.org/licenses/AGPL-3.0-or-later.html)\n",
    "longname": "/Volumes/fr-work/Sites/camino-api/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"camino-api\",\n  \"version\": \"0.7.0\",\n  \"description\": \"Camino api\",\n  \"license\": \"AGPL-3.0-or-later\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/MTES-MCT/camino-api.git\"\n  },\n  \"author\": {\n    \"name\": \"François Romain\",\n    \"email\": \"francoisromain@gmail.com\",\n    \"url\": \"https://francoisromain.com\"\n  },\n  \"homepage\": \"https://github.com/MTES-MCT/camino-api\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"import\": \"node ./tools/import/index.js\",\n    \"export\": \"node ./tools/export/index.js\",\n    \"export:users\": \"node ./tools/export/utilisateurs.js\",\n    \"export:rapports\": \"node ./tools/export/titres-travaux-rapports.js\",\n    \"migrate:rollback\": \"npx knex --knexfile=./tools/knex/config.js migrate:rollback\",\n    \"migrate:latest\": \"npx knex --knexfile=./tools/knex/config.js migrate:latest\",\n    \"seed:run\": \"npx npx knex --knexfile=./tools/knex/config.js seed:run\",\n    \"migrate\": \"npm run migrate:rollback && npm run migrate:latest && npm run seed:run\",\n    \"migrate-prog\": \"node ./tools/knex/index.js\",\n    \"daily\": \"node ./tasks/daily/index.js\",\n    \"start\": \"node ./index.js\",\n    \"dev\": \"nodemon ./index.js\",\n    \"user-add\": \"node ./tasks/utilisateur-add.js\",\n    \"graphql:schema\": \"node ./tools/utils/graphql-dsl-to-query-convert.js\",\n    \"test\": \"jest --verbose\",\n    \"commit\": \"npx git-cz\",\n    \"release\": \"standard-version && git push --follow-tags origin master && conventional-github-releaser\",\n    \"doc\": \"npx esdoc\"\n  },\n  \"dependencies\": {\n    \"@sentry/node\": \"^4.5.3\",\n    \"bcrypt\": \"^3.0.3\",\n    \"chalk\": \"^2.4.2\",\n    \"compression\": \"^1.7.3\",\n    \"cors\": \"^2.8.5\",\n    \"crypto-random-string\": \"^1.0.0\",\n    \"dateformat\": \"^3.0.3\",\n    \"decamelize\": \"^2.0.0\",\n    \"dotenv\": \"^6.2.0\",\n    \"email-regex\": \"^3.0.0\",\n    \"express\": \"^4.16.4\",\n    \"express-graphql\": \"^0.7.1\",\n    \"express-jwt\": \"^5.3.1\",\n    \"fs-extra\": \"^7.0.1\",\n    \"google-spreadsheet\": \"^2.0.7\",\n    \"google-spreadsheet-to-json\": \"^1.0.0\",\n    \"graphql\": \"^14.1.1\",\n    \"graphql-iso-date\": \"^3.6.1\",\n    \"jsonwebtoken\": \"^8.4.0\",\n    \"knex\": \"0.16.3\",\n    \"nodemailer\": \"^5.1.1\",\n    \"nodemailer-html-to-text\": \"^3.0.0\",\n    \"nodemailer-smtp-transport\": \"^2.7.4\",\n    \"objection\": \"^1.5.3\",\n    \"p-queue\": \"^3.0.0\",\n    \"pg\": \"^7.8.0\"\n  },\n  \"devDependencies\": {\n    \"commitizen\": \"^3.0.5\",\n    \"cz-conventional-changelog\": \"^2.1.0\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-integrate-manual-plugin\": \"^1.0.0\",\n    \"esdoc-node\": \"^1.0.4\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^5.12.1\",\n    \"eslint-config-prettier\": \"^3.6.0\",\n    \"eslint-config-standard\": \"^12.0.0\",\n    \"eslint-plugin-compat\": \"^2.6.3\",\n    \"eslint-plugin-import\": \"^2.15.0\",\n    \"eslint-plugin-jest\": \"^22.1.3\",\n    \"eslint-plugin-jsdoc\": \"^4.0.1\",\n    \"eslint-plugin-node\": \"^8.0.1\",\n    \"eslint-plugin-promise\": \"^4.0.1\",\n    \"eslint-plugin-standard\": \"^4.0.0\",\n    \"jest\": \"^23.6.0\",\n    \"node-fetch\": \"^2.3.0\",\n    \"nodemon\": \"^1.18.9\",\n    \"standard-version\": \"^4.4.0\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"standard\",\n      \"prettier\",\n      \"prettier/standard\"\n    ],\n    \"env\": {\n      \"node\": true,\n      \"jest/globals\": true\n    },\n    \"plugins\": [\n      \"jest\",\n      \"jsdocs\"\n    ],\n    \"rules\": {\n      \"jsdoc/check-examples\": 1,\n      \"jsdoc/check-param-names\": 1,\n      \"jsdoc/check-tag-names\": 1,\n      \"jsdoc/check-types\": 1,\n      \"jsdoc/newline-after-description\": 1,\n      \"jsdoc/no-undefined-types\": 1,\n      \"jsdoc/require-description\": 1,\n      \"jsdoc/require-description-complete-sentence\": 1,\n      \"jsdoc/require-example\": 1,\n      \"jsdoc/require-hyphen-before-param-description\": 1,\n      \"jsdoc/require-param\": 1,\n      \"jsdoc/require-param-description\": 1,\n      \"jsdoc/require-param-name\": 1,\n      \"jsdoc/require-param-type\": 1,\n      \"jsdoc/require-returns\": 1,\n      \"jsdoc/require-returns-description\": 1,\n      \"jsdoc/require-returns-type\": 1,\n      \"jsdoc/valid-types\": 1\n    }\n  },\n  \"config\": {\n    \"commitizen\": {\n      \"path\": \"./node_modules/cz-conventional-changelog\"\n    }\n  },\n  \"esdoc\": {\n    \"source\": \"./\",\n    \"destination\": \"./docs\",\n    \"plugins\": [\n      {\n        \"name\": \"esdoc-standard-plugin\",\n        \"option\": {\n          \"manual\": {\n            \"index\": \"./manual/infos.md\",\n            \"asset\": \"./manual/asset\",\n            \"files\": [\n              \"./manual/docker.md\"\n            ]\n          }\n        }\n      },\n      {\n        \"name\": \"esdoc-node\"\n      },\n      {\n        \"name\": \"esdoc-ecmascript-proposal-plugin\",\n        \"option\": {\n          \"objectRestSpread\": true\n        }\n      }\n    ],\n    \"excludes\": [\n      \"(node_modules|docs)\"\n    ]\n  }\n}\n",
    "longname": "/Volumes/fr-work/Sites/camino-api/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "content": "# Camino\n\n> le cadastre minier numérique ouvert\n\n[Camino](http://camino.beta.gouv.fr/) est le nouvel outil de gestion du domaine minier de l'administration. Il présente les caractéristiques des titres miniers sur une carte et permet de les suivre à chaque étape de leur vie.\n\n## Usages\n\n- Les **agents publics** centralisent leurs contributions et bénéficient d’une vision partagée.\n- Les **entreprises** gagnent en visibilité sur leur business et cela simplifie leurs démarches.\n- Les **citoyens** accèdent simplement aux informations publiques.\n",
    "longname": "/Volumes/fr-work/Sites/camino-api/manual/infos.md",
    "name": "./manual/infos.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "/Volumes/fr-work/Sites/camino-api/manual/asset",
    "name": "./manual/asset",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Volumes/fr-work/Sites/camino-api/manual/docker.md",
    "name": "./manual/docker.md",
    "content": "# Manipuler la base de données\n\n## Recréer la base de données dans son conteneur Docker\n\n```sh\n# stopper le conteneur de l'API\ndocker stop camino-api_app_1\n\n# démarrer psql dans le conteneur de la base de données\ndocker exec -it camino-api_postgres_1 psql postgres\n```\n\n```psql\n# supprimer la base de données et la re-créer\nDROP DATABASE camino; CREATE DATABASE camino;\n\n# quitter psql\n\\q\n```\n\n```sh\n# redémarrer le conteneur Docker de l'API\ndocker start camino-api_app_1\n```\n\n## Démarrer un shell dans le conteneur Docker de l'API\n\n```sh\n# start a shell in the camino-api app\ndocker exec -it camino-api_app_1 sh\n```\n\n## Faire un dump de la base de données locale et l'uploader sur le serveur\n\n```bash\npg_dump camino > camino.sql && scp camino.sql <user>@<ip>:/srv/tmp/dumps/camino.sql\n```\n\n## Importer la base de données depuis le répertoire tmp vers le conteneur Docker\n\n```sh\n# se placer dans le dossier /tmp ou se trouve le dump\ncd /srv/tmp/dumps/\n\n# importer la base de données depuis le dump\ncat camino.sql | docker exec -i caminoapi_postgres_1 psql -U postgres -d camino\n```\n",
    "static": true,
    "access": "public"
  }
]